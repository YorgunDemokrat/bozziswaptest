{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","utils/formatBalance.ts","config/constants/contracts.ts","utils/addressHelpers.ts","config/constants/tokens.ts","utils/bigNumber.ts","components/Layout/Row.tsx","state/mint/actions.ts","state/swap/actions.ts","config/constants/multicall/index.ts","hooks/useContract.ts","components/Layout/Column.tsx","utils/contractHelpers.ts","components/Balance.tsx","utils/index.ts","config/constants/index.ts","state/pools/hooks.ts","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/bridge/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/info/index.ts","state/index.ts","utils/multicall.ts","config/index.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchDividendPoolPublic.ts","state/pools/fetchMaterialPoolPublic.ts","state/pools/fetchVaultUser.ts","state/pools/fetchDividendPoolUser.ts","state/pools/fetchMaterialPoolUser.ts","state/pools/fetchPhantzPoolUser.ts","state/pools/index.ts","state/user/actions.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","config/constants/types.ts","state/user/hooks/index.tsx","hooks/useToast.ts","utils/wrappedCurrency.ts","state/multicall/hooks.ts","hooks/useTheme.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/farms/hooks.ts","state/lists/hooks.ts","config/constants/lists.ts","state/bridge/actions.ts","components/QuestionHelper/index.tsx","state/lists/actions.ts","components/ConnectWalletButton.tsx","hooks/useRefresh.ts","utils/prices.ts","state/multicall/actions.ts","utils/getRpcUrl.ts","utils/providers.ts","views/Pools/helpers.tsx","config/constants/pools.ts","config/constants/community.ts","state/wallet/hooks.ts","utils/compoundApyHelpers.ts","utils/calls/farms.ts","utils/calls/calculations.ts","utils/wallet.ts","state/transactions/hooks.tsx","state/transactions/actions.ts","state/info/actions.ts","components/Card/index.tsx","config/localization/languages.ts","state/swap/hooks.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","hooks/useDebounce.ts","hooks/usePairs.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","state/community/fetchPools.ts","state/community/fetchPoolsUser.ts","state/community/index.ts","config/constants/nfts.ts","hooks/useTokenBalance.ts","utils/isZero.ts","contexts/Localization/helpers.ts","utils/apr.ts","utils/uriToHttp.ts","hooks/useAuth.ts","hooks/usePersistState.ts","utils/currencyId.ts","state/application/hooks.ts","state/user/hooks/helpers.ts","config/constants/swapWarningTokens.ts","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","config/constants/farms.ts","components/TransactionConfirmationModal/pngs/success.png","components/TransactionConfirmationModal/index.tsx","components/Layout/Page.tsx","state/block/hooks.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/GradientHeader.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","components/App/GradientBody.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","state/profile/index.tsx","state/profile/getProfile.ts","utils/ENS/parseENSAddress.ts","state/block/index.ts","hooks/useLastUpdated.ts","components/Tags.tsx","components/Loader/CircleLoader.tsx","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","utils/web3React.ts","components/Loader/Dots.tsx","state/user/hooks/useUserAddedTokens.ts","hooks/useTotalSupply.ts","utils/collectibles.ts","state/teams/helpers.ts","config/constants/teams.ts","state/pools/helpers.ts","state/community/helpers.ts","hooks/useWrapCallback.ts","components/Layout/Container.tsx","components/Menu/peak.png","components/Menu/SubNav.tsx","views/GradientPage.tsx","components/TokenImage/index.tsx","hooks/usePreviousValue.ts","components/Layout/Flex.tsx","components/Loading.tsx","components/ApyCalculatorModal/index.tsx","utils/maxAmountSpend.ts","components/PageHeader/PageHeader.tsx","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/application/actions.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","config/constants/priceHelperLps.ts","state/collectibles/index.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","config/constants/meta.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","components/PositionCard/index.tsx","config/constants/networks.ts","utils/farmHelpers.ts","hooks/useParsedQueryString.ts","components/Select/Select.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/Loader/PageLoader.tsx","routerHistory.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","state/teams/index.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","utils/getTimePeriods.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/DividendPoolCard/DividendCardActions/ApprovalAction.tsx","views/Pools/components/DividendPoolCard/DividendStakeModal.tsx","views/Pools/components/DividendPoolCard/DividendCardActions/StakeActions.tsx","views/Pools/components/DividendPoolCard/DividendCardActions/HarvestActions.tsx","views/Pools/components/DividendPoolCard/DividendCardActions/index.tsx","views/Pools/components/DividendPoolCard/index.tsx","views/Pools/components/MaterialPoolCard/DividendCardActions/ApprovalAction.tsx","views/Pools/components/MaterialPoolCard/DividendStakeModal.tsx","views/Pools/components/MaterialPoolCard/DividendCardActions/StakeActions.tsx","views/Pools/components/MaterialPoolCard/DividendCardActions/HarvestActions.tsx","views/Pools/components/MaterialPoolCard/DividendCardActions/index.tsx","views/Pools/components/MaterialPoolCard/index.tsx","views/Pools/components/PhantzPoolCard/PhantzCardActions/HarvestActions.tsx","views/Pools/components/PhantzPoolCard/PhantzCardActions/index.tsx","views/Pools/components/PhantzPoolCard/index.tsx","state/collectibles/hooks.ts","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Community/components/ToggleView/ToggleView.tsx","views/Pools/index.tsx","views/Community/helpers.tsx","views/Community/components/PoolCard/AprRow.tsx","views/Community/components/PoolCard/StyledCard.tsx","views/Community/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Community/components/PoolCard/CardFooter/index.tsx","views/Community/components/PoolCard/StyledCardHeader.tsx","views/Community/hooks/useApprove.ts","views/Community/components/PoolCard/CardActions/ApprovalAction.tsx","views/Community/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Community/components/PoolCard/Modals/PercentageButton.tsx","views/Community/hooks/useStakePool.ts","views/Community/hooks/useUnstakePool.ts","views/Community/components/PoolCard/Modals/StakeModal.tsx","views/Community/components/PoolCard/CardActions/StakeActions.tsx","views/Community/hooks/useHarvestPool.ts","views/Community/components/PoolCard/Modals/CollectModal.tsx","views/Community/components/PoolCard/CardActions/HarvestActions.tsx","views/Community/components/PoolCard/CardActions/index.tsx","views/Community/components/PoolCard/index.tsx","views/Community/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Community/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Community/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Community/components/CakeVaultCard/FeeSummary.tsx","views/Community/components/CakeVaultCard/VaultStakeModal.tsx","views/Community/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Community/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Community/components/CakeVaultCard/VaultCardActions/index.tsx","views/Community/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Community/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Community/components/CakeVaultCard/index.tsx","views/Community/components/DividendPoolCard/DividendCardActions/ApprovalAction.tsx","views/Community/components/DividendPoolCard/DividendStakeModal.tsx","views/Community/components/DividendPoolCard/DividendCardActions/StakeActions.tsx","views/Community/components/DividendPoolCard/DividendCardActions/HarvestActions.tsx","views/Community/components/DividendPoolCard/DividendCardActions/index.tsx","views/Community/components/DividendPoolCard/index.tsx","views/Community/components/PoolTabButtons.tsx","views/Community/index.tsx","state/community/hooks.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","fetchInitialLocales","a","enLocale","get","fetchLocale","currentLocale","prevState","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","process","getDecimalAmount","amount","decimals","BigNumber","times","BIG_TEN","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","getAddress","address","ChainId","MAINNET","getCakeAddress","tokens","glide","getMaterialAddress","mtrl","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","wela","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getDividendPoolAddress","getPhantzPoolAddress","getPhantzV2PoolAddress","getMaterialPoolAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getFarmAuctionAddress","GLIDE","Token","USDC","WELA","symbol","projectLink","sugar","ela","eth","usdc","bnb","busd","ht","husd","htfilda","elk","rinu","rinuLP","finu","finuLP","beer","beerLP","sloth","slothLP","bun","bunLP","BIG_ZERO","BIG_ONE","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","MULTICALL_NETWORKS","ETHEREUM","TESTNET","BINANCE","HECO","useERC20","useMemo","getBep20Contract","getSigner","useCake","getCakeContract","useMasterchef","getMasterchefContract","useCommunityChef","id","getCommunityContract","useSousChef","getSouschefContract","useCakeVaultContract","getCakeVaultContract","usePhantzPoolContract","getPhantzPoolContract","usePhantzV2PoolContract","getPhantzV2PoolContract","useContract","ABI","withSignerIfPossible","account","getContract","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","Column","ColumnCenter","AutoColumn","abi","signer","signerOrProvider","ethers","Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getNativeSourceMediator","AMB_NATIVE_ERC_ABI","getTokenSourceMediator","MULTI_AMB_ERC_ERC_ABI","getErc677Contract","ERC677_ABI","config","communityConfig","find","pool","sousId","poolCategory","PoolCategory","sousChefBnb","sousChef","contractAddress","poolsConfig","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","cakeAbi","getMaterialContract","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","cakeVaultAbi","getDividendPoolContract","dividendPoolAbi","phantzPoolAbi","getMaterialPoolContract","materialPoolAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getFarmAuctionContract","farmAuctionAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","from","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","AddressZero","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","VALIDATOR_TIMEOUT","BLOCKED_ADDRESSES","APPROVE_BALANCE_ADDRESSES","useFetchPublicPoolsData","dispatch","useAppDispatch","slowRefresh","useRefresh","fetchPoolsPublicData","getBlockNumber","blockNumber","fetchPoolsPublicDataAsync","fetchPoolsStakingLimitsAsync","usePools","fastRefresh","fetchPoolsUserDataAsync","useSelector","pools","userDataLoaded","map","transformPool","usePoolsPublicData","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","glideAtLastUserActionAsString","glideAtLastUserAction","lastDepositedTime","lastUserActionTime","useFetchDividendPool","farms","fetchDividendPoolPublicData","fetchDividendPoolUserData","useDividendPool","dividendPool","totalStakedAsString","totalStaked","startBlock","apr","stakingTokenPrice","earningTokenPrice","allowanceAsString","allowance","stakingTokenBalanceAsString","stakingTokenBalance","stakedBalanceAsString","stakedBalance","pendingRewardAsString","pendingReward","useFetchMaterialPool","fetchMaterialPoolPublicData","fetchMaterialPoolUserData","useMaterialPool","materialPool","materialStakedBalanceAsString","materialStakedBalance","useFetchPhantzPool","fetchPhantzPoolUserData","useFetchPhantzV2Pool","fetchPhantzV2PoolUserData","usePhantzPool","version","createReducer","builder","addCase","updateBlockNumber","action","payload","Math","max","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","userExpertMode","userSingleHopOnly","userSlippageTolerance","userDeadline","pairs","timestamp","audioPlay","isDark","userFarmStakedOnly","FarmStakedOnly","ON_FINISHED","watchlistTokens","watchlistPools","lastUpdateVersionTimestamp","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","updateUserSingleHopOnly","addSerializedToken","serializedToken","removeSerializedToken","addSerializedPair","serializedPair","token0","token1","removeSerializedPair","tokenAAddress","tokenBAddress","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","addWatchlistToken","tokenWatchlist","includes","newTokens","filter","x","addWatchlistPool","poolsWatchlist","newPools","now","addTransaction","transactions","hash","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","concat","UNSUPPORTED_LIST_URLS","reduce","memo","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","callResults","addMulticallListeners","calls","blocksPerFetch","listeners","callListeners","call","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","protocol","overview","chartData","byAddress","updateProtocolData","protocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","poolData","addPoolKeys","poolAddresses","updatePoolChartData","poolAddress","updatePoolTransactions","updateTokenData","tokenData","addTokenKeys","tokenAddresses","priceData","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","secondsInterval","oldestFetchedTimestamp","PERSISTED_KEYS","store","configureStore","devTools","reducer","block","blockReducer","farmsReducer","poolsReducer","community","communityReducer","info","infoReducer","collectibles","collectiblesReducer","application","user","swap","bridge","mint","burn","multicall","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useDispatch","multi","itf","utils","Interface","calldata","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","EXPONENTIAL_AT","DECIMAL_PLACES","ESC_BLOCK_TIME","GLIDE_PER_BLOCK","BLOCKS_PER_YEAR","GLIDE_START_BLOCK","GLIDE_BONUS_PERIOD","GLIDE_REDUCTION_PERIOD","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","endBlock","toJSON","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","isFinished","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingGlide","fetchPublicVaultData","method","sharePrice","shares","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","convertSharesToCake","cakeAsBigNumber","fetchVaultFees","dividendPoolContract","fetchDividendPoolData","remainingReward","rewardsPerBlock","poolInfo","currentDepositAmount","priceFarm","f","pid","quoteToken","usdcPrice","token","getPoolApr","materialPoolContract","fetchMaterialPoolData","cakeVaultContract","fetchVaultUser","userContractResponse","glideContract","fetchDividendPoolUser","glideAllowance","balanceOf","glideBalance","glideStaked","glidePending","fetchMaterialPoolUser","phantzPoolContract","phantzV2PoolContract","fetchPhantzPoolUser","glideRewards","fetchPhantzV2PoolUser","phantzPool","phantzV2Pool","currentBlock","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","Number","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","parseFloat","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","publicDividendPoolInfo","publicMaterialPoolInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useAllTokens","useCombinedActiveList","useBridgeableTokens","origin","destination","useBridgeTokenMap","useBridgeableTokenList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","useCurrency","isBNB","toUpperCase","PoolIds","NftType","LotteryStatus","AuctionStatus","useIsExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","toggleThemeAction","useUserSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","useUserFarmStakedOnly","isActive","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","useUserTransactionTTL","deadline","useAddUserToken","serializeToken","useRemoveUserAddedToken","serializePair","pair","usePairAdder","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","pinnedPairs","generatedPairs","flatMap","base","savedSerializedPairs","userPairs","forChain","pairId","deserializeToken","combinedList","keyed","sorted","sortsBefore","useWatchlistTokens","useWatchlistPools","useToast","toastContext","ToastsContext","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","isMethodArg","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","Infinity","useCallsData","serializedCallKeys","JSON","stringify","c","sort","callKeys","parse","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","inputs","callData","useBlockNumber","useMultipleContractSingleData","useTheme","theme","StyledThemeContext","useTokenAllowance","ApprovalState","owner","spender","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","isApproveBalanceToken","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","useApproveCallbackFromTrade","trade","allowedSlippage","computeSlippageAdjustedAmounts","usePollFarmsData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","useFarms","useFarmFromPid","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","useUsdcPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbUsdc","bnbUsdcFarm","usePriceCakeUsdc","cakePriceUsdcAsString","sortByListPriority","urlA","urlB","first","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","BRIDGE_TOKEN_LIST","destinationMatch","UNSUPPORTED_TOKEN_LIST","useIsListActive","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","RefreshContext","fast","slow","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","split","nodes","RPC_URL","sample","getRpcUrl","providers","JsonRpcProvider","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsDisplayBalance","convertCakeToShares","cake","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","isHighValueToken","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","CORE","harvest","sortOrder","COMMUNITY","farmSymbol","pairToken","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","stakeFarm","enterStaking","wait","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","rewardPerPhase","phaseNumber","getGlidesPerYear","rewardSum","totalBlocks","lt","iterationBlocks","plus","nextBlockBorder","blocksForReward","getGlideCurrentEmissions","setupNetwork","window","ethereum","BRIDGE_NETWORKS","request","registerToken","tokenSymbol","tokenDecimals","image","tokenAdded","useAllTransactions","isTransactionRecent","allTransactions","Card","colors","background","LightCard","LightGreyCard","cardBorder","GreyCard","dropdown","code","languageList","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","fetchFarmUserAllowances","farmsToFetch","masterChefAddress","lpAddresses","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","masterchefABI","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmConfig","farmsWithPriceHelpers","priceHelperLpsConfig","fetchFarms","fetchFarmsPrices","farmsWithPrices","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","getTokenLogoURL","StyledLogo","chain","uriLocations","fetchCommunityPublicDataAsync","communityFarms","setCommunityPublicData","fetchCommunityStakingLimitsAsync","fetchCommunityUserDataAsync","setCommunityUserData","CommunitySlice","updateCommunityUserData","IPFS_GATEWAY","nftSources","PHANTZ","creator","identifierKey","Nfts","description","images","lg","md","sm","ipfs","identifier","variationId","FetchStatus","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","fetchBalance","useDevBalance","useTreasuryBalance","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","SUCCESS","FAILED","refresh","balanceState","setBalanceState","prev","isZero","hexNumberString","fetch","json","getItem","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolWeight","glidePriceUsd","poolLiquidityUsd","farmAddress","glideRewardsApr","glideRewardsAprAsNumber","lpRewardsApr","lpAprs","toLocaleLowerCase","uriToHttp","uri","substr","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","profileClear","walletconnect","close","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","SwapWarningTokens","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","fontSize","bold","small","textAlign","TransactionSubmittedContent","onDismiss","currencyToAdd","src","GliderSuccessImage","height","external","href","isMetaMask","variant","mt","asset","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","justifyContent","pt","TransactionConfirmationModal","title","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","StyledPage","Container","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","DEFAULT_META","pageTitle","join","property","Page","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","TransactionState","primary","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","mb","scale","Transactions","useModal","onPresentTransactionsModal","GradientHeaderContainer","Flex","GradientHeader","subtitle","helper","backTo","noConfig","alignItems","mr","as","Link","show","GlobalSettings","BodyWrapper","AppBody","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","parseENSAddress","contentHashUri","translatedUri","contenthashToUri","ensPath","isLast","ok","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","REACT_APP_API_PROFILE","isInitialized","hasRegistered","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profile","profileFetchFailed","addPoints","points","ensAddress","blockSlice","initialBlock","setStateLastUpdated","previousLastUpdated","usePreviousValue","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserslippageTolerance","ttl","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","placeholder","onBlur","onChange","e","target","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setRememberExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","onBack","maxWidth","checked","userSelect","prompt","SettingsModal","showConfirmExpertModal","rememberExpertModeAcknowledgement","setSingleHopOnly","textTransform","TransactionSettings","onPresentSettingsModal","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","textSubtle","inputRegex","Input","React","event","nextUserInput","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","signingMethods","injected","InjectedConnector","supportedChainIds","rpc","qrcode","ConnectorNames","Injected","WalletConnect","getLibrary","Web3Provider","Dots","span","serializedTokensMap","getIdentifierKeyFromAddress","nftAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getTokenUriData","tokenId","tokenURI","uriDataResponse","uriData","getNftByTokenId","nft","shuffleArray","array","j","floor","random","temp","profileContract","getTeam","teamId","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","users","getTeams","teamsById","team","numberTeams","nbTeams","teamData","onChainTeamData","teams","textColor","transformUserData","quoteTokenAddress","WrapType","NOT_APPLICABLE","wrapType","useWrapCallback","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","px","mx","StyledNav","nav","StyledButtonMenu","ButtonMenu","Glider","Nav","location","activeIndex","xs","GradientPage","SubNav","flexGrow","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","FlexLayout","Loading","Grid","GridItem","GridHeaderItem","BulletList","ul","ApyCalculatorModal","linkLabel","displayApr","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","freq","fee","maxAmountSpend","greaterThan","Outer","gradients","bubblegum","Inner","PageHeader","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","priceHelperLps","fetchWalletNfts","nftSourcePromises","nftSourceType","creatorQuery","ownedNfts","holder","nftSourceData","randomSorted","sortby","filterby","count","collectionAddresses","headers","body","elacityCollection","phantzV1","flat","phantzV2","collectiblesSlice","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","gridGap","disabled","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","totalAllocPoint","allocPoint","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceUsdc","hasTokenPriceVsQuote","quoteTokenInUsdc","getFarmQuoteTokenPrice","baseTokenPrice","quoteTokenPrice","ens","resolvedContentHash","useENSContentHash","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","history","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","FixedHeightRow","StyledFlex","StyledColumn","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","FullPositionCard","marginBottom","role","NETWORK_URLS","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","parseArrays","ignoreQueryPrefix","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","Footer","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","backgroundAlt","StyledModalHeader","ModalHeader","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","resolve","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","reject","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","useEagerConnect","connectorId","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","GlobalStyle","createGlobalStyle","icon","showItemsOnMobile","showOnMobile","hideSubNav","showOnDesktop","DropdownMenuItemType","PRICE","DIVIDER","SOCIALS","EXTERNAL_LINK","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","position","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","lte","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","Menu","elaPriceUsd","userMenu","globalMenu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","PageLoader","createBrowserHistory","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","radii","StyledCardHeader","isCakePool","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","ApprovalAction","stakingTokenContract","endIcon","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPhantzPool","withdrawGlideReward","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","isStaking","CardFooter","VaultApprovalAction","useVaultApprove","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceUsdc","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","isVaultApproved","setIsVaultApproved","checkApprovalStatus","useCheckVaultApprovalStatus","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","DividendStakeModal","DividendCardActions","DividendPoolCard","isDividendPool","MaterialPoolCard","isMaterialPool","PhantzCardActions","LoadingContainer","PhantzContainer","PhantzCutout","img","BOOSTS","PhantzPoolCard","identifiers","tokenIds","nftsInWallet","useGetCollectibles","isNftLoading","ownsPhantz","phantzToShow","boost","manual","stakingPool","manualStakedBalance","bonusAPR","phantzStakedBalance","tooltipContent1","tooltipContent2","tooltipContent3","targetRef1","tooltip1","visible1","targetRef2","tooltip2","visible2","targetRef3","tooltip3","visible3","imageURL","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","viewMode","setViewMode","useRouteMatch","isExact","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","CardLayout","PoolControls","ConnectContainer","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","TABLE","chosenPoolsLength","accountHasVaultShares","accountHasDividendPoolStake","accountHasMaterialPoolStake","accountHasPhantzPoolStake","accountHasPhantzV2PoolStake","cakePool","cakeAutoVault","cakeDividendPool","materialStakingPool","stakePhantzPool","isPhantzPool","stakePhantzV2Pool","isPhantzV2Pool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","cardLayout","StyledText","FilterContainer","LabelWrapper","ControlStretch","Community","sortOption","setSortOption","fetchCommunityPublicData","useFetchPublicCommunityData","poolsToSort","sortPools","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","safemoon","component","bondly","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Farms","Bridge","Info","NotFound","Liquidity","PoolFinder","RemoveLiquidity","Global","exact","strict","ThemeProviderWrapper","dark","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9be8c477.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@glide-finance/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","export default {\n  masterChef: {\n    20: '0x7F5489f77Bb8515DE4e0582B60Eb63A7D9959821',\n  },\n  swapRewardsChef: {\n    20: '0x80f2cF7059336b44a75F00451B81f8d742DD2b94',\n  },\n  cakeVault: {\n    20: '0xBe224bb2EFe1aE7437Ab428557d3054E63033dA9',\n  },\n  materialChef: {\n    20: '0x217da50b13682e74b519b3bb94b586d964e5f3ba',\n  },\n  phantzPool: {\n    20: '0xbe080A1Fee90c12fC7F308590DC56929E407aA6E',\n  },\n  phantzV2Pool: {\n    20: '0x6be4661405096e1dEEC1eD03250bB9d38aeA0804',\n  },\n  sousChef: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  lotteryV2: {\n    20: '0x9999999999999999999999999999999999999999', // avoid ENS errors\n  },\n  multiCall: {\n    // Multicall2\n    1: '0x0555fcE4231A25AcB648284bfecf6B85e1AF6Bd4',\n    20: '0x0555fcE4231A25AcB648284bfecf6B85e1AF6Bd4',\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    128: '0x0555fcE4231A25AcB648284bfecf6B85e1AF6Bd4',\n  },\n  pancakeProfile: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  pancakeRabbits: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  bunnyFactory: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  claimRefund: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  pointCenterIfo: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  bunnySpecial: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  tradingCompetition: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  easterNft: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  predictions: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  chainlinkOracle: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  bunnySpecialCakeVault: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  bunnySpecialPrediction: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  farmAuction: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n}\n","import { ChainId } from '@glide-finance/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.glide.address)\n}\nexport const getMaterialAddress = () => {\n  return getAddress(tokens.mtrl.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wela.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getDividendPoolAddress = () => {\n  return getAddress(addresses.swapRewardsChef)\n}\nexport const getPhantzPoolAddress = () => {\n  return getAddress(addresses.phantzPool)\n}\nexport const getPhantzV2PoolAddress = () => {\n  return getAddress(addresses.phantzV2Pool)\n}\nexport const getMaterialPoolAddress = () => {\n  return getAddress(addresses.materialChef)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { ChainId, Token } from '@glide-finance/sdk'\n\nexport const GLIDE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xd39eC832FF1CaaFAb2729c76dDeac967ABcA8F27', 18, 'GLIDE', 'Glide'),\n}\n\nexport const USDC: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xA06be0F5950781cE28D965E5EFc6996e88a8C141', 6, 'USDC', 'USD Coin'),\n}\n\nexport const WELA = new Token(ChainId.MAINNET, '0x517E9e5d46C1EA8aB6f78677d6114Ef47F71f6c4', 18, 'WELA', 'Wrapped ELA')\n\nconst tokens = {\n  glide: {\n    symbol: 'GLIDE',\n    address: {\n      20: '0xd39eC832FF1CaaFAb2729c76dDeac967ABcA8F27',\n    },\n    decimals: 18,\n    projectLink: 'https://glidefinance.io/',\n  },\n  sugar: {\n    symbol: 'SUGAR',\n    address: {\n      20: '0xa09Fd898D9c14CE6503dDb7A6861Dd08642BF60e',\n    },\n    decimals: 18,\n    projectLink: 'https://glidefinance.io/',\n  },\n  wela: {\n    symbol: 'wELA',\n    address: {\n      20: '0x517E9e5d46C1EA8aB6f78677d6114Ef47F71f6c4',\n    },\n    decimals: 18,\n    projectLink: 'https://elastos.org/',\n  },\n  ela: {\n    symbol: 'ELA',\n    address: {\n      20: '0x517E9e5d46C1EA8aB6f78677d6114Ef47F71f6c4',\n    },\n    decimals: 18,\n    projectLink: 'https://elastos.org/',\n  },\n  // ethereum\n  eth: {\n    symbol: 'ETH',\n    address: {\n      20: '0x802c3e839E4fDb10aF583E3E759239ec7703501e',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      20: '0xA06be0F5950781cE28D965E5EFc6996e88a8C141',\n    },\n    decimals: 6,\n    projectLink: 'https://www.circle.com/en/usdc',\n  },\n  mtrl: {\n    symbol: 'MTRL',\n    address: {\n      20: '0xe2390b8B08a9Ab68e6f1aaA150B2ddD03900CE25',\n    },\n    decimals: 18,\n    projectLink: 'https://material.network',\n  },\n  // binance\n  bnb: {\n    symbol: 'BNB',\n    address: {\n      20: '0x51B85F3889c7EA8f6d5EdEBFBadaDA0fDcE236c9',\n    },\n    decimals: 18,\n    projectLink: 'https://www.binance.org/en/smartChain',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      20: '0x9f1d0Ed4E041C503BD487E5dc9FC935Ab57F9a57',\n    },\n    decimals: 18,\n    projectLink: 'https://paxos.com/busd/',\n  },\n  // heco\n  ht: {\n    symbol: 'HT',\n    address: {\n      20: '0xeceefC50f9aAcF0795586Ed90a8b9E24f55Ce3F3',\n    },\n    decimals: 18,\n    projectLink: 'https://www.huobi.com/',\n  },\n  husd: {\n    symbol: 'HUSD',\n    address: {\n      20: '0xF9Ca2eA3b1024c0DB31adB224B407441bECC18BB',\n    },\n    decimals: 8,\n    projectLink: 'https://www.hecochain.com/',\n  },\n  htfilda: {\n    symbol: 'htFILDA',\n    address: {\n      20: '0xB9Ae03e3320235D3a8AE537f87FF8529b445B590',\n    },\n    decimals: 18,\n    projectLink: 'https://filda.io/',\n  },\n  // multi\n  elk: {\n    symbol: 'ELK',\n    address: {\n      20: '0xE1C110E1B1b4A1deD0cAf3E42BfBdbB7b5d7cE1C',\n    },\n    decimals: 18,\n    projectLink: 'https://elk.finance/',\n  },\n  // Meme zone\n  rinu: {\n    symbol: 'RINU',\n    address: {\n      20: '0x0b0148b82631A1ce18c83048471716d591726977',\n    },\n    decimals: 9,\n    projectLink: '',\n  },\n  rinuLP: {\n    symbol: 'RINU-ELA LP',\n    address: {\n      20: '0x411DA456D450111648310c5Ec3D188755727b92c',\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  finu: {\n    symbol: 'FINU',\n    address: {\n      20: '0x18521074aBA94FA730d06aAe000778Dcc8C6059d',\n    },\n    decimals: 9,\n    projectLink: '',\n  },\n  finuLP: {\n    symbol: 'FINU-ELA LP',\n    address: {\n      20: '0xe8134F4e731Bb9a70Ddc0013755994B4906d480f',\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  beer: {\n    symbol: 'BEER',\n    address: {\n      20: '0x44F57DF34e7873191f5aF7065B8348dD581c34DC',\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  beerLP: {\n    symbol: 'BEER-ELA LP',\n    address: {\n      20: '0xbcA320f6b57b422a7Bf98A5bFaf8635923998d41',\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  sloth: {\n    symbol: 'SLOTH',\n    address: {\n      20: '0xA70Efd687EADFb738389e0739a26fb9036D99A1E',\n    },\n    decimals: 18,\n    projectLink: 'https://www.slothtoken.club/',\n  },\n  slothLP: {\n    symbol: 'SLOTH-ELA LP',\n    address: {\n      20: '0x3DCe3e9C2DBe687ab1794E89e48ad0947c4ae48F',\n    },\n    decimals: 18,\n    projectLink: 'https://www.slothtoken.club/',\n  },\n  bun: {\n    symbol: 'BUN',\n    address: {\n      20: '0x63B2dcd421d2E9168EC79e880fB0D2D45d539A66',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bunnypunk.online/',\n  },\n  bunLP: {\n    symbol: 'BUN-ELA LP',\n    address: {\n      20: '0xb454FC9F6681dCa0D7C3b7a170A89B8bD7bdA71A',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bunnypunk.online/',\n  },\n}\n\nexport default tokens\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import styled from 'styled-components'\nimport { Box } from '@glide-finance/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { ChainId } from '@glide-finance/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.ETHEREUM]: '0xeefBa1e63905eF1D7ACbA5a8513c70307C1cE441',\n  [ChainId.MAINNET]: '0x20205D3b6008bea1411bd4CaEA2D923FE231B6E5',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n  [ChainId.BINANCE]: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n  [ChainId.HECO]: '0xc9a9F768ebD123A00B52e7A0E590df2e9E998707',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getCommunityContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getDividendPoolContract,\n  getPhantzPoolContract,\n  getPhantzV2PoolContract,\n  getMaterialPoolContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@glide-finance/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useCommunityChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCommunityContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useDividendPoolContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getDividendPoolContract(library.getSigner()), [library])\n}\n\nexport const usePhantzPoolContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPhantzPoolContract(library.getSigner()), [library])\n}\n\nexport const usePhantzV2PoolContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPhantzV2PoolContract(library.getSigner()), [library])\n}\n\nexport const useMaterialPoolContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMaterialPoolContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig, communityConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getMaterialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getDividendPoolAddress,\n  getPhantzPoolAddress,\n  getPhantzV2PoolAddress,\n  getMaterialPoolAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport AMB_NATIVE_ERC_ABI from 'config/abi/AMB_NATIVE_ERC_ABI.json'\nimport MULTI_AMB_ERC_ERC_ABI from 'config/abi/MULTI_AMB_ERC_ERC_ABI.json'\nimport ERC677_ABI from 'config/abi/ERC677_ABI.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport dividendPoolAbi from 'config/abi/dividendPool.json'\nimport phantzPoolAbi from 'config/abi/phantzPool.json'\nimport materialPoolAbi from 'config/abi/materialPool.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getNativeSourceMediator = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(AMB_NATIVE_ERC_ABI, address, signer)\n}\nexport const getTokenSourceMediator = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MULTI_AMB_ERC_ERC_ABI, address, signer)\n}\nexport const getErc677Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ERC677_ABI, address, signer)\n}\nexport const getCommunityContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = communityConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getMaterialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getMaterialAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\nexport const getDividendPoolContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(dividendPoolAbi, getDividendPoolAddress(), signer)\n}\nexport const getPhantzPoolContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(phantzPoolAbi, getPhantzPoolAddress(), signer)\n}\nexport const getPhantzV2PoolContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(phantzPoolAbi, getPhantzV2PoolAddress(), signer)\n}\nexport const getMaterialPoolContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(materialPoolAbi, getMaterialPoolAddress(), signer)\n}\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@glide-finance/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@glide-finance/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@glide-finance/sdk'\nimport { USDC, GLIDE, WELA } from './tokens'\n\nexport const ROUTER_ADDRESS = '0xec2f2b94465Ee0a7436beB4E38FC8Cf631ECf7DF'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.ETHEREUM]: [],\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], GLIDE[ChainId.MAINNET], USDC[ChainId.MAINNET]],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], GLIDE[ChainId.TESTNET], USDC[ChainId.TESTNET]],\n  [ChainId.BINANCE]: [],\n  [ChainId.HECO]: [],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.ETHEREUM]: [],\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], USDC[ChainId.MAINNET], GLIDE[ChainId.MAINNET]],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], GLIDE[ChainId.TESTNET], USDC[ChainId.TESTNET]],\n  [ChainId.BINANCE]: [],\n  [ChainId.HECO]: [],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.ETHEREUM]: [],\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], USDC[ChainId.MAINNET], GLIDE[ChainId.MAINNET]],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], GLIDE[ChainId.TESTNET], USDC[ChainId.TESTNET]],\n  [ChainId.BINANCE]: [],\n  [ChainId.HECO]: [],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [[GLIDE[ChainId.MAINNET], WELA]],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\nexport const VALIDATOR_TIMEOUT = 300000 // Milliseconds\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = []\n\nexport const APPROVE_BALANCE_ADDRESSES: string[] = [\n  '0xaA9691BcE68ee83De7B518DfCBBfb62C04B1C0BA', // Gold\n  '0x44F57DF34e7873191f5aF7065B8348dD581c34DC', // Beer\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as communityConfig } from './community'\nexport { default as ifosConfig } from './ifo'\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\n// import { getDividendPoolContract, getCakeContract } from 'utils/contractHelpers'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n  fetchDividendPoolPublicData,\n  fetchDividendPoolUserData,\n  fetchMaterialPoolPublicData,\n  fetchMaterialPoolUserData,\n  fetchPhantzPoolUserData,\n  fetchPhantzV2PoolUserData,\n} from '.'\nimport { State, Pool } from '../types'\n// import { transformPool, getTokenPricesFromFarm } from './helpers'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolsPublicData = (): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n  }, [dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      glideAtLastUserAction: glideAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const glideAtLastUserAction = useMemo(() => {\n    return new BigNumber(glideAtLastUserActionAsString)\n  }, [glideAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      glideAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\nexport const useFetchDividendPool = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  const { farms } = useSelector((state: State) => ({\n    farms: state.farms.data,\n  }))\n\n  useEffect(() => {\n    dispatch(fetchDividendPoolPublicData({ farms }))\n  }, [dispatch, fastRefresh, farms])\n\n  useEffect(() => {\n    dispatch(fetchDividendPoolUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n}\n\nexport const useDividendPool = () => {\n  const {\n    totalStaked: totalStakedAsString,\n    startBlock,\n    apr,\n    stakingTokenPrice,\n    earningTokenPrice,\n    userData: {\n      isLoading,\n      allowance: allowanceAsString,\n      stakingTokenBalance: stakingTokenBalanceAsString,\n      stakedBalance: stakedBalanceAsString,\n      pendingReward: pendingRewardAsString,\n    },\n  } = useSelector((state: State) => state.pools.dividendPool)\n\n  const totalStaked = useMemo(() => {\n    return new BigNumber(totalStakedAsString)\n  }, [totalStakedAsString])\n\n  const allowance = useMemo(() => {\n    return new BigNumber(allowanceAsString)\n  }, [allowanceAsString])\n\n  const stakingTokenBalance = useMemo(() => {\n    return new BigNumber(stakingTokenBalanceAsString)\n  }, [stakingTokenBalanceAsString])\n\n  const stakedBalance = useMemo(() => {\n    return new BigNumber(stakedBalanceAsString)\n  }, [stakedBalanceAsString])\n\n  const pendingReward = useMemo(() => {\n    return new BigNumber(pendingRewardAsString)\n  }, [pendingRewardAsString])\n\n  return {\n    totalStaked,\n    startBlock,\n    apr,\n    stakingTokenPrice,\n    earningTokenPrice,\n    userData: {\n      isLoading,\n      allowance,\n      stakingTokenBalance,\n      stakedBalance,\n      pendingReward,\n    },\n  }\n}\n\nexport const useFetchMaterialPool = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  const { farms } = useSelector((state: State) => ({\n    farms: state.farms.data,\n  }))\n\n  useEffect(() => {\n    dispatch(fetchMaterialPoolPublicData({ farms }))\n  }, [dispatch, fastRefresh, farms])\n\n  useEffect(() => {\n    dispatch(fetchMaterialPoolUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n}\n\nexport const useMaterialPool = () => {\n  const {\n    totalStaked: totalStakedAsString,\n    startBlock,\n    apr,\n    stakingTokenPrice,\n    earningTokenPrice,\n    userData: {\n      isLoading,\n      allowance: allowanceAsString,\n      stakingTokenBalance: stakingTokenBalanceAsString,\n      materialStakedBalance: materialStakedBalanceAsString,\n      pendingReward: pendingRewardAsString,\n    },\n  } = useSelector((state: State) => state.pools.materialPool)\n\n  const totalStaked = useMemo(() => {\n    return new BigNumber(totalStakedAsString)\n  }, [totalStakedAsString])\n\n  const allowance = useMemo(() => {\n    return new BigNumber(allowanceAsString)\n  }, [allowanceAsString])\n\n  const stakingTokenBalance = useMemo(() => {\n    return new BigNumber(stakingTokenBalanceAsString)\n  }, [stakingTokenBalanceAsString])\n\n  const materialStakedBalance = useMemo(() => {\n    return new BigNumber(materialStakedBalanceAsString)\n  }, [materialStakedBalanceAsString])\n\n  const pendingReward = useMemo(() => {\n    return new BigNumber(pendingRewardAsString)\n  }, [pendingRewardAsString])\n\n  return {\n    totalStaked,\n    startBlock,\n    apr,\n    stakingTokenPrice,\n    earningTokenPrice,\n    userData: {\n      isLoading,\n      allowance,\n      stakingTokenBalance,\n      materialStakedBalance,\n      pendingReward,\n    },\n  }\n}\n\nexport const useFetchPhantzPool = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPhantzPoolUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n}\n\nexport const useFetchPhantzV2Pool = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPhantzV2PoolUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n}\n\nexport const usePhantzPool = (version) => {\n  const {\n    earningTokenPrice,\n    userData: { isLoading, pendingReward: pendingRewardAsString },\n  } = useSelector((state: State) => state.pools[version])\n\n  const pendingReward = useMemo(() => {\n    return new BigNumber(pendingRewardAsString)\n  }, [pendingRewardAsString])\n\n  return {\n    earningTokenPrice,\n    userData: {\n      isLoading,\n      pendingReward,\n    },\n  }\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n    state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n    // console.log(state.blockNumber[chainId])\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  watchlistTokens: string[]\n  watchlistPools: string[]\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport communityReducer from './community'\n// import bridgeReducer from './bridge'\n// import predictionsReducer from './predictions'\n// import profileReducer from './profile'\n// import teamsReducer from './teams'\n// import achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n// import votingReducer from './voting'\n// import lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport bridge from './bridge/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport infoReducer from './info'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    // achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    community: communityReducer,\n    info: infoReducer,\n    // predictions: predictionsReducer,\n    // profile: profileReducer,\n    // teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    // voting: votingReducer,\n    // lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    bridge,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    // @ts-ignore\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { ChainId } from '@glide-finance/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const ESC_BLOCK_TIME = 5\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://esc.elastos.io',\n  [ChainId.TESTNET]: 'https://eth-testnet.elastos.io',\n}\n\nexport const GLIDE_PER_BLOCK = new BigNumber(3)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / ESC_BLOCK_TIME) * 60 * 24 * 365) // 6307200\n// export const GLIDE_PER_YEAR = GLIDE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const GLIDE_START_BLOCK = new BigNumber(9255555)\nexport const GLIDE_BONUS_PERIOD = new BigNumber(1572480)\nexport const GLIDE_REDUCTION_PERIOD = new BigNumber(3144960)\nexport const BASE_URL = 'https://glidefinance.io'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 300000\nexport const DEFAULT_GAS_PRICE = 1\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter(\n    (p) => p.sousId !== 0 && p.sousId !== 1 && p.sousId !== 2 && p.sousId !== 3 && p.sousId !== 4,\n  )\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'ELA')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'ELA')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'ELA' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'ELA')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'ELA')\nconst nonMasterPools = poolsConfig.filter(\n  (p) => p.sousId !== 0 && p.sousId !== 1 && p.sousId !== 2 && p.sousId !== 3 && p.sousId !== 4,\n)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingGlide('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestGlideRewards',\n      'calculateTotalPendingGlideRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { multicallv2 } from 'utils/multicall'\nimport dividendPoolAbi from 'config/abi/dividendPool.json'\nimport { getDividendPoolAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\n// import { BIG_ZERO } from 'utils/bigNumber'\nimport { getPoolApr } from 'utils/apr'\nimport { getDividendPoolContract } from 'utils/contractHelpers'\n\nconst dividendPoolContract = getDividendPoolContract()\n\n// Hardcoded for stake GLIDE, earn ELA (PID 1)\nexport const fetchDividendPoolData = async (farms) => {\n  try {\n  const calls = [\n      'remainingRewards',\n      'rewardsPerBlock',\n      'startBlock'\n    ].map((method) => ({\n      address: getDividendPoolAddress(),\n      name: method,\n  }))\n  const [[remainingReward], [rewardsPerBlock], [startBlock]] = await multicallv2(dividendPoolAbi, calls)\n  const totalStaked = (await dividendPoolContract.poolInfo(0)).currentDepositAmount\n  const priceFarm = farms.find((f) => f.pid === 1)\n  const { decimals } = priceFarm.quoteToken\n  const earningTokenPrice = priceFarm.quoteToken.usdcPrice\n  const stakingTokenPrice = priceFarm.token.usdcPrice\n  const apr = getPoolApr(stakingTokenPrice, earningTokenPrice, getBalanceNumber(new BigNumber(totalStaked.toString()), \n  decimals), rewardsPerBlock.toString()/(10**decimals))\n\n  return {\n    totalStaked: totalStaked.toString(),\n    startBlock: startBlock.toString(),\n    apr,\n    stakingTokenPrice,\n    earningTokenPrice,\n    remainingReward: remainingReward.toString()\n  }\n  } catch (error) {\n    return {\n      totalStaked: null,\n      startBlock: null,\n      apr: null,\n      stakingTokenPrice: null,\n      earningTokenPrice: null,\n      remainingReward: null\n    }\n  }\n}\n\nexport default fetchDividendPoolData\n","import BigNumber from 'bignumber.js'\nimport { multicallv2 } from 'utils/multicall'\nimport materialPoolAbi from 'config/abi/materialPool.json'\nimport { getMaterialPoolAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\n// import { BIG_ZERO } from 'utils/bigNumber'\nimport { getPoolApr } from 'utils/apr'\nimport { getMaterialPoolContract } from 'utils/contractHelpers'\n\nconst materialPoolContract = getMaterialPoolContract()\n\n// Hardcoded for stake MTRL, earn MTRL (PID 8)\nexport const fetchMaterialPoolData = async (farms) => {\n  try {\n    const calls = ['remainingRewards', 'rewardsPerBlock', 'startBlock'].map((method) => ({\n      address: getMaterialPoolAddress(),\n      name: method,\n    }))\n    const [[remainingReward], [rewardsPerBlock], [startBlock]] = await multicallv2(materialPoolAbi, calls)\n    const totalStaked = (await materialPoolContract.poolInfo(0)).currentDepositAmount\n    const priceFarm = farms.find((f) => f.pid === 8)\n    const { decimals } = priceFarm.quoteToken\n    const earningTokenPrice = priceFarm.token.usdcPrice\n    const stakingTokenPrice = priceFarm.token.usdcPrice\n    const apr = getPoolApr(\n      stakingTokenPrice,\n      earningTokenPrice,\n      getBalanceNumber(new BigNumber(totalStaked.toString()), decimals),\n      rewardsPerBlock.toString() / 10 ** decimals,\n    )\n\n    return {\n      totalStaked: totalStaked.toString(),\n      startBlock: startBlock.toString(),\n      apr,\n      stakingTokenPrice,\n      earningTokenPrice,\n      remainingReward: remainingReward.toString(),\n    }\n  } catch (error) {\n    return {\n      totalStaked: null,\n      startBlock: null,\n      apr: null,\n      stakingTokenPrice: null,\n      earningTokenPrice: null,\n      remainingReward: null,\n    }\n  }\n}\n\nexport default fetchMaterialPoolData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      glideAtLastUserAction: new BigNumber(userContractResponse.glideAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      glideAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","// import BigNumber from 'bignumber.js'\n// import { getCakeVaultContract } from 'utils/contractHelpers'\nimport { getDividendPoolContract, getCakeContract } from 'utils/contractHelpers'\n\n// const cakeVaultContract = getCakeVaultContract()\nconst dividendPoolContract = getDividendPoolContract()\nconst glideContract = getCakeContract()\n\nconst fetchDividendPoolUser = async (account: string) => {\n  try {\n    const glideAllowance = (await glideContract.allowance(account, dividendPoolContract.address)).toString()\n    const glideBalance = (await glideContract.balanceOf(account)).toString()\n    const glideStaked = (await dividendPoolContract.userInfo(account))[0].toString()\n    const glidePending = (await dividendPoolContract.pendingRewards(account)).toString()\n\n    return {\n      isLoading: false,\n      allowance: glideAllowance,\n      stakingTokenBalance: glideBalance,\n      stakedBalance: glideStaked,\n      pendingReward: glidePending,\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      allowance: null,\n      stakingTokenBalance: null,\n      stakedBalance: null,\n      pendingReward: null,\n    }\n  }\n  //   return {\n  //     isLoading: false,\n  //     userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n  //     lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n  //     lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n  //     glideAtLastUserAction: new BigNumber(userContractResponse.glideAtLastUserAction.toString()).toJSON(),\n  //   }\n  // } catch (error) {\n  //   return {\n  //     isLoading: true,\n  //     userShares: null,\n  //     lastDepositedTime: null,\n  //     lastUserActionTime: null,\n  //     glideAtLastUserAction: null,\n  //   }\n  // }\n}\n\nexport default fetchDividendPoolUser\n","// import BigNumber from 'bignumber.js'\n// import { getCakeVaultContract } from 'utils/contractHelpers'\nimport { getMaterialPoolContract, getMaterialContract } from 'utils/contractHelpers'\n\n// const cakeVaultContract = getCakeVaultContract()\nconst materialPoolContract = getMaterialPoolContract()\nconst glideContract = getMaterialContract()\n\nconst fetchMaterialPoolUser = async (account: string) => {\n  try {\n    const glideAllowance = (await glideContract.allowance(account, materialPoolContract.address)).toString()\n    const glideBalance = (await glideContract.balanceOf(account)).toString()\n    const glideStaked = (await materialPoolContract.userInfo(account))[0].toString()\n    const glidePending = (await materialPoolContract.pendingRewards(account)).toString()\n\n    return {\n      isLoading: false,\n      allowance: glideAllowance,\n      stakingTokenBalance: glideBalance,\n      materialStakedBalance: glideStaked,\n      pendingReward: glidePending,\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      allowance: null,\n      stakingTokenBalance: null,\n      materialStakedBalance: null,\n      pendingReward: null,\n    }\n  }\n}\n\nexport default fetchMaterialPoolUser\n","// import BigNumber from 'bignumber.js'\nimport { getPhantzPoolContract, getPhantzV2PoolContract } from 'utils/contractHelpers'\n\nconst phantzPoolContract = getPhantzPoolContract()\nconst phantzV2PoolContract = getPhantzV2PoolContract()\n\nexport const fetchPhantzPoolUser = async (account: string) => {\n  try {\n    const glidePending = (await phantzPoolContract.glideRewards(account)).toString()\n\n    return {\n      isLoading: false,\n      pendingReward: glidePending,\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      pendingReward: null,\n    }\n  }\n}\n\nexport const fetchPhantzV2PoolUser = async (account: string) => {\n  try {\n    const glidePending = (await phantzV2PoolContract.glideRewards(account)).toString()\n\n    return {\n      isLoading: false,\n      pendingReward: glidePending,\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      pendingReward: null,\n    }\n  }\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  PoolsState,\n  Pool,\n  CakeVault,\n  VaultFees,\n  VaultUser,\n  AppThunk,\n  DividendUser,\n  DividendPool,\n  MaterialUser,\n  MaterialPool,\n  PhantzUser,\n} from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport { fetchDividendPoolData } from './fetchDividendPoolPublic'\nimport { fetchMaterialPoolData } from './fetchMaterialPoolPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport fetchDividendPoolUser from './fetchDividendPoolUser'\nimport fetchMaterialPoolUser from './fetchMaterialPoolUser'\nimport { fetchPhantzPoolUser, fetchPhantzV2PoolUser } from './fetchPhantzPoolUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      glideAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n  dividendPool: {\n    totalStaked: null,\n    startBlock: null,\n    apr: null,\n    stakingTokenPrice: null,\n    earningTokenPrice: null,\n    userData: {\n      isLoading: true,\n      allowance: null,\n      stakingTokenBalance: null,\n      stakedBalance: null,\n      pendingReward: null,\n    },\n  },\n  materialPool: {\n    totalStaked: null,\n    startBlock: null,\n    apr: null,\n    stakingTokenPrice: null,\n    earningTokenPrice: null,\n    userData: {\n      isLoading: true,\n      allowance: null,\n      stakingTokenBalance: null,\n      materialStakedBalance: null,\n      pendingReward: null,\n    },\n  },\n  phantzPool: {\n    earningTokenPrice: null,\n    userData: {\n      isLoading: true,\n      pendingReward: null,\n    },\n  },\n  phantzV2Pool: {\n    earningTokenPrice: null,\n    userData: {\n      isLoading: true,\n      pendingReward: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchDividendPoolPublicData = createAsyncThunk<DividendPool, { farms }>(\n  'dividendPool/fetchPublicData',\n  async ({ farms }) => {\n    const publicDividendPoolInfo = await fetchDividendPoolData(farms)\n    return publicDividendPoolInfo\n  },\n)\n\nexport const fetchMaterialPoolPublicData = createAsyncThunk<MaterialPool, { farms }>(\n  'materialPool/fetchPublicData',\n  async ({ farms }) => {\n    const publicMaterialPoolInfo = await fetchMaterialPoolData(farms)\n    return publicMaterialPoolInfo\n  },\n)\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const fetchDividendPoolUserData = createAsyncThunk<DividendUser, { account: string }>(\n  'dividendPool/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchDividendPoolUser(account)\n    return userData\n  },\n)\n\nexport const fetchMaterialPoolUserData = createAsyncThunk<MaterialUser, { account: string }>(\n  'materialPool/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchMaterialPoolUser(account)\n    return userData\n  },\n)\n\nexport const fetchPhantzPoolUserData = createAsyncThunk<PhantzUser, { account: string }>(\n  'phantzPool/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchPhantzPoolUser(account)\n    return userData\n  },\n)\n\nexport const fetchPhantzV2PoolUserData = createAsyncThunk<PhantzUser, { account: string }>(\n  'phantzV2Pool/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchPhantzV2PoolUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n    // Dividend pool public data that updates frequently\n    builder.addCase(fetchDividendPoolPublicData.fulfilled, (state, action: PayloadAction<DividendPool>) => {\n      state.dividendPool = { ...state.dividendPool, ...action.payload }\n    })\n    // Dividend pool user data\n    builder.addCase(fetchDividendPoolUserData.fulfilled, (state, action: PayloadAction<DividendUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.dividendPool = { ...state.dividendPool, userData }\n    })\n    // Material pool public data that updates frequently\n    builder.addCase(fetchMaterialPoolPublicData.fulfilled, (state, action: PayloadAction<MaterialPool>) => {\n      state.materialPool = { ...state.materialPool, ...action.payload }\n    })\n    // Material pool user data\n    builder.addCase(fetchMaterialPoolUserData.fulfilled, (state, action: PayloadAction<MaterialUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.materialPool = { ...state.materialPool, userData }\n    })\n    // Phantz pool user data\n    builder.addCase(fetchPhantzPoolUserData.fulfilled, (state, action: PayloadAction<PhantzUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.phantzPool = { ...state.phantzPool, userData }\n    })\n    // Phantz V2 pool user data\n    builder.addCase(fetchPhantzV2PoolUserData.fulfilled, (state, action: PayloadAction<PhantzUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.phantzV2Pool = { ...state.phantzV2Pool, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')","import { Currency } from '@glide-finance/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n  useBridgeableTokenList\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useBridgeTokenMap(tokenMap: TokenAddressMap, origin: number): { [address: string]: Token } {\n  return useMemo(() => {\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[origin]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[origin][address].token\n      return newMap\n    }, {})\n\n    return mapWithoutUrls\n  }, [tokenMap, origin])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useBridgeableTokens(origin, destination): { [address: string]: Token } {\n  const bridgeableTokens = useBridgeableTokenList(origin, destination)\n  return useBridgeTokenMap(bridgeableTokens, origin)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'ELA'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56?: string\n  20?: string\n  1?: string\n  128?: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  usdcPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface CommunityConfig {\n  sousId: number\n  farmSymbol?: string\n  farmPID?: number\n  earningToken: Token\n  stakingToken: Token\n  pairToken?: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock?: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock?: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface BridgeConfig {\n  mediator: string\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n    creator: string\n  }\n}\n\nexport enum NftType {\n  PHANTZ = 'phantz',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\n// export type FeedsNFT = {\n\n// }\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { Pair, Token } from '@glide-finance/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Glide-LP', 'Glide LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@glide-finance/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n  // console.log('block number', latestBlockNumber)\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { Token, TokenAmount } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@glide-finance/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS, APPROVE_BALANCE_ADDRESSES } from 'config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const isApproveBalanceToken = APPROVE_BALANCE_ADDRESSES.includes(token?.address)\n    useExact = isApproveBalanceToken;\n\n    // const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n    //   // general fallback for tokens who restrict approval amounts\n    //   useExact = true\n    //   return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    // })\n\n    const estimatedGas = useExact ? await tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString()) : await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 1 = GLIDE-ELA LP\n * 2 = USDC-ELA LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useUsdcPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.usdcPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useUsdcPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the USDC hook in /hooks\n\nexport const usePriceBnbUsdc = (): BigNumber => {\n  const bnbUsdcFarm = useFarmFromPid(2)\n  return new BigNumber(bnbUsdcFarm.quoteToken.usdcPrice)\n}\n\nexport const usePriceCakeUsdc = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceUsdcAsString = cakeBnbFarm.token.usdcPrice\n\n  const cakePriceUsdc = useMemo(() => {\n    return new BigNumber(cakePriceUsdcAsString)\n  }, [cakePriceUsdcAsString])\n\n  return cakePriceUsdc\n}\n","import { ChainId, Token } from '@glide-finance/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/glide-default.tokenlist.json'\nimport BRIDGE_TOKEN_LIST from '../../config/constants/tokenLists/glide-bridge.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/glide-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.ETHEREUM]: {},\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n  [ChainId.BINANCE]: {},\n  [ChainId.HECO]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.ETHEREUM]: { ...map1[ChainId.ETHEREUM], ...map2[ChainId.ETHEREUM] },\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n    [ChainId.BINANCE]: { ...map1[ChainId.BINANCE], ...map2[ChainId.BINANCE] },\n    [ChainId.HECO]: { ...map1[ChainId.HECO], ...map2[ChainId.HECO] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\nexport function useBridgeableTokenList(origin, destination): TokenAddressMap {\n  const allTokens = { ...BRIDGE_TOKEN_LIST }\n  const bridgeableSet = allTokens.tokens.filter((token) => token.chainId === origin)\n  let destinationMatch = bridgeableSet.filter((token) => token.origin === destination || token.origin === token.chainId)\n  if (origin === 20 && (destination === 1 || destination === 56)) {\n    // filter Glide from Ethereum bridge and Binance bridge\n    destinationMatch = destinationMatch.filter(\n      (token) => token.address !== '0xd39eC832FF1CaaFAb2729c76dDeac967ABcA8F27',\n    )\n  }\n  allTokens.tokens = destinationMatch\n  const bridgeableTokens = allTokens\n  return listToTokenMap(bridgeableTokens)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","// const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\n// const PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  // PANCAKE_TOP100,\n  // PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('bridge/selectCurrency')\nexport const switchCurrencies = createAction<void>('bridge/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('bridge/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('bridge/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('bridge/setRecipient')\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@glide-finance/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import React from 'react'\nimport { Button, useWalletModal } from '@glide-finance/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@glide-finance/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  glideAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && glideAtLastUserAction && glideAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(glideAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.glide,\n    earningToken: tokens.glide,\n    contractAddress: {\n      20: '0x7F5489f77Bb8515DE4e0582B60Eb63A7D9959821',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.365625',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    // SwapRewardsChef\n    sousId: 1,\n    stakingToken: tokens.glide,\n    earningToken: tokens.ela,\n    contractAddress: {\n      20: '0x80f2cF7059336b44a75F00451B81f8d742DD2b94',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    // SwapRewardsChef\n    sousId: 2,\n    stakingToken: tokens.mtrl,\n    earningToken: tokens.mtrl,\n    contractAddress: {\n      20: '0x217da50b13682e74b519b3bb94b586d964e5f3ba',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    // PhantzGlideStake\n    sousId: 3,\n    stakingToken: tokens.glide,\n    earningToken: tokens.glide,\n    contractAddress: {\n      20: '0xbe080A1Fee90c12fC7F308590DC56929E407aA6E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    // PhantzGlideStakeV2\n    sousId: 4,\n    stakingToken: tokens.glide,\n    earningToken: tokens.glide,\n    contractAddress: {\n      20: '0x6be4661405096e1dEEC1eD03250bB9d38aeA0804',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 5,\n    stakingToken: tokens.glide,\n    earningToken: tokens.mtrl,\n    contractAddress: {\n      20: '0xfb0e4c826BC153a2d7A231a641872a8dFd3b3859',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.96450617',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 6,\n    stakingToken: tokens.glide,\n    earningToken: tokens.elk,\n    contractAddress: {\n      20: '0xEa5F2997Ec1B0e783FBFb232978b81a7847055bF',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 7,\n    stakingToken: tokens.glide,\n    earningToken: tokens.elk,\n    contractAddress: {\n      20: '0xEB56783E9df8F3051771CFCE2FBD0E96C34c03E0',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 8,\n    stakingToken: tokens.glide,\n    earningToken: tokens.mtrl,\n    contractAddress: {\n      20: '0x010C5C7d921d47a75051EE2381be76f9b77b869E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.7233796',\n    sortOrder: 999,\n    isFinished: false,\n  },\n]\n\nexport default pools\n","import tokens from './tokens'\nimport { CommunityConfig, PoolCategory } from './types'\n\nconst community: CommunityConfig[] = [\n  {\n    // total 15552000000000 over 1555200 blocks\n    sousId: 1000,\n    farmSymbol: 'RINU-ELA LP',\n    stakingToken: tokens.rinuLP,\n    earningToken: tokens.rinu,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0xbe62625c219390800A0de75f45C773Ef8bB9F950',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10000000',\n    isFinished: true,\n  },\n  {\n    // total 15552000000000 over 1555200 blocks\n    sousId: 1001,\n    farmSymbol: 'FINU-ELA LP',\n    stakingToken: tokens.finuLP,\n    earningToken: tokens.finu,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0x7c5D6163e5cD8F8dd71e2597f671B18D9a22AF08',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10000000',\n    isFinished: true,\n  },\n  {\n    // total 1555200 over 1555200 blocks\n    sousId: 1002,\n    farmSymbol: 'BEER-ELA LP',\n    stakingToken: tokens.beerLP,\n    earningToken: tokens.beer,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0xD20cA396942870b0afE59508270FD2F9af863Eeb',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1',\n    isFinished: true,\n  },\n  {\n    // total 20000000000000 over 518400 blocks\n    sousId: 1003,\n    farmSymbol: 'SLOTH-ELA LP',\n    stakingToken: tokens.slothLP,\n    earningToken: tokens.sloth,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0x981465427f6946F4E1A6fa4CC15408695559768d',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '38580246',\n    isFinished: true,\n  },\n  {\n    // total 2100000000000000000000 over 518400 blocks\n    sousId: 1004,\n    farmSymbol: 'BUN-ELA LP',\n    stakingToken: tokens.bunLP,\n    earningToken: tokens.bun,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0x9A8433315B104ea2211e71Cf167AA8dDFBAF1C16',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n    isFinished: true,\n  },\n  {\n    // total 15293910 over 12614400 blocks\n    sousId: 1005,\n    farmSymbol: 'BEER-ELA LP',\n    stakingToken: tokens.beerLP,\n    earningToken: tokens.beer,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0x2bfC0ae3A5bc2958c602e65686FE1f366C71C7f3',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1',\n  },\n]\n\nexport default community\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, GLIDE_START_BLOCK, GLIDE_BONUS_PERIOD, GLIDE_REDUCTION_PERIOD, GLIDE_PER_BLOCK } from 'config'\n\n// Calculate phase\nfunction phase(blockNumber: BigNumber) {\n  // Issue here if connected to another chain with a different block height. Calculates based on that height. Hardcoded for now.\n\n  // if (blockNumber.gte(GLIDE_START_BLOCK)) {\n  //   // Calculate block number from start block\n  //   const blockNumberFromStart = blockNumber.minus(GLIDE_START_BLOCK)\n  //   // If blockNumberFromStart less then block for reduction period, then we are in one phase\n  //   if (blockNumberFromStart.lte(GLIDE_BONUS_PERIOD)) {\n  //     return 1\n  //   }\n  //   // Calculate phase and add 1, because, will be start from one, and one phase is bonus phase\n  //   return blockNumberFromStart\n  //     .minus(GLIDE_BONUS_PERIOD)\n  //     .minus(new BigNumber(1))\n  //     .idiv(GLIDE_REDUCTION_PERIOD)\n  //     .plus(new BigNumber(2))\n  //     .toNumber()\n  // }\n  return 2\n}\n\n// Get Glide token reward per block\nfunction rewardPerPhase(phaseNumber: number) {\n  // If larger than 25, it would be overflow error (also, in first 25 phase we will distribute all tokens)\n  if (phaseNumber === 0 || phaseNumber > 25) {\n    return new BigNumber(0)\n  }\n  if (phaseNumber === 1) {\n    return GLIDE_PER_BLOCK\n  }\n  const rwrd = GLIDE_PER_BLOCK.multipliedBy(75)\n    .div(100)\n    .multipliedBy(85 ** (phaseNumber - 2))\n    .div(100 ** (phaseNumber - 2))\n  return rwrd\n}\n\n/**\n * Returns the total number of glide per year\n */\nexport const getGlidesPerYear = (currentBlock: BigNumber) => {\n  // Reward sum\n  let rewardSum = new BigNumber(0)\n  let totalBlocks = BLOCKS_PER_YEAR\n  if (currentBlock.lt(GLIDE_START_BLOCK)) {\n    totalBlocks = totalBlocks.minus(GLIDE_START_BLOCK.minus(currentBlock))\n  }\n  let iterationBlocks = GLIDE_START_BLOCK.plus(1)\n  const currentPhase = phase(currentBlock)\n\n  // Calculate reward sum\n  while (totalBlocks.gt(0)) {\n    let nextBlockBorder\n    const iterationPhase = phase(iterationBlocks)\n    if (iterationPhase === 1) {\n      nextBlockBorder = GLIDE_BONUS_PERIOD\n    } else {\n      nextBlockBorder = GLIDE_REDUCTION_PERIOD\n    }\n\n    // If loop is same or after current block phase\n    if (currentPhase > 0 && iterationPhase >= currentPhase) {\n      let blocksForReward\n      if (iterationPhase === currentPhase) {\n        blocksForReward = iterationBlocks.minus(currentBlock)\n      } else if (iterationPhase > currentPhase) {\n        blocksForReward = nextBlockBorder\n      }\n      // Calculate rewards for current loop phase\n      blocksForReward = totalBlocks.minus(blocksForReward).gt(0) ? blocksForReward : totalBlocks\n      // Calculate reward sum before and for current loop phase\n      rewardSum = rewardSum.plus(rewardPerPhase(iterationPhase).multipliedBy(new BigNumber(blocksForReward)))\n      totalBlocks = totalBlocks.minus(blocksForReward)\n    }\n    iterationBlocks = iterationBlocks.plus(nextBlockBorder)\n  }\n  return rewardSum\n}\n\n/*\n * Returns the glide current emission\n */\nexport const getGlideCurrentEmissions = (currentBlock: BigNumber) => {\n  const currentPhase = phase(currentBlock)\n  return rewardPerPhase(currentPhase)\n}\n","// Set of helper functions to facilitate wallet setup\nimport { BASE_URL } from 'config'\nimport { BRIDGE_NETWORKS } from 'config/constants/networks'\nimport { Web3Provider } from '@ethersproject/providers'\n// import useActiveWeb3React from '../hooks/useActiveWeb3React'\n// import { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add esc as a network on Metamask, or switch to eSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async (chainId: number, library?: Web3Provider) => {\n  const provider = library ? library.provider : window.ethereum\n  if (provider) {\n    // const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    const params = BRIDGE_NETWORKS[chainId]\n    try {\n      if (chainId === 1) {\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: '0x1' }],\n        })\n      } else {\n        await provider.request({\n          method: 'wallet_addEthereumChain',\n          params: [params],\n        })\n      }\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@glide-finance/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","import styled from 'styled-components'\nimport { Box } from '@glide-finance/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { Language } from '@glide-finance/uikit'\n\n// export const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\n// export const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\n// export const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\n// export const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\n// export const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\n// export const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\n// export const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\n// export const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\n// export const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\n// export const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\n// export const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\n// export const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\n// export const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\n// export const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\n// export const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\n// export const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\n// export const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\n// export const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\n// export const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\n// export const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\n// export const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\n// export const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\n// export const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\n// export const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\n// export const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\n// export const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'en-US': EN,\n  'zh-CN': ZHCN\n}\n\nexport const languageList = Object.values(languages)\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@glide-finance/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'ELA' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'ELA') return 'ELA'\n    if (valid === false) return 'ELA'\n  }\n  return 'ELA' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingGlide',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // popsicle\n    // Filter out price helper LP config farms\n    // const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n    //   return farm.pid || farm.pid === 0\n    // })\n\n    // return farmsWithoutHelperLps\n    return farmsWithPrices\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { TokenAmount, Pair, Currency } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","const getTokenLogoURL = (address: string) =>\n  // `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n  `/images/tokens/${address}.svg`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@glide-finance/sdk'\nimport { ElastosIcon, EthereumIcon, BinanceIcon, HecoIcon } from '@glide-finance/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n  chain,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n  chain?: number\n}) {\n  // console.log(currency)\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    if (chain) {\n      switch (chain) {\n        case 1:\n          return <EthereumIcon width={size} style={style} />\n        case 20:\n          return <ElastosIcon width={size} style={style} />\n        case 56:\n          return <BinanceIcon width={size} style={style} />\n        case 128:\n          return <HecoIcon width={size} style={style} />\n        default:\n          return <ElastosIcon width={size} style={style} />\n      }\n    } else {\n      return <ElastosIcon width={size} style={style} />\n    }\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import BigNumber from 'bignumber.js'\nimport communityConfig from 'config/constants/community'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = communityConfig.filter((p) => p.sousId !== 0 && p.sousId !== 1)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = communityConfig.filter((p) => p.stakingToken.symbol !== 'ELA')\n  const bnbPool = communityConfig.filter((p) => p.stakingToken.symbol === 'ELA')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = communityConfig\n    .filter((p) => p.stakingToken.symbol !== 'ELA' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import communityConfig from 'config/constants/community'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = communityConfig.filter((p) => p.stakingToken.symbol !== 'ELA')\nconst bnbPools = communityConfig.filter((p) => p.stakingToken.symbol === 'ELA')\nconst nonMasterPools = communityConfig.filter((p) => p.sousId !== 0 && p.sousId !== 1)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingGlide('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport communityConfig from 'config/constants/community'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { CommunityState, Pool, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber, getBalanceAmount } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport fetchFarms from '../farms/fetchFarms'\nimport fetchFarmsPrices from '../farms/fetchFarmsPrices'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: CommunityState = {\n  data: [...communityConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      glideAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n  dividendPool: {\n    totalStaked: null,\n    startBlock: null,\n    apr: null,\n    stakingTokenPrice: null,\n    earningTokenPrice: null,\n    userData: {\n      isLoading: true,\n      allowance: null,\n      stakingTokenBalance: null,\n      stakedBalance: null,\n      pendingReward: null\n    },\n  },\n}\n\n// Thunks\nexport const fetchCommunityPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n  const farms = getState().farms.data\n  const farmsWithPriceHelpers = farms.concat(priceHelperLpsConfig)\n  const communityFarms = await fetchFarms(farmsWithPriceHelpers)\n  const farmsWithPrices = await fetchFarmsPrices(communityFarms)\n  const prices = getTokenPricesFromFarm(farmsWithPrices)\n\n  const liveData = communityConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const { farmSymbol } = pool\n    // const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const farm = farmsWithPrices.find((f) => f.lpSymbol === farmSymbol)\n    const farmTokenPriceInUsd = new BigNumber(farm.token.usdcPrice)\n    let lpTokenPrice = BIG_ZERO\n    if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n      // Total value of base token in LP\n      const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n      // Double it to get overall value in LP\n      const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n      // Divide total value of all tokens, by the number of LP tokens\n      const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n      lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n    }\n\n    const stakingTokenPrice = Number(lpTokenPrice.toFixed(18))\n    // const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setCommunityPublicData(liveData))\n}\n\nexport const fetchCommunityStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = communityConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setCommunityPublicData(stakingLimitData))\n}\n\nexport const fetchCommunityUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = communityConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setCommunityUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updateCommunityUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updateCommunityUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updateCommunityUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updateCommunityUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const CommunitySlice = createSlice({\n  name: 'Community',\n  initialState,\n  reducers: {\n    setCommunityPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setCommunityUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updateCommunityUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  }\n})\n\n// Actions\nexport const { setCommunityPublicData, setCommunityUserData, updateCommunityUserData } = CommunitySlice.actions\n\nexport default CommunitySlice.reducer\n","import { Nft, NftSource, NftType } from './types'\n\n// export const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\nexport const IPFS_GATEWAY = 'https://ipfs0.trinity-feeds.app/'\n\nexport const nftSources: NftSource = {\n  [NftType.PHANTZ]: {\n    address: {\n      20: '0x020c7303664bc88ae92cE3D380BF361E03B78B81',\n    },\n    creator: 'https://assist.trinity-feeds.app/sticker/api/v1/query?creator=0x44016ed8638f5B517a5beC7a722A56d1DEBefef7',\n    identifierKey: 'image',\n  },\n}\n//\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Phantz Club',\n    description:\n      'Phantz are here to improve the formation of Web3 communities. Only 2822 memberships to the Phantz Club will be created, ever. Your NFT is a unique identity and programmatically generated to provide exclusive access to the club!',\n    images: {\n      lg: 'phantz.png',\n      md: 'phantz.png',\n      sm: 'phantz.png',\n      ipfs: 'https://ipfs0.trinity-feeds.app/ipfs/QmPGtSuHX1eY9eZbSD2bzDtiRBvAhTR1v4fK9a1K4wpzxF',\n    },\n    sortOrder: 999,\n    identifier: 'phantz',\n    type: NftType.PHANTZ,\n    variationId: 1,\n  }\n]\n\nexport default Nfts\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useDevBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe511F61Ab96818579f995a4Db356caf3e9A00fFf')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useTreasuryBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xFF998bF6F25e6b3dBdFedBecfC02B1e97a4FDb3c')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'glide_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\nimport { getGlidesPerYear } from 'utils/calls'\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param glidePriceUsd Glide price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  glidePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n  currentBlock: number,\n): { glideRewardsApr: number; lpRewardsApr: number } => {\n  if (currentBlock > 0) {\n    const glidesPerYear = getGlidesPerYear(new BigNumber(currentBlock)).times(65).div(100)\n    const yearlyGlideRewardAllocation = glidesPerYear.times(poolWeight)\n    const glideRewardsApr = yearlyGlideRewardAllocation.times(glidePriceUsd).div(poolLiquidityUsd).times(100)\n    let glideRewardsAprAsNumber = null\n    if (!glideRewardsApr.isNaN() && glideRewardsApr.isFinite()) {\n      glideRewardsAprAsNumber = glideRewardsApr.toNumber()\n    }\n    const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n    return { glideRewardsApr: glideRewardsAprAsNumber, lpRewardsApr }\n  }\n  return { glideRewardsApr: 0, lpRewardsApr: 0 }\n}\n\nexport default null\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@glide-finance/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork(20) // specify network to switch to\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(\"walletconnect\")\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { Currency, ETHER, Token } from '@glide-finance/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'ELA'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","import { Token } from '@glide-finance/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","// import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\n// const { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  // safemoon,\n  // bondly,\n}\n\nexport default SwapWarningTokens\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@glide-finance/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@glide-finance/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 1, 2) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'GLIDE',\n    lpAddresses: {\n      20: '0xd39eC832FF1CaaFAb2729c76dDeac967ABcA8F27',\n    },\n    token: tokens.sugar,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'GLIDE-ELA LP',\n    lpAddresses: {\n      20: '0xbeeAAb15628329C2C89Bc9F403d34b31fbCb3085',\n    },\n    token: tokens.glide,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'GLIDE-USDC LP',\n    lpAddresses: {\n      20: '0x26aCE9c9da938fb2Db91B0d0E7703861c249bf08',\n    },\n    token: tokens.glide,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'USDC-ELA LP',\n    lpAddresses: {\n      20: '0x6077b7990d3d0dfB5A50f1D207f67ac5955B999d',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ETH-ELA LP',\n    lpAddresses: {\n      20: '0xa86883c2405f4557D2242Df47b220C54d0D611e4',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'HUSD-USDC LP',\n    lpAddresses: {\n      20: '0xB0917F2595A2c4C56498f6da2C52690a3EF558D2',\n    },\n    token: tokens.husd,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'HT-ELA LP',\n    lpAddresses: {\n      20: '0xC6734784EE598855200dABC8D8B1fA1F11f14C90',\n    },\n    token: tokens.ht,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'htFILDA-ELA LP',\n    lpAddresses: {\n      20: '0x5B0Cf7D3b2D6885e1173674f4649B914e7A66B96',\n    },\n    token: tokens.htfilda,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'MTRL-ELA LP',\n    lpAddresses: {\n      20: '0x825872e7AB3EE8ABf1f1239711375e4F2b587220',\n    },\n    token: tokens.mtrl,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'ELK-GLIDE LP',\n    lpAddresses: {\n      20: '0x707A778354639EaAE03E739d2D5E8Db96CA30bF7',\n    },\n    token: tokens.elk,\n    quoteToken: tokens.glide,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BUSD-USDC LP',\n    lpAddresses: {\n      20: '0x9ad2439CaE9440427f3dFF53A11A57A5a7211152',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'BNB-ELA LP',\n    lpAddresses: {\n      20: '0x421C1960169a50a963Cd8317d10b96298CaD0dc6',\n    },\n    token: tokens.bnb,\n    quoteToken: tokens.wela,\n  },\n]\n\nexport default farms\n","export default __webpack_public_path__ + \"static/media/success.854f5e1c.png\";","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@glide-finance/sdk'\nimport styled from 'styled-components'\nimport {\n  Image,\n  Button,\n  Text,\n  ErrorIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  ButterflyLoader,\n  Modal,\n  InjectedModalProps,\n} from '@glide-finance/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\nimport GliderSuccessImage from './pngs/success.png'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 12px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 12px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <ButterflyLoader />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          {/* <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" /> */}\n          <Image src={GliderSuccessImage} alt=\"Submitted\" width={200} height={200} />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on explorer')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport Container from './Container'\n\n// const StyledPage = styled(Container)`\n//   min-height: 100vh;\n//   padding-top: 16px;\n//   padding-bottom: 16px;\n\n//   ${({ theme }) => theme.mediaQueries.sm} {\n//     padding-top: 24px;\n//     padding-bottom: 24px;\n//   }\n\n//   ${({ theme }) => theme.mediaQueries.lg} {\n//     padding-top: 32px;\n//     padding-bottom: 32px;\n//   }\n// `\n\nconst StyledPage = styled(Container)`\n  min-height: 100vh;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeUsdc()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\n// import { simpleRpcProvider } from 'utils/providers'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n  const { library } = useActiveWeb3React()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      // const blockNumber = await simpleRpcProvider.getBlockNumber()\n      const blockNumber = await library.getBlockNumber()\n      // console.log('blocknumber', blockNumber)\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch, library])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@glide-finance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('Clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@glide-finance/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, GradientHeading, IconButton, ArrowBackIcon, NotificationDot } from '@glide-finance/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst GradientHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background: linear-gradient(139.73deg, #0e1730 0%, #173560 100%);\n`\n\nconst GradientHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <GradientHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <GradientHeading as=\"h1\" mb=\"8px\" color=\"glide\" scale=\"lg\">\n            {title}\n          </GradientHeading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"16px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </GradientHeaderContainer>\n  )\n}\n\nexport default GradientHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@glide-finance/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@glide-finance/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@glide-finance/uikit'\n\nexport const GradientWrapper = styled(Card)`\n  background: linear-gradient(180deg, rgb(17, 28, 59) 0%, rgb(9, 13, 30) 100%);\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\nexport default function GradientBody({ children }: { children: React.ReactNode }) {\n  return <GradientWrapper>{children}</GradientWrapper>\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@glide-finance/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserslippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserslippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserslippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserslippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? '\t#d11576' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? '\t#d11576' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@glide-finance/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setRememberExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({\n  setShowConfirmExpertModal,\n  setRememberExpertModeAcknowledgement,\n}) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setRememberExpertModeAcknowledgement(true)\n            }\n          }\n        }}\n      >\n        {t('Turn on Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React, { useState } from 'react'\n// import styled from 'styled-components'\nimport { Text, Toggle, Flex, Modal, InjectedModalProps } from '@glide-finance/uikit'\nimport { useExpertModeManager, useUserSingleHopOnly } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\n// const PancakeToggleWrapper = styled.div`\n//   .pancakes {\n//     position: absolute;\n//   }\n// `\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [rememberExpertModeAcknowledgement, setRememberExpertModeAcknowledgement] = usePersistState(false, {\n    localStorageKey: 'glide_expert_mode_remember_acknowledgement',\n  })\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  // const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setRememberExpertModeAcknowledgement={setRememberExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (rememberExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '380px' }}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n        </Flex>\n        <TransactionSettings />\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        {/* <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggleWrapper>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n          </PancakeToggleWrapper>\n        </Flex> */}\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@glide-finance/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@glide-finance/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@glide-finance/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@glide-finance/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background: linear-gradient(250deg, #17264f 0%, hsl(220, 51%, 23%) 100%);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { signingMethods } from '@walletconnect/utils'\n// import { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@glide-finance/uikit'\nimport { ethers } from 'ethers'\n// import getNodeUrl from './getRpcUrl'\n\nsigningMethods.push('wallet_addEthereumChain', 'wallet_watchAsset', 'wallet_switchEthereumChain')\n\n// const POLLING_INTERVAL = 8000\n// const rpcUrl = getNodeUrl()\n// const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [1, 20, 56, 128] })\n\nconst walletconnect = new WalletConnectConnector({\n  // rpc: { [chainId]: rpcUrl },\n  rpc: {\n    1: `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_KEY}`,\n    20: 'https://api.elastos.io/eth',\n    56: 'https://bsc-dataseed1.defibit.io/',\n    128: 'https://http-mainnet.hecochain.com',\n  },\n  bridge: 'https://walletconnect.elastos.net/v2',\n  qrcode: true,\n  // pollingInterval: POLLING_INTERVAL,\n})\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  // library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@glide-finance/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@glide-finance/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n\nexport function shuffleArray(list) {\n  const array = [...list]\n  for (let i = array.length - 1; i > 0; i--) {\n    // Generate random number\n    const j = Math.floor(Math.random() * (i + 1))\n    const temp = array[i]\n    array[i] = array[j]\n    array[j] = temp\n  }\n  return array\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.usdcPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.usdcPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.usdcPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.usdcPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} ELA to WELA` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient ELA balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WELA to ELA` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WELA balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@glide-finance/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","export default __webpack_public_path__ + \"static/media/peak.fb8d134c.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Flex } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport GliderSuccessImage from './peak.png'\n\nconst StyledNav = styled.nav`\n  align-self: center;\n  margin-bottom: 20px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 0;\n    margin-left: 20px;\n  }\n`\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  border: none;\n`\n\nconst Glider = styled.div`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity') ||\n    pathname.includes('/bridge')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <Flex flexDirection={['row', null, null, 'row']}>\n      <Glider>\n        <img src={GliderSuccessImage} alt=\"Submitted\" width=\"80px\" height=\"71px\" />\n      </Glider>\n      <StyledNav>\n        <StyledButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n            {t('Swap')}\n          </ButtonMenuItem>\n          <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n            {t('Liquidity')}\n          </ButtonMenuItem>\n        </StyledButtonMenu>\n      </StyledNav>\n    </Flex>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@glide-finance/uikit'\n// import Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n// import { useTranslation } from 'contexts/Localization'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: 100vh;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 10vh;\n    min-height: 100vh;\n    background: radial-gradient(40% 55% at 45% 57.5%, #f2ad6c 0%, rgba(242, 173, 108, 0.4) 25%, rgba(6, 9, 20, 0) 72.5%),\n      radial-gradient(40% 45% at 55% 47.5%, #48b9ff 0%, rgba(72, 185, 255, 0.4) 25%, rgba(6, 9, 20, 0) 72.5%);\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n    background-position-y: -8vh;\n  }\n`\n// const LaunchWarning = styled(Flex)`\n//   border: 1px solid ${({ theme }) => theme.colors.primary};\n//   border-radius: 16px;\n//   margin-bottom: 20px;\n//   padding: 16px;\n//   max-width: 436px;\n//   width: 100%;\n// `\n\nconst GradientPage: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  // const { t } = useTranslation()\n\n  return (\n    <StyledPage {...props}>\n      {/* <LaunchWarning>\n        <Text bold color=\"primary\">\n          {t(\n            'The GLIDE supply is limited due to fair launch! Volatility will be high for a few days. Play safe!',\n          )}\n        </Text>\n      </LaunchWarning> */}\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n      {/* <Footer /> */}\n    </StyledPage>\n  )\n}\n\nexport default GradientPage\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@glide-finance/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'ELA' ? tokens.wela.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'GLIDE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          {/* <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex> */}\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.05% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { CurrencyAmount, ETHER, JSBI } from '@glide-finance/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@glide-finance/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n  border-radius: 24px;\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  // {\n  //   pid: null,\n  //   lpSymbol: 'USDC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  {\n    pid: null,\n    lpSymbol: 'RINU-ELA LP',\n    lpAddresses: {\n      20: '0x411DA456D450111648310c5Ec3D188755727b92c'\n    },\n    token: tokens.rinu,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: null,\n    lpSymbol: 'FINU-ELA LP',\n    lpAddresses: {\n      20: '0xe8134F4e731Bb9a70Ddc0013755994B4906d480f'\n    },\n    token: tokens.finu,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: null,\n    lpSymbol: 'BEER-ELA LP',\n    lpAddresses: {\n      20: '0xbcA320f6b57b422a7Bf98A5bFaf8635923998d41'\n    },\n    token: tokens.beer,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: null,\n    lpSymbol: 'SLOTH-ELA LP',\n    lpAddresses: {\n      20: '0x3DCe3e9C2DBe687ab1794E89e48ad0947c4ae48F'\n    },\n    token: tokens.sloth,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: null,\n    lpSymbol: 'BUN-ELA LP',\n    lpAddresses: {\n      20: '0xb454FC9F6681dCa0D7C3b7a170A89B8bD7bdA71A'\n    },\n    token: tokens.bun,\n    quoteToken: tokens.wela,\n  },\n]\n\nexport default priceHelperLps\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { shuffleArray } from 'utils/collectibles'\n// import { getAddress } from 'utils/addressHelpers'\n// import { getErc721Contract } from 'utils/contractHelpers'\n// import { getNftByTokenId } from 'utils/collectibles'\n// import { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\n// type NftSourceItem = [number, string]\n\n// Thunks\n// export const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\nexport const fetchWalletNfts = createAsyncThunk<any, string>('collectibles/fetchWalletNfts', async (account) => {\n  // For each nft source get nft data\n  const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n    const { creator } = nftSources[nftSourceType as NftType]\n    const creatorQuery = await fetch(creator).then((response) => response.json())\n    const ownedNfts = creatorQuery.data.filter(\n      // (nft) => nft.holder === '0x2aA33f425602c3c0b6313E71A1C0b981efa18142', // 3+\n      // (nft) => nft.holder === '0xA52B02C68cB65083788c46F2c08c6935f0aB19C1', // 2\n      // (nft) => nft.holder === '0x4b98efA1840e80962733432809Dd5e0ba941EA8C', // 1\n      (nft) => nft.holder === account,\n    )\n\n    const balanceOf = ownedNfts.length\n\n    if (balanceOf === 0) {\n      return []\n    }\n\n    return ownedNfts\n  })\n\n  const nftSourceData = await Promise.all(nftSourcePromises)\n  const randomSorted = shuffleArray(nftSourceData[0])\n\n  const payload = {\n    type: 'single',\n    sortby: 'createdAt$desc',\n    filterby: [],\n    address: account,\n    from: 0,\n    count: 999,\n    collectionAddresses: ['0xfdde60866508263e30c769e8592bb0f8c3274ba7'],\n  }\n\n  const elacityCollection = await fetch('https://ela.city/api/nftitems/fetchTokens', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(payload),\n  }).then((response) => response.json())\n\n  return { phantzV1: randomSorted.flat(), phantzV2: shuffleArray(elacityCollection.data.tokens) }\n})\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@glide-finance/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@glide-finance/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@glide-finance/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@glide-finance/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create an ERC-20 token on ESC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on explorer')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['USDC', 'wELA']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceUsdc: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'USDC') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wELA') {\n    return hasTokenPriceVsQuote ? bnbPriceUsdc.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for USDC/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't USDC or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - USDC price\n  if (quoteTokenFarm.quoteToken.symbol === 'wELA') {\n    const quoteTokenInUsdc = bnbPriceUsdc.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInUsdc\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInUsdc)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'USDC') {\n    const quoteTokenInUsdc = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInUsdc\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInUsdc)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed USDC/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceUsdc: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'USDC') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wELA') {\n    return bnbPriceUsdc\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wELA') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceUsdc.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'USDC') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbUsdcFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceUsdc = bnbUsdcFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbUsdcFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceUsdc)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceUsdc)\n    const token = { ...farm.token, usdcPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, usdcPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'Glide Finance',\n  description:\n    'The first incentivized AMM on ESC! Earn GLIDE through yield farming, then stake it in pools to earn more tokens!',\n  image: 'https://glidefinance.io/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Glide Finance')}`,\n      }\n    // case '/competition':\n    //   return {\n    //     title: `${t('Trading Battle')} | ${t('Glide Finance')}`,\n    //   }\n    // case '/prediction':\n    //   return {\n    //     title: `${t('Prediction')} | ${t('Glide Finance')}`,\n    //   }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('Glide Finance')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Stake')} | ${t('Glide Finance')}`,\n      }\n    case '/community':\n      return {\n        title: `${t('Community')} | ${t('Glide Finance')}`,\n    }\n    // case '/lottery':\n    //   return {\n    //     title: `${t('Lottery')} | ${t('Glide Finance')}`,\n    //   }\n    // case '/collectibles':\n    //   return {\n    //     title: `${t('Collectibles')} | ${t('Glide Finance')}`,\n    //   }\n    // case '/ifo':\n    //   return {\n    //     title: `${t('Initial Farm Offering')} | ${t('Glide Finance')}`,\n    //   }\n    // case '/teams':\n    //   return {\n    //     title: `${t('Leaderboard')} | ${t('Glide Finance')}`,\n    //   }\n    // case '/profile/tasks':\n    //   return {\n    //     title: `${t('Task Center')} | ${t('Glide Finance')}`,\n    //   }\n    // case '/profile':\n    //   return {\n    //     title: `${t('Your Profile')} | ${t('Glide Finance')}`,\n    //   }\n    default:\n      return null\n  }\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@glide-finance/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@glide-finance/sdk'\nimport React from 'react'\nimport { Button, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@glide-finance/sdk'\nimport React from 'react'\nimport { Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@glide-finance/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@glide-finance/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { GradientHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport GradientPage from '../GradientPage'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'ELA'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <GradientPage>\n      <AppBody>\n        <GradientHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Create LP tokens')}\n          // helper={t(\n          //   'Liquidity providers earn a 0.05% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          // )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </GradientPage>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@glide-finance/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@glide-finance/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\n// const StyledCard = styled(Card)`\n//   border-radius: 12px;\n// `\n\nconst StyledFlex = styled(Flex)`\n  background: linear-gradient(250deg, #17264f 0%, hsl(220, 51%, 23%) 100%);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\n\nconst StyledColumn = styled(AutoColumn)`\n  background: linear-gradient(250deg, #17264f 0%, hsl(220, 51%, 23%) 100%);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n  \n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            {t(\n              \"By adding liquidity you'll earn 0.05% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ ...props }: PositionCardProps) {\n  const { pair } = props;\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ marginBottom: '12px' }}>\n      <StyledFlex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>{t('Loading')}</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </StyledFlex>\n\n      {showMore && (\n        <StyledColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                {t('Pooled')} {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                {t('Pooled')} {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">{t('Share of pool')}</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                {t('Remove')}\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                {t('Add liquidity instead')}\n              </Button>\n            </Flex>\n          )}\n        </StyledColumn>\n      )}\n    </Card>\n  )\n}\n","import { ChainId } from '@glide-finance/sdk'\n\nconst NETWORK_URLS: { [chainId in ChainId]: string } = {\n  [ChainId.ETHEREUM]: `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_KEY}`,\n  [ChainId.MAINNET]: 'https://escrpc.elaphant.app', // https://api.elastos.io/eth\n  [ChainId.TESTNET]: 'https://api-testnet.elastos.io/eth',\n  [ChainId.BINANCE]: 'https://bsc-dataseed1.ninicoin.io/',\n  [ChainId.HECO]: 'https://http-mainnet.hecochain.com',\n}\n\nexport const BRIDGE_NETWORKS = {\n  20: {\n    chainId: `0x14`,\n    chainName: 'Elastos Smart Contract Chain',\n    nativeCurrency: {\n      name: 'ELA',\n      symbol: 'ela',\n      decimals: 18,\n    },\n    rpcUrls: ['https://escrpc.elaphant.app', 'https://api.elastos.io/eth', 'https://api.trinity-tech.cn/eth'],\n    blockExplorerUrls: ['https://esc.elastios.io'],\n  },\n  1: {\n    chainId: `0x1`,\n    chainName: 'Ethereum Mainnet',\n    nativeCurrency: {\n      name: 'ETH',\n      symbol: 'eth',\n      decimals: 18,\n    },\n    rpcUrls: [`https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_KEY}`],\n    blockExplorerUrls: ['https://etherscan.io'],\n  },\n  128: {\n    chainId: `0x80`,\n    chainName: 'Huobi ECO Chain',\n    nativeCurrency: {\n      name: 'HT',\n      symbol: 'ht',\n      decimals: 18,\n    },\n    rpcUrls: ['https://http-mainnet.hecochain.com', 'https://http-mainnet-node.huobichain.com'],\n    blockExplorerUrls: ['https://hecoinfo.com'],\n  },\n  56: {\n    chainId: `0x38`,\n    chainName: 'Binance Smart Chain',\n    nativeCurrency: {\n      name: 'BNB',\n      symbol: 'bnb',\n      decimals: 18,\n    },\n    rpcUrls: ['https://bsc-dataseed1.ninicoin.io/', 'https://bsc-dataseed1.defibit.io/'],\n    blockExplorerUrls: ['https://bscscan.com/'],\n  },\n}\n\nexport default NETWORK_URLS\n","const ARCHIVED_FARMS_START_PID = 1000\nconst ARCHIVED_FARMS_END_PID = 2500\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@glide-finance/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@glide-finance/sdk'\nimport { Text } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n  \n// border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border-radius: 10px;\n  display: flex;\n  padding: 8px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>ELA</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@glide-finance/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 28px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@glide-finance/sdk'\nimport { Text } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 28px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 28px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@glide-finance/sdk'\nimport { Text, Input, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\n// import { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\n// const swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  // const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'e' || s === 'el' || s === 'ela'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      // if (audioPlay) {\n      //   swapSound.play()\n      // }\n    },\n    [onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'ela') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@glide-finance/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@glide-finance/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {t('If you purchase a token from this list, you may not be able to sell it back.')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@glide-finance/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\nconst StyledModalHeader = styled(ModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <StyledModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </StyledModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        // return prev\n        return { chainId, blockNumber }\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      // .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n// import { simpleRpcProvider } from 'utils/providers'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\n// import { usePollBlockNumber } from '../block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  // usePollBlockNumber()\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  const { chainId } = useActiveWeb3React()\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@glide-finance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on explorer\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@glide-finance/uikit'\nimport useAuth from 'hooks/useAuth'\n\n// const _binanceChainListener = async () =>\n//   new Promise<void>((resolve) =>\n//     Object.defineProperty(window, 'BinanceChain', {\n//       get() {\n//         return this.bsc\n//       },\n//       set(bsc) {\n//         this.bsc = bsc\n\n//         resolve()\n//       },\n//     }),\n//   )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@glide-finance/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\n// background-color: ${({ theme }) => theme.colors.background};\n\n// const GlobalStyle = createGlobalStyle`\n//   * {\n//     font-family: 'Kanit', sans-serif;\n//   }\n//   body {\n//     position: fixed;\n//     inset: 0px;\n//     background-size: cover;\n//     background-repeat: no-repeat;\n//     background-image: url('/images/background-dark-1.png');\n\n//     img {\n//       height: auto;\n//       max-width: 100%;\n//     }\n//   }\n// `\n\n// const GlobalStyle = createGlobalStyle`\n//   * {\n//     font-family: 'Kanit', sans-serif;\n//   }\n//   body {\n//     position: fixed;\n//     inset: 0px;\n//     background-size: cover;\n//     background-repeat: no-repeat;\n//     background-image: url('/images/background-dark.png');\n\n//     img {\n//       height: auto;\n//       max-width: 100%;\n//     }\n//   }\n// `\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Nunito', sans-serif;\n  }\n  body {\n    background-color: #060914;\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { ContextApi } from 'contexts/Localization/types'\nimport { MenuItemsType, DropdownMenuItemType } from '@glide-finance/uikit'\n\nexport type ConfigMenuItemsType = MenuItemsType & { hideSubNav?: boolean }\n\nconst config: (t: ContextApi['t']) => ConfigMenuItemsType[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'Home',\n    href: '/',\n    showItemsOnMobile: false,\n    showOnMobile: false,\n  },\n  {\n    label: t('Trade'),\n    icon: 'Trade',\n    href: '/swap',\n    showItemsOnMobile: false,\n  },\n  {\n    label: t('Farm'),\n    icon: 'Farm',\n    href: '/farms',\n    showItemsOnMobile: false,\n  },\n  {\n    label: t('Stake'),\n    icon: 'Pool',\n    href: '/pools',\n    showItemsOnMobile: false,\n  },\n  {\n    label: t('Community'),\n    icon: 'Community',\n    href: '/community',\n    showItemsOnMobile: false,\n    showOnMobile: false,\n  },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'Community',\n  //   href: '/collectibles',\n  //   showItemsOnMobile: false,\n  //   showOnMobile: false\n  // },\n  {\n    label: t('Bridge'),\n    icon: 'Bridge',\n    href: '/bridge',\n    showItemsOnMobile: false,\n  },\n  {\n    label: t('Analytics'),\n    icon: 'Analytics',\n    href: '/info',\n    showItemsOnMobile: false,\n  },\n  {\n    label: t('Governance'),\n    icon: 'Vote',\n    href: 'https://snapshot.org/#/glidefinance.eth',\n    showItemsOnMobile: false,\n    showOnMobile: false,\n  },\n  {\n    label: '',\n    href: '/info',\n    icon: 'More',\n    hideSubNav: true,\n    showOnDesktop: false,\n    items: [\n      {\n        type: DropdownMenuItemType.PRICE,\n      },\n      {\n        type: DropdownMenuItemType.DIVIDER,\n      },\n      {\n        type: DropdownMenuItemType.SOCIALS,\n      },\n      {\n        type: DropdownMenuItemType.DIVIDER,\n      },\n      {\n        label: t('Code'),\n        href: 'https://github.com/glide-finance',\n        type: DropdownMenuItemType.EXTERNAL_LINK,\n      },\n      {\n        label: t('Docs & Help'),\n        href: 'https://docs.glidefinance.io',\n        type: DropdownMenuItemType.EXTERNAL_LINK,\n      },\n      {\n        label: t('Governance'),\n        href: 'https://snapshot.org/#/glidefinance.eth',\n        type: DropdownMenuItemType.EXTERNAL_LINK,\n      },\n      {\n        label: t('Community'),\n        icon: 'Pool',\n        href: '/community',\n        showItemsOnMobile: false,\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\n// background: linear-gradient(\n//   to right,\n//   ${({ theme }) => theme.colors.background}00,\n//   ${({ theme }) => theme.colors.background}E6\n// );\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text } from '@glide-finance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('ELA Balance Low')}</Text>\n            <Text as=\"p\">{t('You need ELA for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('ELA Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('GLIDE Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on explorer')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@glide-finance/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@glide-finance/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@glide-finance/uikit'\nimport useAuth from 'hooks/useAuth'\n// import { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\n// import ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  // const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  // const hasProfile = isInitialized && !!profile\n  // const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    // <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n    <UIKitUserMenu account={account}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n      {/* <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} /> */}\n      {/* <UserMenuDivider /> */}\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@glide-finance/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeUsdc, usePriceBnbUsdc } from 'state/farms/hooks'\n// import { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const glidePriceUsd = usePriceCakeUsdc()\n  const elaPriceUsd = usePriceBnbUsdc()\n  // const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      glidePriceUsd={glidePriceUsd.toNumber()}\n      elaPriceUsd={elaPriceUsd.toNumber()}\n      links={config(t)}\n      // profile={{\n      //   username: profile?.username,\n      //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n      //   profileLink: '/profile',\n      //   noProfileLink: '/profile',\n      //   showPip: !profile?.username,\n      // }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButterflyLoader } from '@glide-finance/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <ButterflyLoader />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s GLIDE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@glide-finance/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@glide-finance/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      {/* <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex> */}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@glide-finance/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automatically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@glide-finance/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.glide.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isDividendPool?: boolean\n  isMaterialPool?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'GLIDE' && stakingToken.symbol === 'GLIDE'\n  // const background = isStaking ? 'bubblegum' : 'cardHeader'\n  const background = 'bubblegum'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Stake GLIDE, earn GLIDE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'GLIDE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\n// import styled from 'styled-components'\nimport { Modal, Text, Button } from '@glide-finance/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\n// const StyledLink = styled(Link)`\n//   width: 100%;\n// `\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      {/* <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink> */}\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@glide-finance/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% tokens have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport {\n  Flex,\n  Text,\n  Button,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n  Skeleton,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button\n        disabled={isFinished || chainId !== 20}\n        onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n      >\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef, usePhantzPoolContract, usePhantzV2PoolContract } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPhantzPool = async (phantzPoolContract) => {\n  const tx = await phantzPoolContract.withdrawGlideReward()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n  const phantzPoolContract = usePhantzPoolContract()\n  const phantzV2PoolContract = usePhantzV2PoolContract()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else if (sousId === 3) {\n      await harvestPhantzPool(phantzPoolContract)\n    } else if (sousId === 4) {\n      await harvestPhantzPool(phantzV2PoolContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [\n    account,\n    dispatch,\n    isUsingBnb,\n    masterChefContract,\n    sousChefContract,\n    sousId,\n    phantzPoolContract,\n    phantzV2PoolContract,\n  ])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool?: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake GLIDE into pool.')}</Text>\n      <Text>{t('Harvest: collect GLIDE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        disabled={chainId !== 20}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings || chainId !== 20} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@glide-finance/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    // <StyledCard\n    //   isFinished={isFinished && sousId !== 0}\n    //   ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    // >\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          style={{ marginTop: '10px' }}\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport { Text } from '@glide-finance/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 7 days of staking. Unstaking after 7 days will not include a fee. Timer resets every time you stake new GLIDE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 7 days')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 7 days of staking. Unstaking after 7 days will not include a fee. Timer resets every time you stake new GLIDE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const usdValueStaked =\n    cakePriceUsdc.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceUsdc).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your tokens have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceUsdc.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const stakedDollarValue = cakePriceUsdc.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceUsdc), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceUsdc.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" GLIDE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@glide-finance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { glideAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    glideAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceUsdc.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent GLIDE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.glide}\n        stakingToken={tokens.glide}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useDividendPool } from 'state/pools/hooks'\n// import { useDividendPoolContract } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from '../PoolCard/Modals/PercentageButton'\nimport useStakePool from '../../hooks/useStakePool'\nimport useUnstakePool from '../../hooks/useUnstakePool'\nimport useActiveWeb3React from '../../../../hooks/useActiveWeb3React'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst DividendStakeModal: React.FC<StakeModalProps> = ({ isBnbPool, pool, isRemovingStake = false, onDismiss }) => {\n  // const dividendPoolContract = useDividendPoolContract()\n  const {\n    stakingTokenPrice,\n    userData: { stakingTokenBalance },\n  } = useDividendPool()\n  const { chainId } = useActiveWeb3React()\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% tokens have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || chainId !== 20}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default DividendStakeModal\n","import React from 'react'\nimport {\n  Flex,\n  Text,\n  Button,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n  Skeleton,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport DividendStakeModal from '../DividendStakeModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<DividendStakeModal isBnbPool={isBnbPool} pool={pool} />)\n  const [onPresentUnstake] = useModal(<DividendStakeModal isBnbPool={isBnbPool} pool={pool} isRemovingStake />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button\n        disabled={isFinished || chainId !== 20}\n        onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n      >\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings || chainId !== 20} onClick={onPresentCollect}>\n        {t('Collect')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst DividendCardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, earningTokenPrice, userData } = pool\n  // Pools using native ELA behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default DividendCardActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CardBody, Flex, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useDividendPool } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\n// import VaultCardActions from './VaultCardActions'\nimport DividendCardActions from './DividendCardActions'\n// import UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n// import RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface DividendPoolProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst DividendPoolCard: React.FC<DividendPoolProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { isLoading, allowance, stakingTokenBalance, stakedBalance, pendingReward },\n    apr,\n  } = useDividendPool()\n\n  const dividendPool = {\n    ...pool,\n    userData: { allowance, stakingTokenBalance, stakedBalance, pendingReward },\n    apr,\n  }\n\n  const accountHasSharesStaked = stakedBalance && stakedBalance.gt(0)\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isDividendPool\n        earningToken={tokens.ela}\n        stakingToken={tokens.glide}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={dividendPool} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            // <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            <DividendCardActions pool={dividendPool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={dividendPool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default DividendPoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useMaterialPool } from 'state/pools/hooks'\n// import { useDividendPoolContract } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from '../PoolCard/Modals/PercentageButton'\nimport useStakePool from '../../hooks/useStakePool'\nimport useUnstakePool from '../../hooks/useUnstakePool'\nimport useActiveWeb3React from '../../../../hooks/useActiveWeb3React'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst DividendStakeModal: React.FC<StakeModalProps> = ({ isBnbPool, pool, isRemovingStake = false, onDismiss }) => {\n  // const dividendPoolContract = useDividendPoolContract()\n  const {\n    stakingTokenPrice,\n    userData: { stakingTokenBalance },\n  } = useMaterialPool()\n  const { chainId } = useActiveWeb3React()\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% tokens have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || chainId !== 20}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default DividendStakeModal\n","import React from 'react'\nimport {\n  Flex,\n  Text,\n  Button,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n  Skeleton,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport DividendStakeModal from '../DividendStakeModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<DividendStakeModal isBnbPool={isBnbPool} pool={pool} />)\n  const [onPresentUnstake] = useModal(<DividendStakeModal isBnbPool={isBnbPool} pool={pool} isRemovingStake />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button\n        disabled={isFinished || chainId !== 20}\n        onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n      >\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings || chainId !== 20} onClick={onPresentCollect}>\n        {t('Collect')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst DividendCardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, earningTokenPrice, userData } = pool\n  // Pools using native ELA behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default DividendCardActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CardBody, Flex, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useMaterialPool } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\n// import VaultCardActions from './VaultCardActions'\nimport DividendCardActions from './DividendCardActions'\n// import UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n// import RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface MaterialPoolProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst MaterialPoolCard: React.FC<MaterialPoolProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { isLoading, allowance, stakingTokenBalance, materialStakedBalance: stakedBalance, pendingReward },\n    apr,\n  } = useMaterialPool()\n\n  const materialPool = {\n    ...pool,\n    userData: { allowance, stakingTokenBalance, stakedBalance, pendingReward },\n    apr,\n  }\n\n  const accountHasSharesStaked = stakedBalance && stakedBalance.gt(0)\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isMaterialPool\n        earningToken={tokens.mtrl}\n        stakingToken={tokens.mtrl}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={materialPool} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            // <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            <DividendCardActions pool={materialPool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={materialPool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default MaterialPoolCard\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings || chainId !== 20} onClick={onPresentCollect}>\n        {t('Collect')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst PhantzCardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, earningToken, harvest, earningTokenPrice, userData } = pool\n  // Pools using native ELA behave differently than pools using a token\n  const { t } = useTranslation()\n  // const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  // const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // const needsApproval = !allowance.gt(0)\n\n  // const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        {/* <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )} */}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default PhantzCardActions\n","// @ts-nocheck\nimport React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport styled from 'styled-components'\nimport {\n  CardBody,\n  CardHeader,\n  Flex,\n  Text,\n  Heading,\n  TooltipText,\n  useTooltip,\n  Skeleton,\n  AutoRenewIcon,\n  LinkExternal,\n} from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\n// import ConnectWalletButton from 'components/ConnectWalletButton'\n// import tokens from 'config/constants/tokens'\nimport { usePhantzPool, useCakeVault, usePools } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { useAppDispatch } from 'state'\n// import { fetchWalletNfts } from 'state/collectibles'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\n// import AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\n// import CardFooter from '../PoolCard/CardFooter'\n// import StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport PhantzCardActions from './PhantzCardActions'\nimport { convertSharesToCake } from '../../helpers'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>``\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  height: 112px;\n`\nconst LoadingContainer = styled.div`\n  padding: 16px;\n`\n\nconst PhantzContainer = styled(Flex)`\n  border-radius: 10px;\n  padding: 10px;\n`\n\nconst PhantzCutout = styled.img`\n  border-radius: 10px;\n  padding-left: 4px;\n  padding-right: 4px;\n`\n\ninterface PhantzPoolProps {\n  pool: Pool\n  showStakedOnly: boolean\n  version: string\n}\n\nconst BOOSTS = {\n  0: 0,\n  1: 0.07,\n  2: 0.14,\n  3: 0.2822,\n}\n\nconst PhantzPoolCard: React.FC<PhantzPoolProps> = ({ pool, showStakedOnly, version }) => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { t } = useTranslation()\n\n  const { tokenIds, isLoading: isNftLoading } = useGetCollectibles()\n  const { pools, userDataLoaded } = usePools(account)\n  const {\n    pricePerFullShare,\n    userData: { userShares },\n  } = useCakeVault()\n  const { cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const isFinished = false\n  const background = 'bubblegum'\n\n  let ownsPhantz = isNftLoading ? 0 : tokenIds.phantzV1.length > 0\n  let phantzToShow = ownsPhantz ? (tokenIds.phantzV1.length >= 3 ? 3 : tokenIds.phantzV1.length) : 0\n  if (version === 'V2') {\n    ownsPhantz = isNftLoading ? 0 : tokenIds.phantzV2.length > 0\n    phantzToShow = ownsPhantz ? (tokenIds.phantzV2.length >= 3 ? 3 : tokenIds.phantzV2.length) : 0\n  }\n\n  const boost = BOOSTS[phantzToShow]\n\n  const manual = pools.find((stakingPool) => stakingPool.sousId === 0)\n  const manualStakedBalance = manual?.userData\n    ? new BigNumber(manual.userData.stakedBalance).dividedBy(BIG_TEN.pow(18)).toString()\n    : 0\n  const bonusAPR = (parseFloat(manual?.apr) * boost).toFixed(2)\n  const totalStaked = (parseFloat(cakeAsNumberBalance) + parseFloat(manualStakedBalance)).toFixed(0)\n\n  const {\n    userData: { isLoading, allowance, stakingTokenBalance, phantzStakedBalance, pendingReward },\n  } = usePhantzPool(version === 'V2' ? 'phantzV2Pool' : 'phantzPool')\n\n  // const {\n  //   userData: { isLoading, allowance, stakingTokenBalance, phantzStakedBalance, pendingReward },\n  // } = usePhantzV2Pool()\n\n  const tooltipContent1 = t(\n    `Holding Phantz in your wallet can boost your staking rewards. 1 Phantz = 7%, 2 Phantz = 14%, 3+ Phantz = 28.22%`,\n  )\n  const tooltipContent2 = t(\n    'Total GLIDE staked. Boost only applies to GLIDE staked in Manual GLIDE and Auto GLIDE pools',\n  )\n  const tooltipContent3 = t('Your GLIDE staking APR boost for holding Phantz')\n\n  const {\n    targetRef: targetRef1,\n    tooltip: tooltip1,\n    tooltipVisible: visible1,\n  } = useTooltip(tooltipContent1, { placement: 'bottom-start' })\n  const {\n    targetRef: targetRef2,\n    tooltip: tooltip2,\n    tooltipVisible: visible2,\n  } = useTooltip(tooltipContent2, { placement: 'bottom-start' })\n  const {\n    targetRef: targetRef3,\n    tooltip: tooltip3,\n    tooltipVisible: visible3,\n  } = useTooltip(tooltipContent3, { placement: 'bottom-start' })\n\n  const phantzPool = {\n    ...pool,\n    userData: { allowance, stakingTokenBalance, phantzStakedBalance, pendingReward },\n  }\n\n  const accountHasSharesStaked = ownsPhantz && totalStaked > 0\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  // const handleRefresh = () => {\n  //   dispatch(fetchWalletNfts(account))\n  // }\n\n  return (\n    <StyledCard isActive>\n      <Wrapper isFinished={isFinished} background={background}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Flex flexDirection=\"column\">\n            <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n              Hold Phantz Club NFTs\n            </Heading>\n            <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>Boost your staking rewards!</Text>\n          </Flex>\n        </Flex>\n      </Wrapper>\n      {isNftLoading ? (\n        <LoadingContainer>\n          <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"8px\">\n            <Text fontSize=\"16px\" mr=\"12px\">\n              {version === 'V2' ? 'Checking for Phantz V1' : 'Checking for Phantz V2'}\n            </Text>\n            <AutoRenewIcon spin color=\"currentColor\" />\n          </Flex>\n          <Skeleton height=\"75px\" />\n        </LoadingContainer>\n      ) : (\n        <>\n          <Flex alignItems=\"center\" justifyContent=\"center\">\n            <Text fontSize=\"18px\" mt=\"8px\">\n              {version === 'V2'\n                ? `My Phantz (${phantzToShow} of ${tokenIds.phantzV2.length}) - ela.city`\n                : `My Phantz (${phantzToShow} of ${tokenIds.phantzV1.length}) - Feeds`}\n              {version === 'V1' && phantzToShow > 0 && (\n                <Flex alignItems=\"center\" justifyContent=\"center\">\n                  <LinkExternal fontSize=\"14px\" ml=\"6px\" mr=\"6px\" href=\"https://master.d3o588u45vsdnd.amplifyapp.com/\">\n                    Swap to V2 here!\n                  </LinkExternal>\n                </Flex>\n              )}\n            </Text>\n          </Flex>\n          <PhantzContainer alignItems=\"center\" justifyContent=\"center\">\n            {version === 'V2' ? (\n              ownsPhantz ? (\n                tokenIds.phantzV2.slice(0, phantzToShow).map((token) => {\n                  return (\n                    <Flex key={token.name} flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                      <PhantzCutout src={token.imageURL} alt=\"\" />\n                      <Text>{token.name}</Text>\n                    </Flex>\n                  )\n                })\n              ) : (\n                <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-around\">\n                  <PhantzCutout\n                    src=\"https://ipfs.ela.city/ipfs/QmeLbZoZpJ1ErerfHNZT8vNtQbwqy8VrEQPpPBBx6VrUQP/Ph-0029.jpg\"\n                    alt=\"\"\n                    width=\"20%\"\n                  />\n                  <Flex flexDirection=\"column\" alignItems=\"flex-start\" justifyContent=\"center\">\n                    <Text fontSize=\"14px\" ml=\"6px\" mr=\"6px\">\n                      No Phantz?\n                    </Text>\n                    <LinkExternal\n                      fontSize=\"14px\"\n                      ml=\"6px\"\n                      mr=\"6px\"\n                      href=\"https://ela.city/marketplace/collections/0xfdde60866508263e30c769e8592bb0f8c3274ba7\"\n                    >\n                      ela.city Marketplace\n                    </LinkExternal>\n                    <LinkExternal fontSize=\"14px\" ml=\"6px\" mr=\"6px\" href=\"https://phantzclub.com/\">\n                      phantzclub.com\n                    </LinkExternal>\n                  </Flex>\n                  <PhantzCutout\n                    src=\"https://ipfs.ela.city/ipfs/QmeLbZoZpJ1ErerfHNZT8vNtQbwqy8VrEQPpPBBx6VrUQP/Ph-0202.jpg\"\n                    alt=\"\"\n                    width=\"20%\"\n                  />\n                </Flex>\n              )\n            ) : ownsPhantz ? (\n              tokenIds.phantzV1.slice(0, phantzToShow).map((token) => {\n                return (\n                  <Flex key={token.name} flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                    <PhantzCutout\n                      src={\n                        token.version !== '1'\n                          ? `https://ipfs0.trinity-feeds.app/ipfs/${token.data.image.split(':')[2]}`\n                          : `https://ipfs0.trinity-feeds.app/ipfs/${token.asset.split(':')[2]}`\n                      }\n                      alt=\"\"\n                    />\n                    <Text>{token.name}</Text>\n                  </Flex>\n                )\n              })\n            ) : (\n              <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-around\">\n                <PhantzCutout\n                  src=\"https://ipfs0.trinity-feeds.app/ipfs/QmR7RxxTjETkD7QhfJpt1XMukR7uaRLV49PppwSEGqrJmr\"\n                  alt=\"\"\n                  width=\"20%\"\n                />\n                <Flex flexDirection=\"column\" alignItems=\"flex-start\" justifyContent=\"center\">\n                  <Text fontSize=\"14px\" ml=\"6px\" mr=\"6px\">\n                    No Phantz?\n                  </Text>\n                  <LinkExternal fontSize=\"14px\" ml=\"6px\" mr=\"6px\" href=\"https://trinity-feeds.app/\">\n                    Feeds Marketplace\n                  </LinkExternal>\n                  <LinkExternal fontSize=\"14px\" ml=\"6px\" mr=\"6px\" href=\"https://phantzclub.com/\">\n                    phantzclub.com\n                  </LinkExternal>\n                </Flex>\n                <PhantzCutout\n                  src=\"https://ipfs0.trinity-feeds.app/ipfs/QmfPCmSDpDSJWdtNdfWyWgvX9H6ggFeDPjyvqtCSCJndK2\"\n                  alt=\"\"\n                  width=\"20%\"\n                />\n              </Flex>\n            )}\n          </PhantzContainer>\n        </>\n      )}\n\n      <StyledCardBody isLoading={isLoading}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          {visible1 && tooltip1}\n          <TooltipText ref={targetRef1}>{t('My Boost Level')}</TooltipText>\n          {isFinished ? (\n            <Skeleton width=\"82px\" height=\"32px\" />\n          ) : (\n            <Flex alignItems=\"center\">\n              <Text>{`${phantzToShow} (${(boost * 100).toFixed(2)}%)`}</Text>\n            </Flex>\n          )}\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          {visible2 && tooltip2}\n          <TooltipText ref={targetRef2}>{t('My Total Stake')}</TooltipText>\n          {isFinished ? (\n            <Skeleton width=\"82px\" height=\"32px\" />\n          ) : (\n            <Flex alignItems=\"center\">\n              <Text>{`${totalStaked} GLIDE`}</Text>\n            </Flex>\n          )}\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          {visible3 && tooltip3}\n          <TooltipText ref={targetRef3}>{t('My Bonus APR')}</TooltipText>\n          {isFinished ? (\n            <Skeleton width=\"82px\" height=\"32px\" />\n          ) : (\n            <Flex alignItems=\"center\">\n              <Text>{`${bonusAPR}%`}</Text>\n            </Flex>\n          )}\n        </Flex>\n        {/* <AprRow pool={phantzPool} /> */}\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account && <PhantzCardActions pool={phantzPool} stakedBalance={phantzStakedBalance} />}\n        </Flex>\n      </StyledCardBody>\n    </StyledCard>\n  )\n}\n\nexport default PhantzPoolCard\n","// @ts-nocheck\nimport { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport Nfts from 'config/constants/nfts'\nimport { State } from '../types'\nimport { fetchWalletNfts } from './index'\n\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    // if (!isInitialized) {\n    dispatch(fetchWalletNfts(account))\n    // }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n// import ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  // const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {/* {viewModeToggle} */}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@glide-finance/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account, chainId } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceUsdc)\n  }, [cakePriceUsdc, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('GLIDE has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" GLIDE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" GLIDE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee || chainId !== 20}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceUsdc = usePriceCakeUsdc()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceUsdc)\n  }, [cakePriceUsdc, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto GLIDE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto GLIDE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Compound Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee || chainId !== 20}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@glide-finance/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, GradientHeading, Flex, Text, Button } from '@glide-finance/uikit'\n// import orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport {\n  useFetchPublicPoolsData,\n  usePools,\n  useFetchCakeVault,\n  useFetchDividendPool,\n  useFetchMaterialPool,\n  useFetchPhantzPool,\n  useFetchPhantzV2Pool,\n  useCakeVault,\n  useDividendPool,\n  useMaterialPool,\n} from 'state/pools/hooks'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\n// import tokens from 'config/constants/tokens'\nimport { usePollFarmsData } from 'state/farms/hooks'\n// import { latinise } from 'utils/latinise'\nimport { setupNetwork } from 'utils/wallet'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\n// import SearchInput from 'components/SearchInput'\n// import { OptionProps } from 'components/Select/Select'\n// import { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport DividendPoolCard from './components/DividendPoolCard'\nimport MaterialPoolCard from './components/MaterialPoolCard'\nimport PhantzPoolCard from './components/PhantzPoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\n// import HelpButton from './components/HelpButton'\n// import PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\n// import { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\n// const FilterContainer = styled.div`\n//   display: flex;\n//   align-items: center;\n//   width: 100%;\n//   padding: 8px 0px;\n\n//   ${({ theme }) => theme.mediaQueries.sm} {\n//     width: auto;\n//     padding: 0;\n//   }\n// `\n\n// const LabelWrapper = styled.div`\n//   > ${Text} {\n//     font-size: 12px;\n//   }\n// `\n\n// const ControlStretch = styled(Flex)`\n//   > div {\n//     flex: 1;\n//   }\n// `\n\nconst ConnectContainer = styled(Flex)`\n  margin-bottom: 15px;\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account, chainId, library } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'glide_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'glide_pool_view' })\n  // const [searchQuery, setSearchQuery] = useState('')\n  // const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const {\n    userData: { stakedBalance },\n  } = useDividendPool()\n  const {\n    userData: { materialStakedBalance },\n  } = useMaterialPool()\n\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const accountHasDividendPoolStake = stakedBalance && stakedBalance.gt(0)\n  const accountHasMaterialPoolStake = materialStakedBalance && materialStakedBalance.gt(0)\n  const accountHasPhantzPoolStake = true // account status handled down stream by component\n  const accountHasPhantzV2PoolStake = true\n  // const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const dividendPool = poolsWithoutAutoVault.find((pool) => pool.sousId === 1)\n    const materialPool = poolsWithoutAutoVault.find((pool) => pool.sousId === 2)\n    const phantzPool = poolsWithoutAutoVault.find((pool) => pool.sousId === 3)\n    const phantzV2Pool = poolsWithoutAutoVault.find((pool) => pool.sousId === 4)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    const cakeDividendPool = { ...dividendPool, isDividendPool: true }\n    const materialStakingPool = { ...materialPool, isMaterialPool: true }\n    const stakePhantzPool = { ...phantzPool, isPhantzPool: true }\n    const stakePhantzV2Pool = { ...phantzV2Pool, isPhantzV2Pool: true }\n    return [\n      cakeDividendPool,\n      cakeAutoVault,\n      ...poolsWithoutAutoVault.filter(\n        (pool) => pool.sousId !== 1 && pool.sousId !== 2 && pool.sousId !== 3 && pool.sousId !== 4,\n      ),\n      materialStakingPool,\n      stakePhantzPool,\n      stakePhantzV2Pool,\n    ]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        if (pool.isDividendPool) {\n          return accountHasDividendPoolStake\n        }\n        if (pool.isMaterialPool) {\n          return accountHasMaterialPoolStake\n        }\n        if (pool.isPhantzPool) {\n          return accountHasPhantzPoolStake\n        }\n        if (pool.isPhantzV2Pool) {\n          return accountHasPhantzV2PoolStake\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [\n      finishedPools,\n      accountHasVaultShares,\n      accountHasDividendPoolStake,\n      accountHasPhantzPoolStake,\n      accountHasPhantzV2PoolStake,\n      accountHasMaterialPoolStake,\n    ],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        if (pool.isDividendPool) {\n          return accountHasDividendPoolStake\n        }\n        if (pool.isMaterialPool) {\n          return accountHasMaterialPoolStake\n        }\n        if (pool.isPhantzPool) {\n          return accountHasPhantzPoolStake\n        }\n        if (pool.isPhantzV2Pool) {\n          return accountHasPhantzV2PoolStake\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [\n      openPools,\n      accountHasVaultShares,\n      accountHasDividendPoolStake,\n      accountHasPhantzPoolStake,\n      accountHasPhantzV2PoolStake,\n      accountHasMaterialPoolStake,\n    ],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchDividendPool()\n  useFetchMaterialPool()\n  useFetchPhantzPool()\n  useFetchPhantzV2Pool()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  // const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setSearchQuery(event.target.value)\n  // }\n\n  // const handleSortOptionChange = (option: OptionProps): void => {\n  //   setSortOption(option.value)\n  // }\n\n  // const sortPools = (poolsToSort: Pool[]) => {\n  //   switch (sortOption) {\n  //     case 'apr':\n  //       // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n  //       return orderBy(\n  //         poolsToSort,\n  //         (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n  //         'desc',\n  //       )\n  //     case 'earned':\n  //       return orderBy(\n  //         poolsToSort,\n  //         (pool: Pool) => {\n  //           if (!pool.userData || !pool.earningTokenPrice) {\n  //             return 0\n  //           }\n  //           return pool.isAutoVault\n  //             ? getCakeVaultEarnings(\n  //                 account,\n  //                 glideAtLastUserAction,\n  //                 userShares,\n  //                 pricePerFullShare,\n  //                 pool.earningTokenPrice,\n  //               ).autoUsdToDisplay\n  //             : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n  //         },\n  //         'desc',\n  //       )\n  //     case 'totalStaked':\n  //       return orderBy(\n  //         poolsToSort,\n  //         (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n  //         'desc',\n  //       )\n  //     default:\n  //       return poolsToSort\n  //   }\n  // }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  // if (searchQuery) {\n  //   const lowercaseQuery = latinise(searchQuery.toLowerCase())\n  //   chosenPools = chosenPools.filter((pool) =>\n  //     latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n  //   )\n  // }\n\n  // chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPools = chosenPools.slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isDividendPool ? (\n          <DividendPoolCard key=\"dividend-pool\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : pool.isMaterialPool ? (\n          <MaterialPoolCard key=\"material-pool\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : pool.isPhantzPool ? (\n          <PhantzPoolCard key=\"phantz-pool\" pool={pool} showStakedOnly={stakedOnly} version=\"V1\" />\n        ) : pool.isPhantzV2Pool ? (\n          <PhantzPoolCard key=\"phantzV2-pool\" pool={pool} showStakedOnly={stakedOnly} version=\"V2\" />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  // const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <Page>\n        <PageHeader>\n          <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n            <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n              <GradientHeading as=\"h1\" scale=\"xxl\" color=\"glide\" mb=\"24px\">\n                {t('Sugar Pools')}\n              </GradientHeading>\n              <Heading scale=\"lg\" color=\"text\">\n                {t('Stake tokens to earn')}\n              </Heading>\n              {/* <Heading scale=\"md\" color=\"text\">\n                {t('High APR, low risk.')}\n              </Heading> */}\n            </Flex>\n            <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n              {/* <HelpButton /> */}\n              <BountyCard />\n            </Flex>\n          </Flex>\n        </PageHeader>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          {/* <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer> */}\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\" ml=\"12px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {chainId !== 20 && (\n          <ConnectContainer justifyContent=\"center\">\n            <Button\n              onClick={() => {\n                setupNetwork(20, library)\n              }}\n            >\n              {t('Connect to the Elastos network to begin')}\n            </Button>\n          </ConnectContainer>\n        )}\n        {/* {viewMode === ViewMode.CARD ? cardLayout : tableLayout} */}\n        {cardLayout}\n        <div ref={loadMoreRef} />\n        {/* <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        /> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  glideAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && glideAtLastUserAction && glideAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(glideAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Community } from 'state/types'\nimport { getAprData } from 'views/Community/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Community\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s GLIDE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/add/${getAddress(stakingToken.address)}/ELA` : '/add'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@glide-finance/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  HelpIcon,\n} from '@glide-finance/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    // startBlock,\n    // endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              {/* <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}> */}\n              <Balance small value={blocksToDisplay} decimals={0} />\n              <Text small ml=\"4px\" textTransform=\"lowercase\">\n                {t('Blocks')}\n              </Text>\n              <TimerIcon ml=\"4px\" />\n              {/* </Link> */}\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      {/* <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex> */}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@glide-finance/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automatically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  pairToken?: Token\n  isFinished?: boolean\n}> = ({ earningToken, stakingToken, pairToken, isFinished = false }) => {\n  const { t } = useTranslation()\n  // const background = isStaking ? 'bubblegum' : 'cardHeader'\n  const background = 'bubblegum'\n\n  const getHeadingPrefix = () => {\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {/* <TokenImage token={earningToken} width={64} height={64} /> */}\n        <TokenPairImage\n          variant=\"inverted\"\n          primaryToken={earningToken}\n          secondaryToken={pairToken}\n          width={80}\n          height={80}\n        />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useCommunityChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useCommunityChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'GLIDE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\n// import styled from 'styled-components'\nimport { Modal, Text, Button } from '@glide-finance/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\n// const StyledLink = styled(Link)`\n//   width: 100%;\n// `\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Create some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/add\">\n        {t('Create')} {tokenSymbol}\n      </Button>\n      {/* <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink> */}\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@glide-finance/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useCommunityChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useCommunityChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useCommunityChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useCommunityChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, Slider, BalanceInput, AutoRenewIcon } from '@glide-finance/uikit'\n// import { TokenPairImage } from 'components/TokenImage'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Community } from 'state/types'\n// import { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Community\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\n// const StyledLink = styled(Link)`\n//   width: 100%;\n// `\n\nconst StyledText = styled(Text)`\n  white-space: nowrap;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% tokens have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          {/* <TokenPairImage\n            variant=\"inverted\"\n            primaryToken={earningToken}\n            secondaryToken={pairToken}\n            width={32}\n            height={32}\n          /> */}\n          <StyledText ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </StyledText>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {/* {!isRemovingStake && (\n        <StyledLink external href=\"/add\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )} */}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport {\n  Flex,\n  Text,\n  Button,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n  Skeleton,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Community } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface StakeActionsProps {\n  pool: Community\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button\n        disabled={isFinished || chainId !== 20}\n        onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n      >\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useCommunityChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useCommunityChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake GLIDE into pool.')}</Text>\n      <Text>{t('Harvest: collect GLIDE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        disabled={chainId !== 20}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings || chainId !== 20} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@glide-finance/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Community } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Community; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, pairToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    // <StyledCard\n    //   isFinished={isFinished && sousId !== 0}\n    //   ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    // >\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        pairToken={pairToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          style={{ marginTop: '10px' }}\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import React from 'react'\nimport { Text } from '@glide-finance/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 7 days of staking. Unstaking after 7 days will not include a fee. Timer resets every time you stake new GLIDE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 7 days')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 7 days of staking. Unstaking after 7 days will not include a fee. Timer resets every time you stake new GLIDE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const usdValueStaked =\n    cakePriceUsdc.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceUsdc).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your tokens have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceUsdc.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const stakedDollarValue = cakePriceUsdc.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceUsdc), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceUsdc.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" GLIDE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@glide-finance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { glideAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    glideAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceUsdc.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent GLIDE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader earningToken={tokens.glide} stakingToken={tokens.glide} />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useDividendPool } from 'state/pools/hooks'\n// import { useDividendPoolContract } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from '../PoolCard/Modals/PercentageButton'\nimport useStakePool from '../../hooks/useStakePool'\nimport useUnstakePool from '../../hooks/useUnstakePool'\nimport useActiveWeb3React from '../../../../hooks/useActiveWeb3React'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst DividendStakeModal: React.FC<StakeModalProps> = ({ isBnbPool, pool, isRemovingStake = false, onDismiss }) => {\n  // const dividendPoolContract = useDividendPoolContract()\n  const {\n    stakingTokenPrice,\n    userData: { stakingTokenBalance },\n  } = useDividendPool()\n  const { chainId } = useActiveWeb3React()\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% tokens have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || chainId !== 20}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default DividendStakeModal\n","import React from 'react'\nimport {\n  Flex,\n  Text,\n  Button,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n  Skeleton,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport DividendStakeModal from '../DividendStakeModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<DividendStakeModal isBnbPool={isBnbPool} pool={pool} />)\n  const [onPresentUnstake] = useModal(<DividendStakeModal isBnbPool={isBnbPool} pool={pool} isRemovingStake />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button\n        disabled={isFinished || chainId !== 20}\n        onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n      >\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings || chainId !== 20} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst DividendCardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, earningTokenPrice, userData } = pool\n  // Pools using native ELA behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default DividendCardActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CardBody, Flex, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useDividendPool } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\n// import VaultCardActions from './VaultCardActions'\nimport DividendCardActions from './DividendCardActions'\n// import UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n// import RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface DividendPoolProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst DividendPoolCard: React.FC<DividendPoolProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { isLoading, allowance, stakingTokenBalance, stakedBalance, pendingReward },\n    apr,\n  } = useDividendPool()\n\n  const dividendPool = {\n    ...pool,\n    userData: { allowance, stakingTokenBalance, stakedBalance, pendingReward },\n    apr,\n  }\n\n  const accountHasSharesStaked = stakedBalance && stakedBalance.gt(0)\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader earningToken={tokens.ela} stakingToken={tokens.glide} />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={dividendPool} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            // <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            <DividendCardActions pool={dividendPool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={dividendPool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default DividendPoolCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n// import ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  // const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {/* {viewModeToggle} */}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, GradientHeading, Flex, Text, Button } from '@glide-finance/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicCommunityData, useCommunityChef } from 'state/community/hooks'\n// import tokens from 'config/constants/tokens'\nimport { usePollFarmsData } from 'state/farms/hooks'\n// import { latinise } from 'utils/latinise'\nimport { setupNetwork } from 'utils/wallet'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport DividendPoolCard from './components/DividendPoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\n// import HelpButton from './components/HelpButton'\n// import PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst ConnectContainer = styled(Flex)`\n  margin-bottom: 15px;\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Community: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account, chainId, library } = useWeb3React()\n  const { community: poolsWithoutAutoVault, userDataLoaded } = useCommunityChef(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'glide_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'glide_pool_view' })\n  // const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('apr')\n  const chosenPoolsLength = useRef(0)\n\n  // const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    return [...poolsWithoutAutoVault.filter((pool) => pool.sousId !== 1)]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchPublicCommunityData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  // const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setSearchQuery(event.target.value)\n  // }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(poolsToSort, (pool: Pool) => (pool.apr ? getAprData(pool, 0).apr : 0), 'desc')\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(poolsToSort, (pool: Pool) => pool.totalStaked.toNumber(), 'desc')\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  // if (searchQuery) {\n  //   const lowercaseQuery = latinise(searchQuery.toLowerCase())\n  //   chosenPools = chosenPools.filter((pool) =>\n  //     latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n  //   )\n  // }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPools = chosenPools.slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isDividendPool ? (\n          <DividendPoolCard key=\"dividend-pool\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  // const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <Page>\n        <PageHeader>\n          <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n            <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n              <GradientHeading as=\"h1\" scale=\"xxl\" color=\"glide\" mb=\"24px\">\n                {t('Community Zone')}\n              </GradientHeading>\n              <Heading scale=\"lg\" color=\"text\">\n                {t(`Don't let your memes be dreams`)}\n              </Heading>\n            </Flex>\n          </Flex>\n        </PageHeader>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            {/* <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper> */}\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\" ml=\"12px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {chainId !== 20 && (\n          <ConnectContainer justifyContent=\"center\">\n            <Button\n              onClick={() => {\n                setupNetwork(20, library)\n              }}\n            >\n              {t('Connect to the Elastos network to begin')}\n            </Button>\n          </ConnectContainer>\n        )}\n        {/* {viewMode === ViewMode.CARD ? cardLayout : tableLayout} */}\n        {cardLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Community\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\n// import { getDividendPoolContract, getCakeContract } from 'utils/contractHelpers'\nimport {\n  fetchCommunityPublicDataAsync,\n  fetchCommunityUserDataAsync,\n  fetchCommunityStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\n// import { transformPool, getTokenPricesFromFarm } from './helpers'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicCommunityData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchCommunityPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchCommunityPublicDataAsync(blockNumber))\n    }\n\n    fetchCommunityPublicData()\n    dispatch(fetchCommunityStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useCommunityChef = (account): { community: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchCommunityUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { community, userDataLoaded } = useSelector((state: State) => ({\n    community: state.community.data,\n    userDataLoaded: state.community.userDataLoaded,\n  }))\n  return { community: community.map(transformPool), userDataLoaded }\n}\n\nexport const useCommunityChefPublicData = (): { community: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    const fetchCommunityPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchCommunityPublicDataAsync(blockNumber))\n    }\n\n    fetchCommunityPublicData()\n  }, [dispatch, fastRefresh])\n\n  const { community, userDataLoaded } = useSelector((state: State) => ({\n    community: state.community.data,\n    userDataLoaded: state.community.userDataLoaded,\n  }))\n  return { community: community.map(transformPool), userDataLoaded }\n}","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on explorer')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@glide-finance/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@glide-finance/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@glide-finance/sdk'\nimport { Button, Text, AutoRenewIcon } from '@glide-finance/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.05% to LP token holders</Text>\n                  <Text>- 0.20% is converted to ELA and shared with users</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Trade, TradeType } from '@glide-finance/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@glide-finance/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {t(`Output is estimated. You will receive at least`)}{' '}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' '}{t('or the transaction will revert.')}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {t(`Input is estimated. You will sell at most`)}{' '}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' '}{t('or the transaction will revert.')}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {t('Output will be sent to')}{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@glide-finance/sdk'\nimport { InjectedModalProps } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@glide-finance/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@glide-finance/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@glide-finance/sdk'\nimport { Text } from '@glide-finance/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.05% to LP token holders</Text>\n                <Text>- 0.20% is converted to ELA and shared with users</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.colors.backgroundAlt};\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@glide-finance/sdk'\nimport { Text, AutoRenewIcon } from '@glide-finance/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { Modal, InjectedModalProps } from '@glide-finance/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@glide-finance/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@glide-finance/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@glide-finance/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@glide-finance/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@glide-finance/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport { setupNetwork } from 'utils/wallet'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { GradientHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport GradientPage from '../GradientPage'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <GradientPage>\n      <AppBody>\n        <GradientHeader title={t('Exchange')} subtitle={t('Trade tokens effortlessly')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {chainId !== 20 ? (\n              <Button\n                width=\"100%\"\n                onClick={() => {\n                  setupNetwork(20, library)\n                }}\n              >\n                {t('Connect to the Elastos network to begin')}\n              </Button>\n            ) : swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? t(`Price Impact Too High`)\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </GradientPage>\n  )\n}\n","import { Percent } from '@glide-finance/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|ELA)-(0x[a-fA-F0-9]{40}|ELA)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\n// import { usePollCoreFarmData } from 'state/farms/hooks'\n// import { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\n// import EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Community from './views/Community'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Bridge = lazy(() => import('./views/Bridge'))\n// const FarmAuction = lazy(() => import('./views/FarmAuction'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst Info = lazy(() => import('./views/Info'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Collectibles = lazy(() => import('./views/Collectibles'))\n// const Teams = lazy(() => import('./views/Teams'))\n// const Team = lazy(() => import('./views/Teams/Team'))\n// const Profile = lazy(() => import('./views/Profile'))\n// const TradingCompetition = lazy(() => import('./views/TradingCompetition'))\n// const Predictions = lazy(() => import('./views/Predictions'))\n// const Voting = lazy(() => import('./views/Voting'))\n// const Proposal = lazy(() => import('./views/Voting/Proposal'))\n// const CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  useEagerConnect()\n  // useFetchProfile()\n  usePollBlockNumber()\n  // usePollCoreFarmData()\n  usePollFarmsData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            {/* <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route> */}\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/community\">\n              <Community />\n            </Route>\n            <Route path=\"/bridge\">\n              <Bridge />\n            </Route>\n            {/* <Route path=\"/lottery\">\n              <Lottery />\n            </Route> */}\n            {/* <Route path=\"/ifo\">\n              <Ifos />\n            </Route> */}\n            {/* <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route> */}\n            {/* <Route exact path=\"/teams\">\n              <Teams />\n            </Route> */}\n            {/* <Route path=\"/teams/:id\">\n              <Team />\n            </Route> */}\n            {/* <Route path=\"/profile\">\n              <Profile />\n            </Route> */}\n            {/* <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route> */}\n            {/* <Route path=\"/prediction\">\n              <Predictions />\n            </Route> */}\n            {/* <Route exact path=\"/voting\">\n              <Voting />\n            </Route> */}\n            {/* <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route> */}\n            {/* <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route> */}\n\n            {/* Info pages */}\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/sugar\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route> */}\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      {/* <EasterEgg iterations={2} /> */}\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, dark } from '@glide-finance/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\n// import { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  // const [isDark] = useThemeManager()\n  // return <ThemeProvider theme={isDark ? dark : light} {...props} />\n  return <ThemeProvider theme={dark} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}