{"version":3,"sources":["state/info/queries/search/index.ts","views/Info/components/CurrencyLogo/LogoLoader.tsx","views/Info/components/CurrencyLogo/index.tsx","views/Info/utils/formatInfoNumbers.ts","views/Info/components/SaveIcon/index.tsx","views/Info/components/InfoSearch/index.tsx","views/Info/components/InfoNav/index.tsx","views/Info/components/ChartLoaders/LineChartLoaderSVG.tsx","views/Info/components/ChartLoaders/BarChartLoaderSVG.tsx","views/Info/components/ChartLoaders/CandleChartLoaderSVG.tsx","views/Info/components/ChartLoaders/index.tsx","views/Info/components/InfoCharts/LineChart/index.tsx","views/Info/components/Percent/index.tsx","views/Info/components/InfoTables/shared.tsx","views/Info/components/InfoTables/TokensTable.tsx","views/Info/components/InfoTables/PoolsTable.tsx","views/Info/components/InfoCharts/BarChart/index.tsx","utils/truncateHash.ts","views/Info/components/InfoTables/TransactionsTable.tsx","views/Info/Overview/index.tsx","views/Info/Pools/index.tsx","hooks/useUSDCPrice.ts","views/Info/components/InfoCharts/ChartCard/index.tsx","components/Layout/Page1.tsx","views/Info/components/InfoCharts/CandleChart/index.tsx","components/TabToggle/index.tsx","views/Info/Pools/PoolPage.tsx","views/Info/components/TopTokenMovers/index.tsx","views/Info/Tokens/index.tsx","views/Info/hooks/useCMCLink.ts","views/Info/Tokens/TokenPage.tsx","views/Info/Tokens/redirects.tsx","views/Info/index.tsx"],"names":["TOKEN_SEARCH","gql","POOL_SEARCH","getIds","entityArrays","ids","reduce","entities","currentTokenArray","map","entity","id","Array","from","Set","useFetchSearchResults","searchString","useState","tokens","pools","loading","error","searchResults","setSearchResults","searchStringTooShort","length","MINIMUM_SEARCH_CHARACTERS","useEffect","search","a","request","INFO_CLIENT","symbol","toUpperCase","name","charAt","slice","toLowerCase","tokenIds","asAddress","asSymbol","asName","as0","as1","console","tokenDatasFull","useTokenDatas","poolDatasFull","usePoolDatas","tokensLoading","poolsLoading","BAD_SRCS","LogoLoader","src","alt","rest","refresh","srcFailedLoading","includes","onError","push","i","StyledLogo","styled","size","theme","colors","background","text","CurrencyLogo","address","useMemo","checksummedAddress","isAddress","BASE_URL","DoubleCurrencyWrapper","div","DoubleCurrencyLogo","address0","address1","toString","formatAmount","amount","options","notation","displayThreshold","tokenPrecision","isInteger","toFixed","match","precision","format","repeat","amountWithPrecision","parseFloat","numeral","HoverIcon","SaveIcon","fill","useTheme","stroke","warning","color","textDisabled","Container","StyledInput","Input","inputSecondary","Menu","hide","secondary","mediaQueries","sm","md","Blackout","ResponsiveGrid","Break","cardBorder","HoverText","HoverRowLink","OptionButton","enabled","primary","card","tokenIncludesSearchTerm","token","value","Search","history","useHistory","useMatchBreakpoints","isXs","isSm","t","useTranslation","inputRef","useRef","menuRef","showMoreRef","showMenu","setShowMenu","setValue","debouncedSearchTerm","useDebounce","tokensShown","setTokensShown","poolsShown","setPoolsShown","handleOutsideClick","e","menuClick","current","contains","target","inputCLick","showMoreClick","document","addEventListener","querySelector","style","overflow","removeEventListener","useWatchlistTokens","savedTokens","addSavedToken","useWatchlistPools","savedPools","addSavedPool","handleItemClick","to","watchListTokenData","watchListTokenLoading","watchListPoolData","watchListPoolLoading","showWatchlist","setShowWatchlist","tokensForList","filter","sort","t0","t1","volumeUSD","poolForList","pool","token0","token1","poolIncludesSearchTerm","p0","p1","type","onChange","placeholder","ref","onFocus","mb","onClick","bold","textAlign","fontSize","ml","marginLeft","stopPropagation","priceUSD","liquidityUSD","isLoading","noTokensFound","noWatchlistTokens","showMessage","noTokensMessage","contentUnderTokenList","p","whiteSpace","volumeUSDWeek","noPoolsFound","noWatchlistPools","noPoolsMessage","contentUnderPoolList","NavWrapper","Flex","gradients","cardHeader","InfoNav","activeIndex","useRouteMatch","scale","variant","as","Link","width","LineChartLoaderSVG","props","height","preserveAspectRatio","viewBox","d","strokeWidth","strokeDasharray","strokeDashoffset","opacity","attributeName","dur","begin","className","result","stdDeviation","in","BarChartLoaderSVG","values","keyTimes","repeatCount","x","CandleChartLoaderSVG","LoadingText","Box","LoadingIndicator","BarChartLoader","LineChartLoader","CandleChartLoader","HoverUpdater","payload","setHoverValue","setHoverDate","time","LineChart","data","ResponsiveContainer","AreaChart","margin","top","right","left","bottom","onMouseLeave","undefined","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","axisLine","tickLine","tickFormatter","minTickGap","YAxis","tickCount","val","orientation","tick","dx","textSubtle","Tooltip","cursor","contentStyle","display","formatter","tooltipValue","Area","Percent","Number","isNaN","isNegative","Math","abs","ClickableColumnHeader","Text","TableWrapper","radii","PageButtons","Arrow","LinkWrapper","ResponsiveLogo","TableLoader","loadingRow","DataRow","tokenData","index","alignItems","fontWeight","priceUSDChange","SORT_FIELD","TokenTable","tokenDatas","maxItems","sortField","setSortField","sortDirection","setSortDirection","page","setPage","maxPage","setMaxPage","extraPages","floor","sortedTokens","b","handleSort","useCallback","newField","arrow","field","textTransform","Fragment","LoadingRow","poolData","lpFees24h","lpApr7d","PoolTable","poolDatas","ITEMS_PER_INFO_TABLE_PAGE","sortedPools","CustomBar","y","rx","Chart","BarChart","backgroundDisabled","Bar","shape","truncateHash","startLength","endLength","substring","Wrapper","RadioGroup","transaction","abs0","amountToken0","abs1","amountToken1","outputTokenSymbol","token0Symbol","token1Symbol","inputTokenSymbol","href","getBscScanLink","hash","TransactionType","MINT","SWAP","amountUSD","sender","formatDistanceToNowStrict","parseInt","timestamp","TransactionTable","transactions","txFilter","setTxFilter","sortedTransactions","filteredTransactions","tx","handleFilter","newFilter","flexDirection","checked","BURN","justifyContent","ChartCardsContainer","Overview","liquidityHover","setLiquidityHover","liquidityDateHover","setLiquidityDateHover","volumeHover","setVolumeHover","volumeDateHover","setVolumeDateHover","useProtocolData","protocolData","useProtocolChartData","chartData","useProtocolTransactions","currentDate","Date","formattedLiquidityData","day","fromUnixTime","date","formattedVolumeData","allTokens","useAllTokenData","formattedTokens","Object","allPoolData","useAllPoolData","somePoolsAreLoading","some","Page","mt","PoolsOverview","watchlistPools","px","py","USDC_MAINNET","USDC","ChainId","MAINNET","ChartView","useCakeUsdcPrice","currentChaindId","useActiveWeb3React","chainId","glideUsdcPrice","currency","wrapped","wrappedCurrency","tokenPairs","currencyEquals","WETH","equals","usePairs","ethPairState","ethPair","usdcPairState","usdcPair","usdcEthPairState","usdcEthPair","price","priceOf","Price","denominator","numerator","ethPairETHAmount","reserveOf","ethPairETHUSDCValue","quote","raw","JSBI","BigInt","PairState","EXISTS","greaterThan","ethUsdcPrice","currencyEthPrice","usdcPrice","multiply","invert","useUSDCPrice","GLIDE","StyledPage","lg","PageMeta","pathname","useLocation","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","DEFAULT_META","title","description","image","pageTitle","join","property","content","Page1","children","CandleChart","setLabel","chartRef","chartCreated","setChart","handleResize","parentElement","resize","clientWidth","timeScale","fitContent","scrollToPosition","isClient","window","chart","createChart","layout","backgroundColor","textColor","fontFamily","rightPriceScale","scaleMargins","borderVisible","secondsVisible","tickMarkFormatter","unixTime","watermark","visible","grid","horzLines","vertLines","crosshair","horzLine","labelVisible","mode","vertLine","labelBackgroundColor","series","addCandlestickSeries","upColor","success","downColor","failure","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","subscribeCrosshairMove","param","point","now","utc","getTime","getTimezoneOffset","parsed","seriesPrices","get","open","Inner","input","TabToggle","button","isActive","TabToggleGroup","ChartCard","tokenPriceData","PRICE","view","setView","hoverValue","hoverDate","formattedTvlData","VOLUME","LIQUIDITY","pt","valueToDisplay","getLatestValueDisplay","small","ContentLayout","TokenButton","LockedTokensContainer","PoolPage","routeAddress","params","showWeeklyData","setShowWeeklyData","useTooltip","tooltip","tooltipVisible","targetRef","scrollTo","usePoolChartData","usePoolTransactions","addPoolToWatchlist","mr","token1Price","token0Price","flex","liquidityUSDChange","liquidityToken0","liquidityToken1","onItemClick","volumeUSDChangeWeek","volumeUSDChange","lpFees7d","totalFees","totalFees7d","totalFees24h","CardWrapper","TopMoverCard","ScrollableRow","DataCard","lineHeight","TopTokenMovers","topPriceIncrease","min","increaseRef","moveLeftRef","scrollInterval","setInterval","scrollLeft","scrollWidth","clearInterval","entry","my","TokensOverview","watchListTokens","useCMCLink","cmcPageUrl","setCMCPageUrl","fetchLink","fetch","status","json","then","url","StyledCMCLink","UIKitLink","DEFAULT_TIME_WINDOW","weeks","TokenPage","cmcLink","useTokenData","poolsForToken","usePoolsForToken","useTokenTransactions","useTokenChartData","priceData","useTokenPriceData","ONE_HOUR_SECONDS","adjustedPriceData","close","high","low","watchlistTokens","addWatchlistToken","exists","rel","txCount","RedirectInvalidToken","Info","path","exact","Pools","Tokens","component"],"mappings":"qVAOMA,EAAeC,cAAH,ieAcZC,EAAcD,cAAH,mTA6BXE,GAAS,SAACC,GACd,IAAMC,EAAMD,EACTE,QAAO,SAACC,EAAUC,GAAX,4BAAqCD,GAArC,YAAkDC,MAAoB,IAC7EC,KAAI,SAACC,GAAD,OAAYA,EAAOC,MAC1B,OAAOC,MAAMC,KAAK,IAAIC,IAAIT,KAsFbU,GAnFe,SAC5BC,GAQA,MAA0CC,mBAAS,CACjDC,OAAQ,GACRC,MAAO,GACPC,SAAS,EACTC,OAAO,IAJT,mBAAOC,EAAP,KAAsBC,EAAtB,KAOMC,EAAuBR,EAAaS,OAASC,IAGnDC,qBAAU,WACRJ,EAAiB,CACfL,OAAQ,GACRC,MAAO,GACPC,SAAUI,EACVH,OAAO,MAER,CAACL,EAAcQ,IAElBG,qBAAU,WACR,IAAMC,EAAM,uCAAG,gCAAAC,EAAA,+EAEUC,kBAA6BC,IAAa/B,EAAc,CAC3EgC,OAAQhB,EAAaiB,cAErBC,KAAMlB,EAAamB,OAAO,GAAGF,cAAgBjB,EAAaoB,MAAM,GAChEzB,GAAIK,EAAaqB,gBANR,cAELnB,EAFK,OAQLoB,EAAWnC,GAAO,CAACe,EAAOqB,UAAWrB,EAAOsB,SAAUtB,EAAOuB,SARxD,SASSX,kBAA4BC,IAAa7B,EAAa,CACxEgB,OAAQoB,EACR3B,GAAIK,EAAaqB,gBAXR,OASLlB,EATK,OAaXI,EAAiB,CACfL,OAAQoB,EACRnB,MAAOhB,GAAO,CAACgB,EAAMoB,UAAWpB,EAAMuB,IAAKvB,EAAMwB,MACjDvB,SAAS,EACTC,OAAO,IAjBE,kDAoBXuB,QAAQvB,MAAR,4BAAmCL,GAAnC,MACAO,EAAiB,CACfL,OAAQ,GACRC,MAAO,GACPC,SAAS,EACTC,OAAO,IAzBE,0DAAH,qDA6BPG,GACHI,MAED,CAACZ,EAAcQ,IAKlB,IAAMqB,EAAiBC,YAAcxB,EAAcJ,QAC7C6B,EAAgBC,YAAa1B,EAAcH,OAOjD,MAAO,CACLD,OAAQ2B,EACR1B,MAAO4B,EACPE,cANoBJ,EAAepB,SAAWH,EAAcJ,OAAOO,QAAUH,EAAcF,QAO3F8B,aANmBH,EAActB,SAAWH,EAAcH,MAAMM,QAAUH,EAAcF,QAOxFC,MAAOC,EAAcD,Q,4DCrInB8B,GAAqB,GAgCZC,GAtB+B,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,IAAQC,EAAW,mBACvE,EAAoBtC,mBAAS,GAApBuC,EAAT,oBAEMC,EAAmBN,GAASO,SAASL,GAE3C,OAAIA,IAAQI,EAER,kDACMF,GADN,IAEED,IAAKA,EACLD,IAAKA,EACLM,QAAS,WACHN,GAAKF,GAASS,KAAKP,GACvBG,GAAQ,SAACK,GAAD,OAAOA,EAAI,SAMpB,eAAC,IAAD,gBAAcN,K,sBC1BjBO,GAAaC,YAAOX,GAAPW,CAAH,6KACL,qBAAGC,QACF,qBAAGA,QACI,qBAAGA,QAEA,qBAAGC,MAAkBC,OAAOC,cACvC,qBAAGF,MAAkBC,OAAOE,QAG1BC,GAGR,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAAsC,IAA7BN,YAA6B,MAAtB,OAAsB,EAAXT,EAAW,mBACtCF,EAAMkB,mBAAQ,WAClB,IAAMC,EAAqBC,aAAUH,GACrC,OAAIE,EAEI,GAAN,OAAUE,KAAV,0BAAoCF,EAApC,QAEK,OACN,CAACF,IAEJ,OAAO,eAACR,GAAD,cAAYE,KAAMA,EAAMX,IAAKA,EAAKC,IAAI,cAAiBC,KAG1DoB,GAAwBZ,IAAOa,IAAV,qIAcdC,GAAwD,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,SAA0B,IAAhBf,YAAgB,MAAT,GAAS,EAC1G,OACE,gBAACW,GAAD,WACGG,GAAY,eAAC,GAAD,CAAcR,QAASQ,EAAUd,KAAI,UAAKA,EAAKgB,WAAV,QACjDD,GAAY,eAAC,GAAD,CAAcT,QAASS,EAAUf,KAAI,UAAKA,EAAKgB,WAAV,Y,qBC9B3CC,GAAe,SAC1BC,EACAC,GAOA,MAA8EA,GAAW,CAAEC,SAAU,WAArG,IAAQA,gBAAR,MAAmB,UAAnB,EAA8BC,EAA9B,EAA8BA,iBAAkBC,EAAhD,EAAgDA,eAAgBC,EAAhE,EAAgEA,UAChE,GAAe,IAAXL,EACF,OAAIK,EACK,IAEF,OAET,IAAKL,EAAQ,MAAO,IACpB,GAAIG,GAAoBH,EAASG,EAC/B,MAAM,IAAN,OAAWA,GAEb,GAAIH,EAAS,IAAMI,EACjB,OAAoCJ,EAjCzBM,QAAQ,IAAIC,MAAM,sBAAsB,GAoCrD,IAAIC,EAAY,EACZJ,IACFI,EAAYR,EAAS,EAAI,EAAI,GAG/B,IAAIS,EAAM,YAAQ,IAAIC,OAAOF,GAAnB,KAEO,aAAbN,IACFO,EAAM,cAAU,IAAIC,OAAOF,KAGzBH,GAAaL,EAAS,MACxBS,EAAS,KAGX,IAAME,EAAsBC,WAAWZ,EAAOM,QAAQE,IAGtD,OAAOK,KAAQF,GAAqBF,OAAOA,GAAQ1D,e,8BCxD/C+D,GAAYjC,IAAOa,IAAV,4JAuBAqB,GAbgE,SAAC,GAA+B,IAAD,IAA5BC,YAA4B,SAAX3C,EAAW,mBACpGU,EAAUkC,eAAVlC,MACR,OACE,eAAC+B,GAAD,6BAAezC,GAAf,aACG2C,EACC,eAAC,KAAD,CAAcE,OAAQnC,EAAMC,OAAOmC,QAASC,MAAOrC,EAAMC,OAAOmC,UAEhE,eAAC,KAAD,CAAcD,OAAQnC,EAAMC,OAAOqC,mB,UCPrCC,GAAYzC,IAAOa,IAAV,mFAMT6B,GAAc1C,YAAO2C,IAAP3C,CAAH,wEAEK,qBAAGE,MAAkBC,OAAOyC,kBAG5CC,GAAO7C,IAAOa,IAAV,qpBAYM,qBAAGX,MAAkBC,OAAOC,cAI/B,qBAAG0C,MAAmB,UACb,qBAAG5C,MAAkBC,OAAO4C,aAE9C,qBAAG7C,MAAkB8C,aAAaC,MAKlC,qBAAG/C,MAAkB8C,aAAaE,MAOhCC,GAAWnD,IAAOa,IAAV,8KAWRuC,GAAiBpD,IAAOa,IAAV,yMAMhB,qBAAGX,MAAkB8C,aAAaC,MAKhCI,GAAQrD,IAAOa,IAAV,yGAEW,qBAAGX,MAAkBC,OAAOmD,cAK5CC,GAAYvD,IAAOa,IAAV,2IACJ,qBAAGX,MAAkBC,OAAO4C,aAC1B,qBAAGD,KAAmB,OAAS,WAQtCU,GAAexD,IAAOa,IAAV,sFAOZ4C,GAAezD,IAAOa,IAAV,wUAUI,gBAAGX,EAAH,EAAGA,MAAH,SAAUwD,QAAyBxD,EAAMC,OAAOwD,QAAU,iBACrE,gBAAGzD,EAAH,EAAGA,MAAH,SAAUwD,QAAyBxD,EAAM0D,KAAKxD,WAAaF,EAAMC,OAAO4C,aAW7Ec,GAA0B,SAACC,EAAuBC,GACtD,OACED,EAAMvD,QAAQjC,cAAcqB,SAASoE,EAAMzF,gBAC3CwF,EAAM7F,OAAOK,cAAcqB,SAASoE,EAAMzF,gBAC1CwF,EAAM3F,KAAKG,cAAcqB,SAASoE,EAAMzF,gBAuR7B0F,GA3QA,WACb,IAAMC,EAAUC,cAChB,EAAuBC,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNC,EAAMC,cAAND,EAEFE,EAAWC,iBAAyB,MACpCC,EAAUD,iBAAuB,MACjCE,EAAcF,iBAAuB,MAE3C,EAAgCvH,oBAAS,GAAzC,mBAAO0H,EAAP,KAAiBC,EAAjB,KACA,EAA0B3H,mBAAS,IAAnC,mBAAO6G,EAAP,KAAce,EAAd,KACMC,EAAsBC,aAAYjB,EAAO,KAE/C,EAA8D/G,GAAsB+H,GAA5E5H,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAAO8B,EAAvB,EAAuBA,cAAeC,EAAtC,EAAsCA,aAAc7B,EAApD,EAAoDA,MAEpD,EAAsCJ,mBAAS,GAA/C,mBAAO+H,EAAP,KAAoBC,EAApB,KACA,EAAoChI,mBAAS,GAA7C,mBAAOiI,EAAP,KAAmBC,EAAnB,KAEAxH,qBAAU,WACRsH,EAAe,GACfE,EAAc,KACb,CAACL,IAEJ,IAAMM,EAAqB,SAACC,GAC1B,IAAMC,EAAYb,EAAQc,SAAWd,EAAQc,QAAQC,SAASH,EAAEI,QAC1DC,EAAanB,EAASgB,SAAWhB,EAASgB,QAAQC,SAASH,EAAEI,QAC7DE,EAAgBjB,EAAYa,SAAWb,EAAYa,QAAQC,SAASH,EAAEI,QAEvEH,GAAcI,GAAeC,IAChCR,EAAc,GACdF,EAAe,GACfL,GAAY,KAIhBjH,qBAAU,WASR,OARIgH,GACFiB,SAASC,iBAAiB,QAAST,GACnCQ,SAASE,cAAc,QAAQC,MAAMC,SAAW,WAEhDJ,SAASK,oBAAoB,QAASb,GACtCQ,SAASE,cAAc,QAAQC,MAAMC,SAAW,WAG3C,WACLJ,SAASK,oBAAoB,QAASb,MAEvC,CAACT,IAGJ,MAAqCuB,eAArC,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAmCC,eAAnC,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAkB,SAACC,GACvB7B,GAAY,GACZO,EAAc,GACdF,EAAe,GACfjB,EAAQpE,KAAK6G,IAITC,EAAqB5H,YAAcqH,GACnCQ,EAAwBD,EAAmBjJ,SAAW0I,EAAY1I,OAClEmJ,EAAoB5H,YAAasH,GACjCO,EAAuBD,EAAkBnJ,SAAW6I,EAAW7I,OAGrE,EAA0CR,oBAAS,GAAnD,mBAAO6J,GAAP,KAAsBC,GAAtB,KACMC,GAAgBzG,mBAAQ,WAC5B,OAAIuG,GACKJ,EAAmBO,QAAO,SAACpD,GAAD,OAAWD,GAAwBC,EAAOC,MAEtE5G,EAAOgK,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGE,UAAYD,EAAGC,WAAa,EAAI,OAClE,CAACP,GAAe5J,EAAQwJ,EAAoB5C,IAEzCwD,GAAc/G,mBAAQ,WAC1B,OAAIuG,GACKF,EAAkBK,QAAO,SAACM,GAAD,OArFP,SAACA,EAAgBzD,GAC9C,OACEyD,EAAKjH,QAAQjC,cAAcqB,SAASoE,EAAMzF,gBAC1CuF,GAAwB2D,EAAKC,OAAQ1D,IACrCF,GAAwB2D,EAAKE,OAAQ3D,GAiFO4D,CAAuBH,EAAMzD,MAElE3G,EAAM+J,MAAK,SAACS,EAAIC,GAAL,OAAaD,EAAGN,UAAYO,EAAGP,WAAa,EAAI,OACjE,CAAClK,EAAO2J,GAAeF,EAAmB9C,IAsC7C,OACE,uCACGa,EAAW,eAACzB,GAAD,IAAe,KAC3B,gBAACV,GAAD,WACE,eAACC,GAAD,CACEoF,KAAK,OACL/D,MAAOA,EACPgE,SAAU,SAACzC,GACTR,EAASQ,EAAEI,OAAO3B,QAEpBiE,YAAa1D,EAAE,0BACf2D,IAAKzD,EACL0D,QAAS,WACPrD,GAAY,MAGhB,gBAAChC,GAAD,CAAMC,MAAO8B,EAAUqD,IAAKvD,EAA5B,UACE,gBAAC,IAAD,CAAMyD,GAAG,OAAT,UACE,eAAC1E,GAAD,CAAcC,SAAUqD,GAAeqB,QAAS,kBAAMpB,IAAiB,IAAvE,SACG1C,EAAE,YAEL,eAACb,GAAD,CAAcC,QAASqD,GAAeqB,QAAS,kBAAMpB,IAAiB,IAAtE,SACG1C,EAAE,kBAGNhH,GAAS,eAAC,KAAD,CAAMiF,MAAM,UAAZ,SAAuB+B,EAAE,sCAEnC,gBAAClB,GAAD,WACE,eAAC,KAAD,CAAMiF,MAAI,EAAC9F,MAAM,YAAjB,SACG+B,EAAE,aAEHF,IAASC,GACT,eAAC,KAAD,CAAMiE,UAAU,MAAMC,SAAS,OAA/B,SACGjE,EAAE,YAGLF,IAASC,GACT,eAAC,KAAD,CAAMiE,UAAU,MAAMC,SAAS,OAA/B,SACGjE,EAAE,iBAGLF,IAASC,GACT,eAAC,KAAD,CAAMiE,UAAU,MAAMC,SAAS,OAA/B,SACGjE,EAAE,kBAIR2C,GAAc5I,MAAM,EAAG4G,GAAavI,KAAI,SAACoH,EAAOhE,GAC/C,OAEE,cADA,CACC0D,GAAD,CAAc4E,QAAS,kBAAM3B,EAAgB,eAAD,OAAgB3C,EAAMvD,WAAlE,SACE,gBAAC6C,GAAD,WACE,gBAAC,IAAD,WACE,eAAC,GAAD,CAAc7C,QAASuD,EAAMvD,UAC7B,eAAC,KAAD,CAAMiI,GAAG,OAAT,SACE,eAAC,KAAD,oBAAU1E,EAAM3F,KAAhB,aAAyB2F,EAAM7F,OAA/B,SAEF,eAAC,GAAD,CACErB,GAAG,iBACHoJ,MAAO,CAAEyC,WAAY,OACrBtG,KAAMiE,EAAYzG,SAASmE,EAAMvD,SACjC6H,QAAS,SAAC9C,GACRA,EAAEoD,kBACFrC,EAAcvC,EAAMvD,gBAIxB6D,IAASC,GAAQ,gBAAC,KAAD,CAAMiE,UAAU,MAAhB,cAAwBpH,GAAa4C,EAAM6E,cAC5DvE,IAASC,GAAQ,gBAAC,KAAD,CAAMiE,UAAU,MAAhB,cAAwBpH,GAAa4C,EAAMwD,eAC5DlD,IAASC,GAAQ,gBAAC,KAAD,CAAMiE,UAAU,MAAhB,cAAwBpH,GAAa4C,EAAM8E,qBAnBiB9I,MAtFjE,WAC5B,IAAM+I,EAAY9B,GAAgBH,EAAwB1H,EACpD4J,EACqB,IAAzB7B,GAAcvJ,SAAiBmL,GAAa9D,EAAoBrH,QAAUC,IACtEoL,EAA6C,IAAzB9B,GAAcvJ,SAAiBmL,EACnDG,EAAcjC,GAAgBgC,EAAoBD,EAClDG,EAAkC3E,EAAhByC,GAAkB,gCAAqC,cAC/E,OACE,uCACG8B,GAAa,eAAC,KAAD,IACbG,GAAe,eAAC,KAAD,UAAOC,KACrBlC,IAAiBhC,EAAoBrH,OAASC,KAC9C,eAAC,KAAD,UAAO2G,EAAE,+BAkGR4E,GACD,eAAC3F,GAAD,CACE6E,QAAS,WACPlD,EAAeD,EAAc,IAE/BnC,KAAMmE,GAAcvJ,QAAUuH,EAC9BgD,IAAKtD,EALP,SAOGL,EAAE,iBAGL,eAACjB,GAAD,IACA,gBAACD,GAAD,WACE,eAAC,KAAD,CAAMiF,MAAI,EAAC9F,MAAM,YAAY4F,GAAG,MAAhC,SACG7D,EAAE,YAEHF,IAASC,GACT,eAAC,KAAD,CAAMiE,UAAU,MAAMC,SAAS,OAA/B,SACGjE,EAAE,iBAGLF,IAASC,GACT,eAAC,KAAD,CAAMiE,UAAU,MAAMC,SAAS,OAA/B,SACGjE,EAAE,gBAGLF,IAASC,GACT,eAAC,KAAD,CAAMiE,UAAU,MAAMC,SAAS,OAA/B,SACGjE,EAAE,kBAIRiD,GAAYlJ,MAAM,EAAG8G,GAAYzI,KAAI,SAACyM,EAAGrJ,GACxC,OAEE,cADA,CACC0D,GAAD,CAAc4E,QAAS,kBAAM3B,EAAgB,cAAD,OAAe0C,EAAE5I,WAA7D,SACE,gBAAC6C,GAAD,WACE,gBAAC,IAAD,WACE,eAAC,GAAD,CAAoBrC,SAAUoI,EAAE1B,OAAOlH,QAASS,SAAUmI,EAAEzB,OAAOnH,UACnE,eAAC,KAAD,CAAMiI,GAAG,OAAOxC,MAAO,CAAEoD,WAAY,UAArC,SACE,eAAC,KAAD,oBAAUD,EAAE1B,OAAOxJ,OAAnB,cAA+BkL,EAAEzB,OAAOzJ,YAE1C,eAAC,GAAD,CACErB,GAAG,iBACHoJ,MAAO,CAAEyC,WAAY,QACrBtG,KAAMoE,EAAW5G,SAASwJ,EAAE5I,SAC5B6H,QAAS,SAAC9C,GACRA,EAAEoD,kBACFlC,EAAa2C,EAAE5I,gBAInB6D,IAASC,GAAQ,gBAAC,KAAD,CAAMiE,UAAU,MAAhB,cAAwBpH,GAAaiI,EAAE7B,eACxDlD,IAASC,GAAQ,gBAAC,KAAD,CAAMiE,UAAU,MAAhB,cAAwBpH,GAAaiI,EAAEE,mBACxDjF,IAASC,GAAQ,gBAAC,KAAD,CAAMiE,UAAU,MAAhB,cAAwBpH,GAAaiI,EAAEP,qBAnBgB9I,MA/H7D,WAC3B,IAAM+I,EAAY9B,GAAgBD,EAAuB3H,EACnDmK,EACmB,IAAvB/B,GAAY7J,SAAiByB,GAAgB4F,EAAoBrH,QAAUC,IACvE4L,EAA0C,IAAvBhC,GAAY7J,SAAiBmL,EAChDG,EAAcjC,GAAgBwC,EAAmBD,EACjDE,EAAiClF,EAAhByC,GAAkB,gCAAqC,cAC9E,OACE,uCACG8B,GAAa,eAAC,KAAD,IACbG,GAAe,eAAC,KAAD,UAAOQ,KACrBzC,IAAiBhC,EAAoBrH,OAASC,KAC9C,eAAC,KAAD,UAAO2G,EAAE,+BA2IRmF,GACD,eAAClG,GAAD,CACE6E,QAAS,WACPhD,EAAcD,EAAa,IAE7BrC,KAAMyE,GAAY7J,QAAUyH,EAC5B8C,IAAKtD,EALP,SAOGL,EAAE,2BCzYToF,GAAa1J,YAAO2J,IAAP3J,CAAH,wQACA,qBAAGE,MAAkBC,OAAOyJ,UAAUC,cAOlD,qBAAG3J,MAAkB8C,aAAaC,MAuCvB6G,GAjCC,WACd,IAAQxF,EAAMC,cAAND,EAGJyF,EAAc,EAOlB,OATgBC,YAAc,CAAC,cAAe,aAAc,iBAI1DD,EAAc,GAHCC,YAAc,CAAC,eAAgB,kBAM9CD,EAAc,GAGd,gBAACL,GAAD,WACE,eAAC,IAAD,UACE,gBAAC,IAAD,CAAYK,YAAaA,EAAaE,MAAM,KAAKC,QAAQ,SAAzD,UACE,eAAC,IAAD,CAAgBC,GAAIC,IAAM1D,GAAG,QAA7B,SACGpC,EAAE,cAEL,eAAC,IAAD,CAAgB6F,GAAIC,IAAM1D,GAAG,cAA7B,SACGpC,EAAE,WAEL,eAAC,IAAD,CAAgB6F,GAAIC,IAAM1D,GAAG,eAA7B,SACGpC,EAAE,iBAIT,eAAC,IAAD,CAAK+F,MAAO,CAAC,OAAQ,OAAQ,SAA7B,SACE,eAAC,GAAD,U,8FCWOC,GAxDgC,SAACC,GAC9C,OACE,gBAAC,KAAD,2BAAKF,MAAM,OAAOG,OAAO,OAAOC,oBAAoB,OAAOC,QAAQ,cAAiBH,GAApF,cACE,uBACEI,EAAE,wdACFtI,OAAO,UACPuI,YAAY,MACZC,gBAAgB,MAChBC,iBAAiB,MACjB3I,KAAK,cACL4I,QAAQ,MACR7D,OAAO,aART,SAUE,0BACEtK,GAAG,YACHoO,cAAc,oBACdC,IAAI,KACJnO,KAAK,MACL4J,GAAG,OACHwE,MAAM,4BAGV,uBACEP,EAAE,wdACFtI,OAAO,UACPuI,YAAY,MACZC,gBAAgB,MAChBC,iBAAiB,MACjB3I,KAAK,cACL4I,QAAQ,MACR7D,OAAO,aART,SAUE,0BACEtK,GAAG,aACHoO,cAAc,oBACdC,IAAI,KACJnO,KAAK,MACL4J,GAAG,OACHwE,MAAM,+BAGV,gCACE,0BAAQtO,GAAG,OAAX,UACE,iCAAgBuO,UAAU,OAAOC,OAAO,cAAcC,aAAa,MACnE,qCACE,8BAAaC,GAAG,gBAChB,8BAAaA,GAAG,gBAChB,8BAAaA,GAAG,gBAChB,8BAAaA,GAAG,+BCmIbC,GAnL+B,SAAChB,GAC7C,OACE,gBAAC,KAAD,2BAAKF,MAAM,OAAOG,OAAO,OAAOE,QAAQ,YAAYD,oBAAoB,OAAOM,QAAQ,OAAUR,GAAjG,cACE,wBAAMF,MAAM,KAAKlI,KAAK,UAAtB,UACE,0BACE6I,cAAc,SACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,UAER,0BACEF,cAAc,IACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,aAGV,wBAAMS,EAAE,UAAUtB,MAAM,KAAKlI,KAAK,UAAlC,UACE,0BACE6I,cAAc,SACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,UAER,0BACEF,cAAc,IACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,aAGV,wBAAMS,EAAE,UAAUtB,MAAM,KAAKlI,KAAK,UAAlC,UACE,0BACE6I,cAAc,SACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,UAER,0BACEF,cAAc,IACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,aAGV,wBAAMS,EAAE,UAAUtB,MAAM,KAAKlI,KAAK,UAAlC,UACE,0BACE6I,cAAc,SACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,UAER,0BACEF,cAAc,IACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,aAGV,wBAAMS,EAAE,UAAUtB,MAAM,KAAKlI,KAAK,UAAlC,UACE,0BACE6I,cAAc,SACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,UAER,0BACEF,cAAc,IACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,aAGV,wBAAMS,EAAE,SAAStB,MAAM,KAAKlI,KAAK,UAAjC,UACE,0BACE6I,cAAc,SACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,UAER,0BACEF,cAAc,IACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,aAGV,wBAAMS,EAAE,UAAUtB,MAAM,KAAKlI,KAAK,UAAlC,UACE,0BACE6I,cAAc,SACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,UAER,0BACEF,cAAc,IACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,aAGV,wBAAMS,EAAE,UAAUtB,MAAM,KAAKlI,KAAK,UAAlC,UACE,0BACE6I,cAAc,SACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,UAER,0BACEF,cAAc,IACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,aAGV,wBAAMS,EAAE,UAAUtB,MAAM,KAAKlI,KAAK,UAAlC,UACE,0BACE6I,cAAc,SACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,UAER,0BACEF,cAAc,IACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,aACZR,MAAM,aAGV,wBAAMS,EAAE,UAAUtB,MAAM,KAAKlI,KAAK,UAAlC,UACE,0BACE6I,cAAc,SACdC,IAAI,OACJO,OAAO,gBACPC,SAAS,aACTC,YAAY,eAEd,0BAASV,cAAc,IAAIC,IAAI,OAAOO,OAAO,gBAAgBC,SAAS,aAAaC,YAAY,uBChBxFE,GA7JkC,SAACrB,GAChD,OACE,gBAAC,KAAD,2BAAKF,MAAM,OAAOG,OAAO,OAAOE,QAAQ,aAAaK,QAAQ,OAAUR,GAAvE,cACE,wBAAMF,MAAM,KAAKlI,KAAK,UAAtB,UACE,0BACE6I,cAAc,SACdC,IAAI,KACJO,OAAO,yBACPC,SAAS,0BACTC,YAAY,eAEd,0BACEV,cAAc,IACdC,IAAI,KACJnO,KAAK,MACL4J,GAAG,MACH8E,OAAO,0BACPC,SAAS,0BACTC,YAAY,eAEd,0BACEV,cAAc,KACdC,IAAI,KACJO,OAAO,sBACPC,SAAS,mBACTC,YAAY,eAEd,0BACEV,cAAc,IACdC,IAAI,KACJO,OAAO,8BACPC,SAAS,iBACTC,YAAY,eAEd,0BACEV,cAAc,UACdC,IAAI,KACJO,OAAO,cACPC,SAAS,kBACTC,YAAY,kBAGhB,wBAAMrB,MAAM,KAAKlI,KAAK,UAAtB,UACE,0BACE6I,cAAc,SACdC,IAAI,KACJO,OAAO,6BACPC,SAAS,gCACTC,YAAY,eAEd,0BACEV,cAAc,IACdC,IAAI,KACJO,OAAO,6BACPC,SAAS,gCACTC,YAAY,eAEd,0BACEV,cAAc,KACdC,IAAI,KACJO,OAAO,sBACPC,SAAS,mBACTC,YAAY,eAEd,0BACEV,cAAc,IACdC,IAAI,KACJO,OAAO,8BACPC,SAAS,iBACTC,YAAY,eAEd,0BACEV,cAAc,UACdC,IAAI,KACJO,OAAO,cACPC,SAAS,kBACTC,YAAY,kBAGhB,wBAAMrB,MAAM,KAAKlI,KAAK,UAAtB,UACE,0BACE6I,cAAc,SACdC,IAAI,KACJO,OAAO,6BACPC,SAAS,gCACTC,YAAY,eAEd,0BACEV,cAAc,IACdC,IAAI,KACJO,OAAO,+BACPC,SAAS,gCACTC,YAAY,eAEd,0BACEV,cAAc,KACdC,IAAI,KACJO,OAAO,sBACPC,SAAS,mBACTC,YAAY,eAEd,0BACEV,cAAc,IACdC,IAAI,KACJO,OAAO,8BACPC,SAAS,iBACTC,YAAY,eAEd,0BACEV,cAAc,UACdC,IAAI,KACJO,OAAO,cACPC,SAAS,kBACTC,YAAY,kBAGhB,wBAAMrB,MAAM,KAAKlI,KAAK,UAAtB,UACE,0BACE6I,cAAc,SACdC,IAAI,KACJO,OAAO,6BACPC,SAAS,+BACTC,YAAY,eAEd,0BACEV,cAAc,IACdC,IAAI,KACJO,OAAO,6BACPC,SAAS,+BACTC,YAAY,eAEd,0BACEV,cAAc,KACdC,IAAI,KACJO,OAAO,sBACPC,SAAS,mBACTC,YAAY,eAEd,0BACEV,cAAc,IACdC,IAAI,KACJO,OAAO,8BACPC,SAAS,iBACTC,YAAY,eAEd,0BACEV,cAAc,UACdC,IAAI,KACJO,OAAO,cACPC,SAAS,kBACTC,YAAY,uBCjJhBG,GAAc7L,YAAO8L,IAAP9L,CAAH,6JAUX+L,GAAmB/L,YAAO8L,IAAP9L,CAAH,oEAKTgM,GAA2B,WACtC,IAAQ1H,EAAMC,cAAND,EACR,OACE,gBAACyH,GAAD,WACE,eAAC,GAAD,IACA,eAACF,GAAD,UACE,eAAC,KAAD,CAAMtJ,MAAM,aAAagG,SAAS,OAAlC,SACGjE,EAAE,iCAOA2H,GAA4B,WACvC,IAAQ3H,EAAMC,cAAND,EACR,OACE,gBAACyH,GAAD,WACE,eAAC,GAAD,IACA,eAACF,GAAD,UACE,eAAC,KAAD,CAAMtJ,MAAM,aAAagG,SAAS,OAAlC,SACGjE,EAAE,iCAOA4H,GAA8B,WACzC,IAAQ5H,EAAMC,cAAND,EACR,OACE,gBAACyH,GAAD,WACE,eAAC,GAAD,IACA,eAACF,GAAD,UACE,eAAC,KAAD,CAAMtJ,MAAM,aAAagG,SAAS,OAAlC,SACGjE,EAAE,iCC3CP6H,GAAe,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aAM9C,OALA1O,qBAAU,WACRyO,EAAcD,EAAQrI,OACtBuI,EAAa1K,mBAAOwK,EAAQG,KAAM,kBACjC,CAACH,EAAQrI,MAAOqI,EAAQG,KAAMF,EAAeC,IAEzC,MAiEME,GA3DG,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,KAAMJ,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,aAChCpM,EAAUkC,eAAVlC,MACR,OAAKuM,GAAwB,IAAhBA,EAAK/O,OAIhB,eAACgP,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CACEF,KAAMA,EACNpC,MAAO,IACPG,OAAQ,IACRoC,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,EACNC,OAAQ,GAEVC,aAAc,WACRX,GAAcA,OAAaY,GAC3Bb,GAAeA,OAAca,IAZrC,UAeE,gCACE,kCAAgBtQ,GAAG,WAAWuQ,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAtD,UACE,uBAAMC,OAAO,KAAKC,UAAWtN,EAAMC,OAAOyC,eAAgB6K,YAAa,KACvE,uBAAMF,OAAO,OAAOC,UAAWtN,EAAMC,OAAO4C,UAAW0K,YAAa,SAGxE,eAACC,GAAA,EAAD,CACEC,QAAQ,OACRC,UAAU,EACVC,UAAU,EACVC,cAAe,SAACvB,GAAD,OAAU3K,mBAAO2K,EAAM,OACtCwB,WAAY,KAEd,eAACC,GAAA,EAAD,CACEL,QAAQ,QACRM,UAAW,EACXhE,MAAM,SACN2D,UAAU,EACVC,UAAU,EACVtF,SAAS,OACTuF,cAAe,SAACI,GAAD,iBAAahN,GAAagN,KACzCC,YAAY,QACZC,KAAM,CAAEC,GAAI,GAAIlM,KAAMjC,EAAMC,OAAOmO,cAErC,eAACC,GAAA,EAAD,CACEC,OAAQ,CAAEnM,OAAQnC,EAAMC,OAAO4C,WAC/B0L,aAAc,CAAEC,QAAS,QACzBC,UAAW,SAACC,EAAczQ,EAAMoM,GAArB,OACT,eAAC,GAAD,CAAc6B,QAAS7B,EAAM6B,QAASC,cAAeA,EAAeC,aAAcA,OAGtF,eAACuC,GAAA,EAAD,CAAMlB,QAAQ,QAAQ7F,KAAK,WAAWzF,OAAQnC,EAAMC,OAAO4C,UAAWZ,KAAK,iBAAiByI,YAAa,SAlDtG,eAAC,GAAD,K,aCRIkE,GAfyB,SAAC,GAAwB,IAAtB/K,EAAqB,EAArBA,MAAUvE,EAAW,mBAC9D,IAAKuE,GAASgL,OAAOC,MAAMjL,GACzB,OAAO,eAAC,KAAD,6BAAUvE,GAAV,oBAGT,IAAMyP,EAAalL,EAAQ,EAE3B,OACE,gBAAC,KAAD,6BAAUvE,GAAV,IAAgB+C,MAAO0M,EAAa,UAAY,UAAhD,UACGA,EAAa,SAAM,SACnBC,KAAKC,IAAIpL,GAAOtC,QAAQ,GAF3B,SCZS2N,GAAwBpP,YAAOqP,KAAPrP,CAAH,gDAIrBsP,GAAetP,YAAO2J,IAAP3J,CAAH,sLAKH,qBAAGE,MAAkB0D,KAAKxD,cAC7B,qBAAGF,MAAkBqP,MAAM3L,QACxB,qBAAG1D,MAAkBC,OAAOmD,cAGrCkM,GAAcxP,IAAOa,IAAV,iKASX4O,GAAQzP,IAAOa,IAAV,sGACP,qBAAGX,MAAkBC,OAAOwD,WAO1BN,GAAQrD,IAAOa,IAAV,sFAEI,qBAAGX,MAAkBC,OAAOmD,cCjB5CF,GAAiBpD,IAAOa,IAAV,spBAkCd6O,GAAc1P,YAAOoK,IAAPpK,CAAH,gHAQX2P,GAAiB3P,YAAOM,GAAPN,CAAH,gHAOd4P,GAAwB,WAC5B,IAAMC,EACJ,gBAAC,GAAD,WACE,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,OAGJ,OACE,uCACGA,EACAA,EACAA,MAKDC,GAA6D,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC/E,EAAuB7L,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACd,OACE,eAACqL,GAAD,CAAahJ,GAAE,sBAAiBqJ,EAAUxP,SAA1C,SACE,gBAAC,GAAD,WACE,eAAC,IAAD,UACE,eAAC,KAAD,UAAOyP,EAAQ,MAEjB,gBAAC,IAAD,CAAMC,WAAW,SAAjB,UACE,eAACN,GAAD,CAAgBpP,QAASwP,EAAUxP,WACjC6D,GAAQC,IAAS,eAAC,KAAD,CAAMmE,GAAG,MAAT,SAAgBuH,EAAU9R,UAC3CmG,IAASC,GACT,gBAAC,IAAD,CAAMoE,WAAW,OAAjB,UACE,eAAC,KAAD,UAAOsH,EAAU5R,OACjB,gBAAC,KAAD,CAAMqK,GAAG,MAAT,cAAiBuH,EAAU9R,OAA3B,aAIN,gBAAC,KAAD,CAAMiS,WAAY,IAAlB,cAAyBhP,GAAa6O,EAAUpH,SAAU,CAAEtH,SAAU,gBACtE,eAAC,KAAD,CAAM6O,WAAY,IAAlB,SACE,eAAC,GAAD,CAASnM,MAAOgM,EAAUI,eAAgBD,WAAY,QAExD,gBAAC,KAAD,CAAMA,WAAY,IAAlB,cAAyBhP,GAAa6O,EAAUzI,cAChD,gBAAC,KAAD,CAAM4I,WAAY,IAAlB,cAAyBhP,GAAa6O,EAAUnH,uBAMlDwH,GACE,OADFA,GAEO,YAFPA,GAGI,SAHJA,GAIM,WAJNA,GAKY,iBA6JHC,GApJV,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAuC,IAA3BC,gBAA2B,MAL7B,GAK6B,EAC7C,EAAkCrT,mBAASkT,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAA0CvT,oBAAkB,GAA5D,mBAAOwT,EAAP,KAAsBC,EAAtB,KAEQrM,EAAMC,cAAND,EAER,EAAwBpH,mBAAS,GAAjC,mBAAO0T,EAAP,KAAaC,EAAb,KACA,EAA8B3T,mBAAS,GAAvC,mBAAO4T,EAAP,KAAgBC,EAAhB,KACAnT,qBAAU,WACR,IAAIoT,EAAa,EACbV,IACEA,EAAW5S,OAAS6S,IAAa,IACnCS,EAAa,GAEfD,EAAW7B,KAAK+B,MAAMX,EAAW5S,OAAS6S,GAAYS,MAEvD,CAACT,EAAUD,IAEd,IAAMY,EAAe1Q,mBAAQ,WAC3B,OAAO8P,EACHA,EACGnJ,MAAK,SAACrJ,EAAGqT,GACR,OAAIrT,GAAKqT,EACArT,EAAE0S,GAAgCW,EAAEX,GACZ,GAA1BE,GAAiB,EAAI,IACM,GAA3BA,GAAiB,EAAI,IAEpB,KAETrS,MAAMkS,GAAYK,EAAO,GAAIA,EAAOL,GACvC,KACH,CAACD,EAAYC,EAAUK,EAAMF,EAAeF,IAEzCY,EAAaC,uBACjB,SAACC,GACCb,EAAaa,GACbX,EAAiBH,IAAcc,IAAmBZ,KAEpD,CAACA,EAAeF,IAGZe,EAAQF,uBACZ,SAACG,GAEC,OAAOhB,IAAcgB,EADGd,EAAsB,SAAN,SACM,KAEhD,CAACA,EAAeF,IAGlB,OAAKF,EAKH,gBAAChB,GAAD,WACE,gBAAC,GAAD,WACE,eAAC,KAAD,CAAM/M,MAAM,YAAYgG,SAAS,OAAOF,MAAI,EAA5C,eAGA,gBAAC+G,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,QAPL,IAOeiN,EAAMnB,OAErB,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,SAPL,IAOgBiN,EAAMnB,OAEtB,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,gBAPL,IAOuBiN,EAAMnB,OAE7B,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,cAPL,IAOqBiN,EAAMnB,OAE3B,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,aAPL,IAOoBiN,EAAMnB,UAI5B,eAAC,GAAD,IACCc,EAAaxT,OAAS,EACrB,uCACGwT,EAAaxU,KAAI,SAAC+P,EAAM3M,GACvB,OAAI2M,EAEA,gBAAC,IAAMiF,SAAP,WACE,eAAC,GAAD,CAAS1B,MAtHT,IAsHiBY,EAAO,GAAiB9Q,EAAGiQ,UAAWtD,IACvD,eAAC,GAAD,MAFmBA,EAAKlM,SAMvB,QAET,gBAACiP,GAAD,WACE,eAACC,GAAD,CACErH,QAAS,WACPyI,EAAiB,IAATD,EAAaA,EAAOA,EAAO,IAFvC,SAKE,eAAC,IAAD,CAAerO,MAAgB,IAATqO,EAAa,eAAiB,cAEtD,eAAC,KAAD,UAAOtM,EAAE,2BAA4B,CAAEsM,OAAME,cAC7C,eAACrB,GAAD,CACErH,QAAS,WACPyI,EAAQD,IAASE,EAAUF,EAAOA,EAAO,IAF7C,SAKE,eAAC,IAAD,CAAkBrO,MAAOqO,IAASE,EAAU,eAAiB,oBAKnE,uCACE,eAAC,GAAD,IACA,eAAC,IAAD,UA3FC,eAAC,KAAD,KCnKL1N,GAAiBpD,IAAOa,IAAV,qsBA+Bd6O,GAAc1P,YAAOoK,IAAPpK,CAAH,gHAQXoQ,GACO,YADPA,GAEI,SAFJA,GAGW,gBAHXA,GAIO,YAJPA,GAKK,UAGLuB,GAAuB,kBAC3B,gBAAC,GAAD,WACE,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,QAIE/B,GAAwB,kBAC5B,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,QAIEE,GAAU,SAAC,GAAgE,IAA9D8B,EAA6D,EAA7DA,SAAU5B,EAAmD,EAAnDA,MAC3B,OACE,eAAC,GAAD,CAAatJ,GAAE,qBAAgBkL,EAASrR,SAAxC,SACE,gBAAC,GAAD,WACE,eAAC,KAAD,UAAOyP,EAAQ,IACf,gBAAC,IAAD,WACE,eAAC,GAAD,CAAoBjP,SAAU6Q,EAASnK,OAAOlH,QAASS,SAAU4Q,EAASlK,OAAOnH,UACjF,gBAAC,KAAD,CAAMiI,GAAG,MAAT,UACGoJ,EAASnK,OAAOxJ,OADnB,IAC4B2T,EAASlK,OAAOzJ,aAG9C,gBAAC,KAAD,eAAQiD,GAAa0Q,EAAStK,cAC9B,gBAAC,KAAD,eAAQpG,GAAa0Q,EAASvI,kBAC9B,gBAAC,KAAD,eAAQnI,GAAa0Q,EAASC,cAC9B,gBAAC,KAAD,WAAO3Q,GAAa0Q,EAASE,SAA7B,OACA,gBAAC,KAAD,eAAQ5Q,GAAa0Q,EAAShJ,uBAgKvBmJ,GArJ6B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAW3U,EAAc,EAAdA,QAExD,EAAkCH,mBAASkT,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAA0CvT,oBAAkB,GAA5D,mBAAOwT,EAAP,KAAsBC,EAAtB,KACQrM,EAAMC,cAAND,EAGR,EAAwBpH,mBAAS,GAAjC,mBAAO0T,EAAP,KAAaC,EAAb,KACA,EAA8B3T,mBAAS,GAAvC,mBAAO4T,EAAP,KAAgBC,EAAhB,KACAnT,qBAAU,WACR,IAAIoT,EAAa,EACbgB,EAAUtU,OAASuU,MAA8B,IACnDjB,EAAa,GAEfD,EAAW7B,KAAK+B,MAAMe,EAAUtU,OAASuU,KAA6BjB,KACrE,CAACgB,IAEJ,IAAME,EAAc1R,mBAAQ,WAC1B,OAAOwR,EACHA,EACG7K,MAAK,SAACrJ,EAAGqT,GACR,OAAIrT,GAAKqT,EACArT,EAAE0S,GAA+BW,EAAEX,GACX,GAA1BE,GAAiB,EAAI,IACM,GAA3BA,GAAiB,EAAI,IAEpB,KAETrS,MAAM4T,KAA6BrB,EAAO,GAAIA,EAAOqB,KACxD,KACH,CAACrB,EAAMoB,EAAWtB,EAAeF,IAE9BY,EAAaC,uBACjB,SAACC,GACCb,EAAaa,GACbX,EAAiBH,IAAcc,IAAmBZ,KAEpD,CAACA,EAAeF,IAGZe,EAAQF,uBACZ,SAACG,GAEC,OAAOhB,IAAcgB,EADGd,EAAsB,SAAN,SACM,KAEhD,CAACA,EAAeF,IAGlB,OACE,gBAAClB,GAAD,WACE,gBAAC,GAAD,WACE,eAAC,KAAD,CAAM/M,MAAM,YAAYgG,SAAS,OAAOF,MAAI,EAA5C,eAGA,eAAC,KAAD,CAAM9F,MAAM,YAAYgG,SAAS,OAAOF,MAAI,EAACoJ,cAAc,YAA3D,SACGnN,EAAE,UAEL,gBAAC8K,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,cAPL,IAOqBiN,EAAMnB,OAE3B,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,aAPL,IAOoBiN,EAAMnB,OAE1B,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,sBAPL,IAO6BiN,EAAMnB,OAEnC,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,iBAPL,IAOwBiN,EAAMnB,OAE9B,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,aAPL,IAOoBiN,EAAMnB,UAG5B,eAAC,GAAD,IACC8B,EAAYxU,OAAS,EACpB,uCACGwU,EAAYxV,KAAI,SAACkV,EAAU9R,GAC1B,OAAI8R,EAEA,gBAAC,IAAMF,SAAP,WACE,eAAC,GAAD,CAAS1B,OAAQY,EAAO,GAAKqB,IAA4BnS,EAAG8R,SAAUA,IACtE,eAAC,GAAD,MAFmBA,EAASrR,SAM3B,QAERlD,GAAW,eAAC,GAAD,IACZ,gBAACmS,GAAD,WACE,eAACC,GAAD,CACErH,QAAS,WACPyI,EAAiB,IAATD,EAAaA,EAAOA,EAAO,IAFvC,SAKE,eAAC,IAAD,CAAerO,MAAgB,IAATqO,EAAa,eAAiB,cAGtD,eAAC,KAAD,UAAOtM,EAAE,2BAA4B,CAAEsM,OAAME,cAE7C,eAACrB,GAAD,CACErH,QAAS,WACPyI,EAAQD,IAASE,EAAUF,EAAOA,EAAO,IAF7C,SAKE,eAAC,IAAD,CAAkBrO,MAAOqO,IAASE,EAAU,eAAiB,oBAKnE,uCACE,eAAC,GAAD,IAEA,eAAC,IAAD,W,sBC9OJqB,GAAY,SAAC,GAYZ,IAXLxG,EAWI,EAXJA,EACAyG,EAUI,EAVJA,EACA/H,EASI,EATJA,MACAG,EAQI,EARJA,OACArI,EAOI,EAPJA,KAQA,OACE,6BACE,uBAAMwJ,EAAGA,EAAGyG,EAAGA,EAAGjQ,KAAMA,EAAMkI,MAAOA,EAAOG,OAAQA,EAAQ6H,GAAG,SAO/DlG,GAAe,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aAM9C,OALA1O,qBAAU,WACRyO,EAAcD,EAAQrI,OACtBuI,EAAa1K,mBAAOwK,EAAQG,KAAM,kBACjC,CAACH,EAAQrI,MAAOqI,EAAQG,KAAMF,EAAeC,IAEzC,MA6DMgG,GA1DD,SAAC,GAA2D,IAAzD7F,EAAwD,EAAxDA,KAAMJ,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,aAC5BpM,EAAUkC,eAAVlC,MACR,OAAKuM,GAAwB,IAAhBA,EAAK/O,OAIhB,eAACgP,GAAA,EAAD,CAAqBrC,MAAM,OAAOG,OAAO,OAAzC,SACE,gBAAC+H,GAAA,EAAD,CACE9F,KAAMA,EACNG,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,EACNC,OAAQ,GAEVC,aAAc,WACZX,OAAaY,GACbb,OAAca,IAVlB,UAaE,eAACQ,GAAA,EAAD,CACEC,QAAQ,OACRC,UAAU,EACVC,UAAU,EACVC,cAAe,SAACvB,GAAD,OAAU3K,mBAAO2K,EAAM,OACtCwB,WAAY,KAEd,eAACC,GAAA,EAAD,CACEL,QAAQ,QACRM,UAAW,EACXhE,MAAM,SACN2D,UAAU,EACVC,UAAU,EACVtL,MAAOrC,EAAMC,OAAOmO,WACpB/F,SAAS,OACTuF,cAAe,SAACI,GAAD,iBAAahN,GAAagN,KACzCC,YAAY,QACZC,KAAM,CAAEC,GAAI,GAAIlM,KAAMjC,EAAMC,OAAOmO,cAErC,eAACC,GAAA,EAAD,CACEC,OAAQ,CAAErM,KAAMjC,EAAMC,OAAOqS,oBAC7B/D,aAAc,CAAEC,QAAS,QACzBC,UAAW,SAACC,EAAczQ,EAAMoM,GAArB,OACT,eAAC,GAAD,CAAc6B,QAAS7B,EAAM6B,QAASC,cAAeA,EAAeC,aAAcA,OAGtF,eAACmG,GAAA,EAAD,CACE9E,QAAQ,QACRxL,KAAMjC,EAAMC,OAAOwD,QACnB+O,MAAO,SAACnI,GAAD,OACL,eAAC,GAAD,CAAWC,OAAQD,EAAMC,OAAQH,MAAOE,EAAMF,MAAOsB,EAAGpB,EAAMoB,EAAGyG,EAAG7H,EAAM6H,EAAGjQ,KAAMjC,EAAMC,OAAOwD,kBA/CjG,eAAC,GAAD,K,WC1CIgP,GAJM,SAACpS,GAAqD,IAApCqS,EAAmC,uDAArB,EAAGC,EAAkB,uDAAN,EAClE,MAAM,GAAN,OAAUtS,EAAQuS,UAAU,EAAGF,GAA/B,cAAiDrS,EAAQuS,UAAUvS,EAAQ7C,OAASmV,K,UCUhFE,GAAU/S,IAAOa,IAAV,4CAIPuC,GAAiBpD,IAAOa,IAAV,02BAyCdmS,GAAahT,YAAO2J,IAAP3J,CAAH,mHAOVoQ,GACO,YADPA,GAEO,YAFPA,GAGI,SAHJA,GAIU,eAJVA,GAKU,eAGVR,GAAwB,WAC5B,IAAMC,EACJ,gBAAC,GAAD,WACE,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,OAGJ,OACE,uCACGA,EACAA,EACAA,MAKDC,GAAkD,SAAC,GAAqB,IAAnBmD,EAAkB,EAAlBA,YACjD3O,EAAMC,cAAND,EACF4O,EAAOhE,KAAKC,IAAI8D,EAAYE,cAC5BC,EAAOlE,KAAKC,IAAI8D,EAAYI,cAC5BC,EAAoBL,EAAYE,aAAe,EAAIF,EAAYM,aAAeN,EAAYO,aAC1FC,EAAmBR,EAAYI,aAAe,EAAIJ,EAAYM,aAAeN,EAAYO,aAE/F,OACE,gBAAC,GAAD,WACE,eAAC,IAAD,CAAcE,KAAMC,aAAeV,EAAYW,KAAM,eAArD,SACE,eAAC,KAAD,UACGX,EAAYnL,OAAS+L,KAAgBC,KAClCxP,EAAE,4BAA6B,CAAEmD,OAAQwL,EAAYM,aAAc7L,OAAQuL,EAAYO,eACvFP,EAAYnL,OAAS+L,KAAgBE,KACrCzP,EAAE,6BAA8B,CAAEmD,OAAQgM,EAAkB/L,OAAQ4L,IACpEhP,EAAE,+BAAgC,CAAEmD,OAAQwL,EAAYM,aAAc7L,OAAQuL,EAAYO,mBAGlG,gBAAC,KAAD,eAAQtS,GAAa+R,EAAYe,cACjC,eAAC,KAAD,UACE,eAAC,KAAD,oBAAU9S,GAAagS,GAAvB,YAAgCD,EAAYM,kBAE9C,eAAC,KAAD,UACE,eAAC,KAAD,oBAAUrS,GAAakS,GAAvB,YAAgCH,EAAYO,kBAE9C,eAAC,IAAD,CAAcE,KAAMC,aAAeV,EAAYgB,OAAQ,WAAvD,SACGtB,GAAaM,EAAYgB,UAE5B,eAAC,KAAD,UAAOC,aAAgE,IAAtCC,SAASlB,EAAYmB,UAAW,WA+MxDC,GAxMV,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACN,EAAkCpX,mBAASkT,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAA0CvT,oBAAkB,GAA5D,mBAAOwT,EAAP,KAAsBC,EAAtB,KAEQrM,EAAMC,cAAND,EAER,EAAwBpH,mBAAS,GAAjC,mBAAO0T,EAAP,KAAaC,EAAb,KACA,EAA8B3T,mBAAS,GAAvC,mBAAO4T,EAAP,KAAgBC,EAAhB,KAEA,EAAgC7T,wBAAsCgQ,GAAtE,mBAAOqH,EAAP,KAAiBC,EAAjB,KAEMC,EAAqBjU,mBAAQ,WACjC,OAAO8T,EACHA,EACGjW,QACA8I,MAAK,SAACrJ,EAAGqT,GACR,OAAIrT,GAAKqT,EACArT,EAAE0S,GAAkCW,EAAEX,GACd,GAA1BE,GAAiB,EAAI,IACM,GAA3BA,GAAiB,EAAI,IAEpB,KAETxJ,QAAO,SAACyE,GACP,YAAoBuB,IAAbqH,GAA0B5I,EAAE7D,OAASyM,KAE7ClW,MAAM4T,KAA6BrB,EAAO,GAAIA,EAAOqB,KACxD,KACH,CAACqC,EAAc1D,EAAMJ,EAAWE,EAAe6D,IAGlD3W,qBAAU,WACR,GAAI0W,EAAc,CAChB,IAAMI,EAAuBJ,EAAapN,QAAO,SAACyN,GAChD,YAAoBzH,IAAbqH,GAA0BI,EAAG7M,OAASyM,KAE3CG,EAAqBhX,OAASuU,MAA8B,EAC9DlB,EAAW7B,KAAK+B,MAAMyD,EAAqBhX,OAASuU,MAEpDlB,EAAW7B,KAAK+B,MAAMyD,EAAqBhX,OAASuU,KAA6B,MAGpF,CAACqC,EAAcC,IAElB,IAAMK,EAAevD,uBACnB,SAACwD,GACKA,IAAcN,IAChBC,EAAYK,GACZhE,EAAQ,MAGZ,CAAC0D,IAGGnD,EAAaC,uBACjB,SAACC,GACCb,EAAaa,GACbX,EAAiBH,IAAcc,IAAmBZ,KAEpD,CAACA,EAAeF,IAGZe,EAAQF,uBACZ,SAACG,GAEC,OAAOhB,IAAcgB,EADGd,EAAsB,SAAN,SACM,KAEhD,CAACA,EAAeF,IAGlB,OACE,gBAACuC,GAAD,WACE,gBAAC,IAAD,CAAM5K,GAAG,OAAT,UACE,gBAAC,IAAD,CAAM2M,cAAe,CAAC,SAAU,OAAhC,UACE,gBAAC9B,GAAD,CAAY5K,QAAS,kBAAMwM,OAAa1H,IAAxC,UACE,eAAC,KAAD,CAAOnF,SAAU,kBAAM,MAAMkC,MAAM,KAAK8K,aAAsB7H,IAAbqH,IACjD,eAAC,KAAD,CAAM/L,GAAG,MAAT,SAAgBlE,EAAE,YAGpB,gBAAC0O,GAAD,CAAY5K,QAAS,kBAAMwM,EAAaf,KAAgBE,OAAxD,UACE,eAAC,KAAD,CAAOhM,SAAU,kBAAM,MAAMkC,MAAM,KAAK8K,QAASR,IAAaV,KAAgBE,OAC9E,eAAC,KAAD,CAAMvL,GAAG,MAAT,SAAgBlE,EAAE,iBAItB,gBAAC,IAAD,CAAMwQ,cAAe,CAAC,SAAU,OAAhC,UACE,gBAAC9B,GAAD,CAAY5K,QAAS,kBAAMwM,EAAaf,KAAgBC,OAAxD,UACE,eAAC,KAAD,CAAO/L,SAAU,kBAAM,MAAMkC,MAAM,KAAK8K,QAASR,IAAaV,KAAgBC,OAC9E,eAAC,KAAD,CAAMtL,GAAG,MAAT,SAAgBlE,EAAE,aAGpB,gBAAC0O,GAAD,CAAY5K,QAAS,kBAAMwM,EAAaf,KAAgBmB,OAAxD,UACE,eAAC,KAAD,CAAOjN,SAAU,kBAAM,MAAMkC,MAAM,KAAK8K,QAASR,IAAaV,KAAgBmB,OAC9E,eAAC,KAAD,CAAMxM,GAAG,MAAT,SAAgBlE,EAAE,sBAIxB,gBAACgL,GAAD,WACE,gBAAC,GAAD,WACE,eAAC,KAAD,CAAM/M,MAAM,YAAYgG,SAAS,OAAOF,MAAI,EAACoJ,cAAc,YAA3D,SACGnN,EAAE,YAEL,gBAAC8K,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,eAPL,IAOsBiN,EAAMnB,OAE5B,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,gBAPL,IAOuBiN,EAAMnB,OAE7B,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,gBAPL,IAOuBiN,EAAMnB,OAE7B,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,WAPL,IAOkBiN,EAAMnB,OAExB,gBAAChB,GAAD,CACE7M,MAAM,YACNgG,SAAS,OACTF,MAAI,EACJD,QAAS,kBAAMgJ,EAAWhB,KAC1BqB,cAAc,YALhB,UAOGnN,EAAE,QAPL,IAOeiN,EAAMnB,UAGvB,eAAC,GAAD,IAECkE,EACC,uCACGG,EAAmB/X,KAAI,SAACuW,EAAajD,GACpC,OAAIiD,EAGA,eADA,CACC,IAAMvB,SAAP,WACE,eAAC,GAAD,CAASuB,YAAaA,IACtB,eAAC,GAAD,MAFmBjD,GAMlB,QAEsB,IAA9ByE,EAAmB/W,OAClB,eAAC,IAAD,CAAMuX,eAAe,SAArB,SACE,eAAC,KAAD,UAAO3Q,EAAE,4BAET4I,EACJ,gBAACsC,GAAD,WACE,eAACC,GAAD,CACErH,QAAS,WACPyI,EAAiB,IAATD,EAAaA,EAAOA,EAAO,IAFvC,SAKE,eAAC,IAAD,CAAerO,MAAgB,IAATqO,EAAa,eAAiB,cAGtD,eAAC,KAAD,UAAOtM,EAAE,2BAA4B,CAAEsM,OAAME,cAC7C,eAACrB,GAAD,CACErH,QAAS,WACPyI,EAAQD,IAASE,EAAUF,EAAOA,EAAO,IAF7C,SAKE,eAAC,IAAD,CAAkBrO,MAAOqO,IAASE,EAAU,eAAiB,oBAKnE,uCACE,eAAC,GAAD,IAEA,eAAC,IAAD,cC7SCoE,GAAsBlV,YAAO2J,IAAP3J,CAAH,sNAW5B,qBAAGE,MAAkB8C,aAAaE,MAwIvBiS,GAnIY,WACzB,IAAQ7Q,EAAMC,cAAND,EACR,EAA4CpH,qBAA5C,mBAAOkY,EAAP,KAAuBC,EAAvB,KACA,EAAoDnY,qBAApD,mBAAOoY,EAAP,KAA2BC,EAA3B,KACA,EAAsCrY,qBAAtC,mBAAOsY,EAAP,KAAoBC,EAApB,KACA,EAA8CvY,qBAA9C,mBAAOwY,EAAP,KAAwBC,EAAxB,KAEA,EAAuBC,cAAhBC,EAAP,oBACA,EAAoBC,cAAbC,EAAP,oBACA,EAAuBC,cAAhB1B,EAAP,oBAEM2B,EAAcrU,mBAAO,IAAIsU,KAAQ,eAGvCtY,qBAAU,WACW,MAAf4X,GAAuBK,GACzBJ,EAAeI,EAAavO,aAE7B,CAACuO,EAAcL,IAClB5X,qBAAU,WACc,MAAlBwX,GAA0BS,GAC5BR,EAAkBQ,EAAajN,gBAEhC,CAACwM,EAAgBS,IAEpB,IAAMM,EAAyB3V,mBAAQ,WACrC,OAAIuV,EACKA,EAAUrZ,KAAI,SAAC0Z,GACpB,MAAO,CACL7J,KAAM8J,aAAaD,EAAIE,MACvBvS,MAAOqS,EAAIxN,iBAIV,KACN,CAACmN,IAEEQ,EAAsB/V,mBAAQ,WAClC,OAAIuV,EACKA,EAAUrZ,KAAI,SAAC0Z,GACpB,MAAO,CACL7J,KAAM8J,aAAaD,EAAIE,MACvBvS,MAAOqS,EAAI9O,cAIV,KACN,CAACyO,IAEES,EAAYC,cAEZC,EAAkBlW,mBAAQ,WAC9B,OAAOmW,OAAOnL,OAAOgL,GAClB9Z,KAAI,SAACoH,GAAD,OAAWA,EAAM2I,QACrBvF,QAAO,SAACpD,GAAD,OAAWA,OACpB,CAAC0S,IAEEI,EAAcC,cACd7E,EAAYxR,mBAAQ,WACxB,OAAOmW,OAAOnL,OAAOoL,GAClBla,KAAI,SAAC8K,GAAD,OAAUA,EAAKiF,QACnBvF,QAAO,SAACM,GAAD,OAAUA,OACnB,CAACoP,IAEEE,EAAsBtW,mBAAQ,WAClC,OAAOmW,OAAOnL,OAAOoL,GAAaG,MAAK,SAACvP,GAAD,OAAWA,EAAKiF,UACtD,CAACmK,IAEJ,OACE,gBAACI,GAAA,EAAD,WACE,eAAC,IAAD,CAAS/M,MAAM,KAAK9B,GAAG,OAAOvL,GAAG,sBAAjC,SACG0H,EAAE,4BAEL,gBAAC4Q,GAAD,WACE,eAAC,IAAD,UACE,gBAAC,IAAD,CAAK/L,EAAG,CAAC,OAAQ,OAAQ,QAAzB,UACE,eAAC,KAAD,CAAMd,MAAI,EAAC9F,MAAM,YAAjB,SACG+B,EAAE,eAEJ8Q,EAAiB,EAChB,gBAAC,KAAD,CAAM/M,MAAI,EAACE,SAAS,OAApB,cACIrH,GAAakU,MAGjB,eAAC,KAAD,CAAU/K,MAAM,QAAQG,OAAO,SAEjC,eAAC,KAAD,iBAAO8K,QAAP,IAAOA,IAAsBW,IAC7B,eAAC,IAAD,CAAKzL,OAAO,QAAZ,SACE,eAAC,GAAD,CACEiC,KAAM0J,EACN9J,cAAegJ,EACf/I,aAAciJ,WAKtB,eAAC,IAAD,UACE,gBAAC,IAAD,CAAKpM,EAAG,CAAC,OAAQ,OAAQ,QAAzB,UACE,eAAC,KAAD,CAAMd,MAAI,EAAC9F,MAAM,YAAjB,SACG+B,EAAE,gBAEJkR,EAAc,EACb,gBAAC,KAAD,CAAMnN,MAAI,EAACE,SAAS,OAApB,cACIrH,GAAasU,MAGjB,eAAC,KAAD,CAAUnL,MAAM,QAAQG,OAAO,SAEjC,eAAC,KAAD,iBAAOkL,QAAP,IAAOA,IAAmBO,IAC1B,eAAC,IAAD,CAAKzL,OAAO,QAAZ,SACE,eAAC,GAAD,CAAUiC,KAAM8J,EAAqBlK,cAAeoJ,EAAgBnJ,aAAcqJ,cAK1F,eAAC,IAAD,CAAS1L,MAAM,KAAKgN,GAAG,OAAO9O,GAAG,OAAjC,SACG7D,EAAE,gBAEL,eAAC,GAAD,CAAYgM,WAAYoG,IACxB,eAAC,IAAD,CAASzM,MAAM,KAAKgN,GAAG,OAAO9O,GAAG,OAAjC,SACG7D,EAAE,eAEL,eAAC,GAAD,CAAW0N,UAAWA,EAAW3U,QAASyZ,IAC1C,eAAC,IAAD,CAAS7M,MAAM,KAAKgN,GAAG,OAAO9O,GAAG,OAAjC,SACG7D,EAAE,kBAEL,eAAC,GAAD,CAAkBgQ,aAAcA,QCtHvB4C,GApCiB,WAC9B,IAAQ5S,EAAMC,cAAND,EAGFsS,EAAcC,cACd7E,EAAYxR,mBAAQ,WACxB,OAAOmW,OAAOnL,OAAOoL,GAClBla,KAAI,SAAC8K,GAAD,OAAUA,EAAKiF,QACnBvF,QAAO,SAACM,GAAD,OAAUA,OACnB,CAACoP,IAEJ,EAAqBtQ,eAAdC,EAAP,oBACM4Q,EAAiBlY,YAAasH,GAEpC,OACE,gBAACyQ,GAAA,EAAD,WACE,eAAC,IAAD,CAAS/M,MAAM,KAAK9B,GAAG,OAAvB,SACG7D,EAAE,oBAEL,eAAC,IAAD,UACG6S,EAAezZ,OAAS,EACvB,eAAC,GAAD,CAAWsU,UAAWmF,IAEtB,eAAC,KAAD,CAAMC,GAAG,OAAOC,GAAG,OAAnB,SACG/S,EAAE,oCAIT,eAAC,IAAD,CAAS2F,MAAM,KAAKgN,GAAG,OAAO9O,GAAG,OAAOvL,GAAG,mBAA3C,SACG0H,EAAE,eAEL,eAAC,GAAD,CAAW0N,UAAWA,Q,iEChCtBsF,GAAeC,KAAKC,KAAQC,SAiE3B,I,YC7DFC,GD6DQC,GAAmB,WAC9B,IACMC,EADcC,eAAZC,SAC2BN,KAAQC,QACrCM,EA9DO,SAAsBC,GACnC,IAAQF,EAAYD,eAAZC,QACFG,EAAUC,aAAgBF,EAAUF,GACpCK,EAA6D3X,mBACjE,iBAAM,CACJ,CACEsX,GAAWG,GAAWG,aAAeC,KAAKP,GAAUG,QAAW/K,EAAY8K,EAC3EF,EAAUO,KAAKP,QAAW5K,GAE5B,CAAQ,OAAP+K,QAAO,IAAPA,KAASK,OAAOhB,SAAgBpK,EAAY+K,EAASH,IAAYN,KAAQC,QAAUH,QAAepK,GACnG,CAAC4K,EAAUO,KAAKP,QAAW5K,EAAW4K,IAAYN,KAAQC,QAAUH,QAAepK,MAErF,CAAC4K,EAASE,EAAUC,IAEtB,EAA8FM,aAASJ,GAAvG,yCAAQK,EAAR,KAAsBC,EAAtB,2BAAiCC,EAAjC,KAAgDC,EAAhD,2BAA4DC,EAA5D,KAA8EC,EAA9E,KAEA,OAAOrY,mBAAQ,WACb,GAAKwX,GAAaC,GAAYH,EAI9B,GAAIG,EAAQK,OAAOD,KAAKP,KACtB,GAAIa,EAAU,CACZ,IAAMG,EAAQH,EAASI,QAAQV,KAAKP,IACpC,OAAO,IAAIkB,KAAMhB,EAAUV,GAAcwB,EAAMG,YAAaH,EAAMI,gBAHtE,CAQA,GAAIjB,EAAQK,OAAOhB,IACjB,OAAO,IAAI0B,KAAM1B,GAAcA,GAAc,IAAK,KAGpD,IAAM6B,EAAgB,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAASW,UAAUf,KAAKP,IAC3CuB,EACJF,GAAoBN,EAAcA,EAAYE,QAAQV,KAAKP,IAAUwB,MAAMH,GAAkBI,IAAMC,KAAKC,OAAO,GAIjH,GACEf,IAAkBgB,KAAUC,QAC5BhB,GACAA,EAASS,UAAU9B,IAAcsC,YAAYP,GAC7C,CACA,IAAMP,EAAQH,EAASI,QAAQd,GAC/B,OAAO,IAAIe,KAAMhB,EAAUV,GAAcwB,EAAMG,YAAaH,EAAMI,WAEpE,GAAIV,IAAiBkB,KAAUC,QAAUlB,GAAWG,IAAqBc,KAAUC,QAAUd,GACvFA,EAAYO,UAAU9B,IAAcsC,YAAY,MAAQnB,EAAQW,UAAUf,KAAKP,IAAU8B,YAAY,KAAM,CAC7G,IAAMC,EAAehB,EAAYE,QAAQzB,IACnCwC,EAAmBrB,EAAQM,QAAQV,KAAKP,IACxCiC,EAAYF,EAAaG,SAASF,GAAkBG,SAC1D,OAAO,IAAIjB,KAAMhB,EAAUV,GAAcyC,EAAUd,YAAac,EAAUb,eAI7E,CAACpB,EAASE,EAAUS,EAASD,EAAcK,EAAaD,EAAkBD,EAAUD,EAAeT,IAM/EiC,CAAaC,KAAMvC,IAC1C,OAAOG,G,mCEnEHqC,GAAapa,YAAOyC,KAAPzC,CAAH,sPAKZ,qBAAGE,MAAkB8C,aAAaC,MAKlC,qBAAG/C,MAAkB8C,aAAaqX,MAMzBC,GAA0C,SAAC,GAAgB,IAAdrc,EAAa,EAAbA,OAChDqG,EAAMC,cAAND,EACAiW,EAAaC,cAAbD,SACFE,EAAe9C,KACf+C,EAAsBD,EAAY,WAAOA,EAAahZ,QAAQ,IAAO,MAErEkZ,EAAWC,aAAcL,EAAUjW,IAAM,GAC/C,+BAA2CuW,MAAiBF,GAApDG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,MACxBC,EAAYP,EAAsB,CAACI,EAAOJ,GAAqBQ,KAAK,OAASJ,EAKjF,OAJI7c,IACFgd,EAAY,CAAChd,EAAQ6c,GAAOI,KAAK,QAIjC,gBAAC,KAAD,WACE,iCAAQD,IACR,uBAAME,SAAS,WAAWC,QAASN,IACnC,uBAAMK,SAAS,iBAAiBC,QAASL,IACzC,uBAAMI,SAAS,WAAWC,QAASJ,QAkB1BK,GAToB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUrd,EAAuB,EAAvBA,OAAWsM,EAAY,mBACrE,OACE,uCACE,eAAC,GAAD,CAAUtM,OAAQA,IAClB,eAACmc,GAAD,6BAAgB7P,GAAhB,aAAwB+Q,S,6CCwFfC,GAlIK,SAAC,GAA2D,IAAzD9O,EAAwD,EAAxDA,KAAM3H,EAAkD,EAAlDA,SAAU0W,EAAwC,EAAxCA,SAAahc,EAA2B,mBACrEU,EAAUkC,eAAVlC,MACFub,EAAWhX,iBAAuB,MACxC,EAAiCvH,qBAAjC,mBAAOwe,EAAP,KAAqBC,EAArB,KAEMC,EAAevK,uBAAY,WAAO,IAAD,EACjCqK,GAAY,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAUjW,eAAd,OAAI,EAAmBqW,gBACrCH,EAAaI,OAAOL,EAASjW,QAAQqW,cAAcE,YAAc,GAf3C,KAgBtBL,EAAaM,YAAYC,aACzBP,EAAaM,YAAYE,iBAAiB,GAAG,MAE9C,CAACR,EAAcD,IAGZU,EAA6B,kBAAXC,OA4GxB,OA3GAxe,qBAAU,WACR,OAAKue,GAGLC,OAAOtW,iBAAiB,SAAU8V,GAC3B,kBAAMQ,OAAOlW,oBAAoB,SAAU0V,KAHzC,OAIR,CAACO,EAAUV,EAAUG,IAGxBhe,qBAAU,WAAO,IAAD,EACd,IAAK8d,GAAgBjP,GAAS,OAACgP,QAAD,IAACA,GAAD,UAACA,EAAUjW,eAAX,OAAC,EAAmBqW,cAAe,CAC/D,IAAMQ,EAAQC,aAAYb,EAASjW,QAAS,CAC1CgF,OAnCoB,IAoCpBH,MAAOoR,EAASjW,QAAQqW,cAAcE,YAAc,GACpDQ,OAAQ,CACNC,gBAAiB,cACjBC,UAAWvc,EAAMC,OAAOmO,WACxBoO,WAAY,oBACZnU,SAAU,IAEZoU,gBAAiB,CACfC,aAAc,CACZ/P,IAAK,GACLG,OAAQ,IAEV6P,eAAe,GAEjBb,UAAW,CACTa,eAAe,EACfC,gBAAgB,EAChBC,kBAAmB,SAACC,GAClB,OAAOpb,mBAAkB,IAAXob,EAAiB,kBAGnCC,UAAW,CACTC,SAAS,GAEXC,KAAM,CACJC,UAAW,CACTF,SAAS,GAEXG,UAAW,CACTH,SAAS,IAGbI,UAAW,CACTC,SAAU,CACRL,SAAS,EACTM,cAAc,GAEhBC,KAAM,EACNC,SAAU,CACRR,SAAS,EACTM,cAAc,EACdxX,MAAO,EACPqE,MAAO,EACP9H,MAAOrC,EAAMC,OAAOmO,WACpBqP,qBAAsBzd,EAAMC,OAAOwD,YAKzC0Y,EAAML,YAAYC,aAClBN,EAASU,MAEV,CAACX,EAAcjP,EAAM3H,EAAU5E,IAElCtC,qBAAU,WACR,GAAI8d,GAAgBjP,EAAM,CACxB,IAAMmR,EAASlC,EAAamC,qBAAqB,CAC/CC,QAAS5d,EAAMC,OAAO4d,QACtBC,UAAW9d,EAAMC,OAAO8d,QACxBC,gBAAiBhe,EAAMC,OAAO8d,QAC9BE,cAAeje,EAAMC,OAAO4d,QAC5BK,cAAele,EAAMC,OAAO8d,QAC5BI,YAAane,EAAMC,OAAO4d,UAG5BH,EAAOU,QAAQ7R,GAGfiP,EAAa6C,wBAAuB,SAACC,GACnC,GACU,OAAR/C,QAAQ,IAARA,KAAUjW,eACC0H,IAAVsR,QACgBtR,IAAfsR,EAAMjS,MACLiS,GAASA,EAAMC,OAASD,EAAMC,MAAM9S,EAAI,GACxC6S,GAASA,EAAMC,OAASD,EAAMC,MAAM9S,EAAI8P,EAASjW,QAAQuW,aACzDyC,GAASA,EAAMC,OAASD,EAAMC,MAAMrM,EAAI,GACxCoM,GAASA,EAAMC,OAASD,EAAMC,MAAMrM,EAhHrB,KAmHdtN,GAAUA,OAASoI,GACnBsO,GAAUA,OAAStO,QAClB,GAAI0Q,GAAUY,EAAO,CAC1B,IAAMpK,EAAYoK,EAAMjS,KAClBmS,EAAM,IAAIxI,KAAiB,IAAZ9B,GACfuK,EAAM,IAAIzI,KAAKwI,EAAIE,UAAsC,IAA1BF,EAAIG,qBACnCtS,EAAI,UAAM3K,mBAAO+c,EAAK,sBAAlB,UACJG,EAASN,EAAMO,aAAaC,IAAIpB,GAClC9Y,GAAUA,EAAQ,OAACga,QAAD,IAACA,OAAD,EAACA,EAAQG,MAC3BzD,GAAUA,EAASjP,UAI5B,CAACmP,EAAcjP,EAAM3H,EAAU0W,EAAUtb,IAG1C,wCACIwb,GAAgB,eAAC,GAAD,IAClB,mCAAKzT,IAAKwT,EAAU7e,GAAG,gBAAmB4C,QCvI1CuT,GAAU/S,YAAO2J,IAAP3J,CAAH,+LAUPkf,GAAQlf,YAAO2J,IAAP3J,CAAH,2GAEW,qBAAGE,MAAkBC,OAAOgf,SASrCC,GAAYpf,IAAOqf,OAAV,mSAYX,gBAAGnf,EAAH,EAAGA,MAAH,SAAUof,SAA2Bpf,EAAMC,OAAOE,KAAOH,EAAMC,OAAOmO,cAC3D,gBAAGpO,EAAH,EAAGA,MAAH,SAAUof,SAA2Bpf,EAAM0D,KAAKxD,WAAaF,EAAMC,OAAOgf,SAOnFI,GAAgD,SAAC,GAAkB,IAAhBjE,EAAe,EAAfA,SAC9D,OACE,eAAC,GAAD,CAASnS,EAAG,CAAC,QAAS,UAAtB,SACE,eAAC+V,GAAD,UAAQ5D,Q,SHrCT5D,O,yBAAAA,I,mBAAAA,I,kBAAAA,Q,KAaL,I,wBAyFe8H,GAzF6B,SAAC,GAAuD,IAArDtV,EAAoD,EAApDA,QAAS6L,EAA2C,EAA3CA,UAAWhG,EAAgC,EAAhCA,UAAW0P,EAAqB,EAArBA,eAC5E,EAAwBviB,mBAASwa,GAAUgI,OAA3C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoC1iB,qBAApC,mBAAO2iB,EAAP,KAAmBxT,EAAnB,KACA,EAAkCnP,qBAAlC,mBAAO4iB,EAAP,KAAkBxT,EAAlB,KACQhI,EAAMC,cAAND,EAEF2R,EAAcrU,mBAAO,IAAIsU,KAAQ,eAEjC6J,EAAmBvf,mBAAQ,WAC/B,OAAIuV,EACKA,EAAUrZ,KAAI,SAAC0Z,GACpB,MAAO,CACL7J,KAAM8J,aAAaD,EAAIE,MACvBvS,MAAOqS,EAAIxN,iBAIV,KACN,CAACmN,IACEQ,EAAsB/V,mBAAQ,WAClC,OAAIuV,EACKA,EAAUrZ,KAAI,SAAC0Z,GACpB,MAAO,CACL7J,KAAM8J,aAAaD,EAAIE,MACvBvS,MAAOqS,EAAI9O,cAIV,KACN,CAACyO,IAuBJ,OACE,gBAAC,IAAD,WACE,gBAAC,GAAD,WACc,UAAZ7L,GACE,eAACkV,GAAD,CAAWE,SAAUK,IAASjI,GAAUgI,MAAOtX,QAAS,kBAAMwX,EAAQlI,GAAUgI,QAAhF,SACE,eAAC,KAAD,UAAOpb,EAAE,aAGb,eAAC8a,GAAD,CAAWE,SAAUK,IAASjI,GAAUsI,OAAQ5X,QAAS,kBAAMwX,EAAQlI,GAAUsI,SAAjF,SACE,eAAC,KAAD,UAAO1b,EAAE,cAEX,eAAC8a,GAAD,CAAWE,SAAUK,IAASjI,GAAUuI,UAAW7X,QAAS,kBAAMwX,EAAQlI,GAAUuI,YAApF,SACE,eAAC,KAAD,UAAO3b,EAAE,oBAKb,gBAAC,IAAD,CAAMwQ,cAAc,SAASsC,GAAG,OAAO8I,GAAG,OAA1C,UAtC0B,WAC5B,IAAIC,EAAiB,KACrB,GAAIN,EACFM,EAAiBjf,GAAa2e,QACzB,GAAIF,IAASjI,GAAUsI,QAAUzJ,EAAoB7Y,OAAS,EAAG,CAAC,IAAD,EACtEyiB,EAAiBjf,GAAY,UAACqV,EAAoBA,EAAoB7Y,OAAS,UAAlD,aAAC,EAAqDqG,YAC9E,GAAI4b,IAASjI,GAAUuI,WAAaF,EAAiBriB,OAAS,EAAG,CAAC,IAAD,EACtEyiB,EAAiBjf,GAAY,UAAC6e,EAAiBA,EAAiBriB,OAAS,UAA5C,aAAC,EAA+CqG,YACpE4b,IAASjI,GAAUgI,OAAnB,OAA4B3P,QAA5B,IAA4BA,KAAWpH,WAChDwX,EAAiBjf,GAAa6O,EAAUpH,WAG1C,OAAOwX,EACL,gBAAC,KAAD,CAAM5X,SAAS,OAAOF,MAAI,EAA1B,cACI8X,KAGJ,eAAC,KAAD,CAAU3V,OAAO,OAAOH,MAAM,UAsB3B+V,GACD,eAAC,KAAD,CAAMC,OAAK,EAAC9d,MAAM,YAAlB,SACGud,GAAa7J,OAIlB,eAAC,IAAD,CAAKmB,GAAG,OAAO5M,OAAoB,UAAZN,EAAsB,QAAU,QAAvD,SACGyV,IAASjI,GAAUuI,UAClB,eAAC,GAAD,CAAWxT,KAAMsT,EAAkB1T,cAAeA,EAAeC,aAAcA,IAC7EqT,IAASjI,GAAUsI,OACrB,eAAC,GAAD,CAAUvT,KAAM8J,EAAqBlK,cAAeA,EAAeC,aAAcA,IAC/EqT,IAASjI,GAAUgI,MACrB,eAAC,GAAD,CAAajT,KAAMgT,EAAgB3a,SAAUuH,EAAemP,SAAUlP,IACpE,WI3ENgU,GAAgBtgB,IAAOa,IAAV,8OAWb0f,GAAcvgB,YAAO2J,IAAP3J,CAAH,oIASXwgB,GAAwBxgB,YAAO2J,IAAP3J,CAAH,6MACL,qBAAGE,MAAkBC,OAAOmD,cAC5B,qBAAGpD,MAAkBC,OAAOC,cA6NnCqgB,GApNsD,SAAC,GAI/D,IAFgBC,EAEjB,EAHJhf,MACEif,OAAUpgB,QAGZ,EAAuB4D,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNC,EAAMC,cAAND,EACR,EAA4CpH,mBAAS,GAArD,mBAAO0jB,EAAP,KAAuBC,EAAvB,KACA,EAA+CC,aAC7Cxc,EAAE,4EACF,IAFMyc,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,eAAgBC,EAAjC,EAAiCA,UAMjCrjB,qBAAU,WACRwe,OAAO8E,SAAS,EAAG,KAClB,IAGH,IAAM3gB,EAAUmgB,EAAapiB,cAEvBsT,EAAW3S,YAAa,CAACsB,IAAU,GACnCwV,EAAYoL,YAAiB5gB,GAC7B+T,EAAe8M,YAAoB7gB,GAEzC,EAA6C+F,eAA7C,mBAAO6Q,EAAP,KAAuBkK,EAAvB,KAEA,OACE,eAAC,GAAD,CAAOpjB,OAAQ2T,EAAQ,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAUnK,OAAOxJ,OAAvB,qBAAmC2T,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAUlK,OAAOzJ,QAAW,KAAtF,SACG2T,EACC,uCACE,gBAAC,IAAD,CAAMqD,eAAe,gBAAgB9M,GAAG,OAAO2M,cAAe,CAAC,SAAU,SAAU,OAAnF,UACE,gBAAC,IAAD,CAAa3M,GAAG,OAAhB,UACE,eAAC,IAAD,CAAMzB,GAAG,QAAT,SACE,eAAC,KAAD,CAAMnE,MAAM,UAAZ,SAAuB+B,EAAE,YAE3B,eAAC,IAAD,CAAMoC,GAAG,cAAT,SACE,eAAC,KAAD,CAAMnE,MAAM,UAAZ,SAAuB+B,EAAE,aAE3B,eAAC,IAAD,UACE,eAAC,KAAD,CAAMgd,GAAG,MAAT,mBAAmB1P,EAASnK,OAAOxJ,OAAnC,cAA+C2T,EAASlK,OAAOzJ,eAGnE,gBAAC,IAAD,CAAMgX,eAAgB,CAAC,KAAM,KAAM,YAAagC,GAAI,CAAC,MAAO,MAAO,GAAnE,UACE,eAAC,IAAD,CAAcqK,GAAG,MAAM5N,KAAMC,aAAepT,EAAS,WAArD,SACG+D,EAAE,sBAEL,eAAC,GAAD,CAAUnC,KAAMgV,EAAexX,SAASY,GAAU6H,QAAS,kBAAMiZ,EAAmB9gB,YAGxF,gBAAC,IAAD,CAAMuU,cAAc,SAApB,UACE,gBAAC,IAAD,CAAM7E,WAAW,SAAS9H,GAAI,CAAC,MAAO,MAAtC,UACE,eAAC,GAAD,CAAoBpH,SAAU6Q,EAASnK,OAAOlH,QAASS,SAAU4Q,EAASlK,OAAOnH,QAASN,KAAM,KAChG,eAAC,KAAD,CACEuI,GAAG,OACHH,MAAI,EACJE,SAAUnE,GAAQC,EAAO,OAAS,OAClCzH,GAAG,uBAJL,mBAKKgV,EAASnK,OAAOxJ,OALrB,cAKiC2T,EAASlK,OAAOzJ,aAEnD,gBAAC,IAAD,CAAMgX,eAAe,gBAAgBH,cAAe,CAAC,SAAU,SAAU,SAAU,OAAnF,UACE,gBAAC,IAAD,CAAMA,cAAe,CAAC,SAAU,SAAU,OAAQ3M,GAAI,CAAC,MAAO,MAAO,MAArE,UACE,eAAC,IAAD,CAAMzB,GAAE,sBAAiBkL,EAASnK,OAAOlH,SAAzC,SACE,gBAACggB,GAAD,WACE,eAAC,GAAD,CAAchgB,QAASqR,EAASnK,OAAOlH,QAASN,KAAK,SACrD,eAAC,KAAD,CAAMsI,SAAS,OAAOC,GAAG,MAAMxC,MAAO,CAAEoD,WAAY,UAAYiB,MAAM,cAAtE,qBACQuH,EAASnK,OAAOxJ,OADxB,eACqCiD,GAAa0Q,EAAS2P,YAAa,CACpElgB,SAAU,WACVC,iBAAkB,KAClBC,gBAAgB,IAJpB,YAKQqQ,EAASlK,OAAOzJ,eAI5B,eAAC,IAAD,CAAMyI,GAAE,sBAAiBkL,EAASlK,OAAOnH,SAAzC,SACE,gBAACggB,GAAD,CAAa/X,GAAI,CAAC,KAAM,KAAM,QAA9B,UACE,eAAC,GAAD,CAAcjI,QAASqR,EAASlK,OAAOnH,QAASN,KAAK,SACrD,eAAC,KAAD,CAAMsI,SAAS,OAAOC,GAAG,MAAMxC,MAAO,CAAEoD,WAAY,UAAYiB,MAAM,cAAtE,qBACQuH,EAASlK,OAAOzJ,OADxB,eACqCiD,GAAa0Q,EAAS4P,YAAa,CACpEngB,SAAU,WACVC,iBAAkB,KAClBC,gBAAgB,IAJpB,YAKQqQ,EAASnK,OAAOxJ,kBAK9B,gBAAC,IAAD,WACE,eAAC,IAAD,CAAMyI,GAAE,eAAUkL,EAASnK,OAAOlH,QAA1B,YAAqCqR,EAASlK,OAAOnH,SAA7D,SACE,eAAC,IAAD,CAAQ+gB,GAAG,MAAMpX,QAAQ,YAAzB,SACG5F,EAAE,qBAGP,eAAC,IAAD,CAAMoC,GAAE,8BAAyBkL,EAASnK,OAAOlH,QAAzC,2BAAmEqR,EAASlK,OAAOnH,SAA3F,SACE,eAAC,IAAD,UAAS+D,EAAE,sBAKnB,gBAACgc,GAAD,WACE,gBAAC,IAAD,WACE,eAAC,IAAD,UACE,gBAAC,IAAD,CAAKnX,EAAE,OAAP,UACE,gBAAC,IAAD,CAAM8L,eAAe,gBAArB,UACE,gBAAC,IAAD,CAAMwM,KAAK,IAAI3M,cAAc,SAA7B,UACE,eAAC,KAAD,CAAMvS,MAAM,YAAY8F,MAAI,EAACE,SAAS,OAAOkJ,cAAc,YAA3D,SACGnN,EAAE,eAEL,gBAAC,KAAD,CAAMiE,SAAS,OAAOF,MAAI,EAA1B,cACInH,GAAa0Q,EAAShJ,iBAE1B,eAAC,GAAD,CAAS7E,MAAO6N,EAAS8P,wBAE3B,gBAAC,IAAD,CAAMD,KAAK,IAAI3M,cAAc,SAA7B,UACE,eAAC,KAAD,CAAMvS,MAAM,YAAY8F,MAAI,EAACE,SAAS,OAAOkJ,cAAc,YAA3D,SACGnN,EAAE,mBAEL,gBAAC,KAAD,CAAMiE,SAAS,OAAOF,MAAI,EAA1B,UACGnH,GAAa0Q,EAASE,SADzB,OAGA,gBAAC,IAAD,CAAM7B,WAAW,SAAjB,UACE,uBAAMhI,IAAKgZ,EAAX,SACE,eAAC,IAAD,CAAU1e,MAAM,iBAElB,eAAC,KAAD,CAAMiG,GAAG,MAAMD,SAAS,OAAOhG,MAAM,aAArC,SACG+B,EAAE,oBAEJ0c,GAAkBD,WAIzB,eAAC,KAAD,CAAMxe,MAAM,YAAY8F,MAAI,EAAC4O,GAAG,OAAO1O,SAAS,OAAOkJ,cAAc,YAArE,SACGnN,EAAE,yBAEL,gBAACkc,GAAD,WACE,gBAAC,IAAD,CAAMvL,eAAe,gBAArB,UACE,gBAAC,IAAD,WACE,eAAC,GAAD,CAAc1U,QAASqR,EAASnK,OAAOlH,QAASN,KAAK,SACrD,eAAC,KAAD,CAAMogB,OAAK,EAAC9d,MAAM,aAAaiG,GAAG,MAAlC,SACGoJ,EAASnK,OAAOxJ,YAGrB,eAAC,KAAD,CAAMoiB,OAAK,EAAX,SAAanf,GAAa0Q,EAAS+P,sBAErC,gBAAC,IAAD,CAAM1M,eAAe,gBAArB,UACE,gBAAC,IAAD,WACE,eAAC,GAAD,CAAc1U,QAASqR,EAASlK,OAAOnH,QAASN,KAAK,SACrD,eAAC,KAAD,CAAMogB,OAAK,EAAC9d,MAAM,aAAaiG,GAAG,MAAlC,SACGoJ,EAASlK,OAAOzJ,YAGrB,eAAC,KAAD,CAAMoiB,OAAK,EAAX,SAAanf,GAAa0Q,EAASgQ,8BAK3C,eAAC,IAAD,CAAM3K,GAAG,OAAT,SACE,gBAAC,IAAD,CAAMnC,cAAc,SAAS3L,EAAE,OAA/B,UACE,gBAAC,IAAD,CACEY,YAAa6W,EACbiB,YAAa,SAAC7R,GAAD,OAAW6Q,EAAkB7Q,IAC1C/F,MAAM,KACNC,QAAQ,SAJV,UAME,eAAC,IAAD,CAAgBG,MAAM,OAAtB,SAA8B/F,EAAE,SAChC,eAAC,IAAD,CAAgB+F,MAAM,OAAtB,SAA8B/F,EAAE,WAElC,gBAAC,IAAD,CAAM2S,GAAG,OAAT,UACE,gBAAC,IAAD,CAAMwK,KAAK,IAAI3M,cAAc,SAA7B,UACE,eAAC,KAAD,CAAMvS,MAAM,YAAYgG,SAAS,OAAOF,MAAI,EAACoJ,cAAc,YAA3D,SACoBnN,EAAjBsc,EAAmB,YAAiB,gBAEvC,gBAAC,KAAD,CAAMrY,SAAS,OAAOF,MAAI,EAA1B,cACqBnH,GAAjB0f,EAA8BhP,EAASvI,cAA8BuI,EAAStK,cAElF,eAAC,GAAD,CAASvD,MAAO6c,EAAiBhP,EAASkQ,oBAAsBlQ,EAASmQ,qBAE3E,gBAAC,IAAD,CAAMN,KAAK,IAAI3M,cAAc,SAA7B,UACE,eAAC,KAAD,CAAMvS,MAAM,YAAYgG,SAAS,OAAOF,MAAI,EAACoJ,cAAc,YAA3D,SACoBnN,EAAjBsc,EAAmB,oBAAyB,wBAE/C,gBAAC,KAAD,CAAMrY,SAAS,OAAOF,MAAI,EAA1B,cACqBnH,GAAjB0f,EAA8BhP,EAASoQ,SAAyBpQ,EAASC,cAE7E,eAAC,KAAD,CAAMtP,MAAM,aAAagG,SAAS,OAAlC,SACGjE,EAAE,iCAAkC,CACnC2d,UACI/gB,GADO0f,EACMhP,EAASsQ,YACTtQ,EAASuQ,gCAQxC,eAAC,GAAD,CAAWjY,QAAQ,OAAO6L,UAAWA,OAEvC,eAAC,IAAD,CAAS5N,GAAG,OAAO8O,GAAG,OAAOhN,MAAM,KAAnC,SACG3F,EAAE,kBAEL,eAAC,GAAD,CAAkBgQ,aAAcA,OAGlC,eAAC,IAAD,CAAM2C,GAAG,OAAOhC,eAAe,SAA/B,SACE,eAAC,IAAD,SCjQJmN,GAAcpiB,YAAOoK,IAAPpK,CAAH,6JAUXqiB,GAAeriB,YAAO8L,IAAP9L,CAAH,iGACI,qBAAGE,MAAkBC,OAAOmD,cAC/B,qBAAGpD,MAAkBqP,MAAM3L,QAIjC0e,GAAgBtiB,IAAOa,IAAV,iKAUpB0hB,GAAW,SAAC,GAA6C,IAA3CxS,EAA0C,EAA1CA,UAClB,OACE,eAACqS,GAAD,CAAa1b,GAAE,sBAAiBqJ,EAAUxP,SAA1C,SACE,eAAC8hB,GAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAKhY,MAAM,OAAOG,OAAO,OAAzB,SAEE,eAAC,GAAD,CAAcjK,QAASwP,EAAUxP,QAASN,KAAK,WAEjD,gBAAC,IAAD,CAAKuI,GAAG,OAAR,UACE,eAAC,KAAD,UAAOuH,EAAU9R,SACjB,gBAAC,IAAD,CAAMgS,WAAW,SAAjB,UACE,gBAAC,KAAD,CAAM1H,SAAS,OAAO+Y,GAAG,MAAMkB,WAAW,OAA1C,cACIthB,GAAa6O,EAAUpH,aAE3B,eAAC,GAAD,CAASJ,SAAS,OAAOxE,MAAOgM,EAAUI,+BA+DzCsS,GAtDkB,WAC/B,IAAMjM,EAAYC,cACVnS,EAAMC,cAAND,EAEFoe,EAAmBliB,mBAAQ,WAC/B,OAAOmW,OAAOnL,OAAOgL,GAClBrP,MAAK,cAA+B,IAAtBrJ,EAAqB,EAA3B2O,KAAmB0E,EAAQ,EAAd1E,KAEpB,OAAO3O,GAAKqT,EAAKjC,KAAKC,IAAL,OAASrR,QAAT,IAASA,OAAT,EAASA,EAAGqS,gBAAkBjB,KAAKC,IAAL,OAASgC,QAAT,IAASA,OAAT,EAASA,EAAGhB,iBAAmB,EAAI,GAAM,KAEzF9R,MAAM,EAAG6Q,KAAKyT,IAAI,GAAIhM,OAAOnL,OAAOgL,GAAW9Y,WACjD,CAAC8Y,IAEEoM,EAAcne,iBAAuB,MACrCoe,EAAcpe,kBAAgB,GAsBpC,OApBA7G,qBAAU,WACR,IAAMklB,EAAiBC,aAAY,WAC7BH,EAAYpd,UACVod,EAAYpd,QAAQwd,aAAeJ,EAAYpd,QAAQyd,YAAcL,EAAYpd,QAAQuW,YAC3F8G,EAAYrd,SAAU,EACsB,IAAnCod,EAAYpd,QAAQwd,aAC7BH,EAAYrd,SAAU,GAExBod,EAAYpd,QAAQ0b,SAClB2B,EAAYrd,QAAUod,EAAYpd,QAAQwd,WAAa,EAAIJ,EAAYpd,QAAQwd,WAAa,EAC5F,MAGH,IAEH,OAAO,WACLE,cAAcJ,MAEf,IAE6B,IAA5BJ,EAAiBhlB,QAAiBglB,EAAiB3L,MAAK,SAACoM,GAAD,OAAWA,EAAM1W,QAK3E,gBAAC,IAAD,CAAM2W,GAAG,OAAT,UACE,eAAC,KAAD,CAAM5a,GAAG,OAAOyO,GAAG,MAAnB,SACG3S,EAAE,gBAEL,eAACge,GAAD,CAAera,IAAK2a,EAApB,SACGF,EAAiBhmB,KAAI,SAACymB,GAAD,aACpBA,EAAM1W,KAAO,eAAC,GAAD,CAAwDsD,UAAWoT,EAAM1W,MAAzE,mCAAiC0W,EAAM1W,YAAvC,aAAiC,EAAYlM,UAAuC,aAVhG,MCjDI8iB,GAxCkB,WAC/B,IAAQ/e,EAAMC,cAAND,EACR1G,qBAAU,WACRwe,OAAO8E,SAAS,EAAG,KAClB,IAEH,IAAM1K,EAAYC,cAEZC,EAAkBlW,mBAAQ,WAC9B,OAAOmW,OAAOnL,OAAOgL,GAClB9Z,KAAI,SAACoH,GAAD,OAAWA,EAAM2I,QACrBvF,QAAO,SAACpD,GAAD,OAAWA,OACpB,CAAC0S,IAEJ,EAAsBrQ,eAAfC,EAAP,oBACMkd,EAAkBvkB,YAAcqH,GAEtC,OACE,gBAAC4Q,GAAA,EAAD,WACE,eAAC,IAAD,CAAS/M,MAAM,KAAK9B,GAAG,OAAvB,SACG7D,EAAE,oBAEJ8B,EAAY1I,OAAS,EACpB,eAAC,GAAD,CAAY4S,WAAYgT,IAExB,eAAC,IAAD,UACE,eAAC,KAAD,CAAMjM,GAAG,OAAOD,GAAG,OAAnB,SACG9S,EAAE,qCAIT,eAAC,GAAD,IACA,eAAC,IAAD,CAAS2F,MAAM,KAAKgN,GAAG,OAAO9O,GAAG,OAAOvL,GAAG,oBAA3C,SACG0H,EAAE,gBAEL,eAAC,GAAD,CAAYgM,WAAYoG,Q,UCZf6M,GArBI,SAAChjB,GAClB,MAAoCrD,wBAA6BgQ,GAAjE,mBAAOsW,EAAP,KAAmBC,EAAnB,KAiBA,OAfA7lB,qBAAU,WACR,IAAM8lB,EAAS,uCAAG,4BAAA5lB,EAAA,sEACK6lB,MAAM,GAAD,OAZX,+EAYW,OAAmBpjB,IAD7B,OAGM,OAFhB6K,EADU,QAGLwY,QACTxY,EAAOyY,OAAOC,MAAK,YAAe,IAAZrX,EAAW,EAAXA,KACpBgX,EAAchX,EAAKsX,QALP,2CAAH,qDASXxjB,GACFmjB,MAED,CAACnjB,IAEGijB,GCaHlD,GAAgBtgB,IAAOa,IAAV,8OAWbmjB,GAAgBhkB,YAAOikB,IAAPjkB,CAAH,6HASbkkB,GAAgC,CAAEC,MAAO,GAgMhCC,GA9LuD,SAAC,GAIhE,IAFgB1D,EAEjB,EAHJhf,MACEif,OAAUpgB,QAGZ,EAAuB4D,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNC,EAAMC,cAAND,EAGR1G,qBAAU,WACRwe,OAAO8E,SAAS,EAAG,KAClB,IAGH,IAAM3gB,EAAUmgB,EAAapiB,cAEvB+lB,EAAUd,GAAWhjB,GAErBwP,EAAYuU,YAAa/jB,GACzBgkB,EAAgBC,YAAiBjkB,GACjCyR,EAAY/S,YAAY,OAACslB,QAAD,IAACA,IAAiB,IAC1CjQ,EAAemQ,YAAqBlkB,GACpCwV,EAAY2O,YAAkBnkB,GAG9BokB,EAAYC,YAAkBrkB,EAASskB,IAAkBX,IACzDY,EAAoBtkB,mBAAQ,WAEhC,GAAImkB,GAAa5U,GAAa4U,EAAUjnB,OAAS,EAC/C,MAAM,GAAN,mBACKinB,GADL,CAEE,CACEpY,MAAM,IAAI2J,MAAO0I,UAAY,IAC7BK,KAAM0F,EAAUA,EAAUjnB,OAAS,GAAGqnB,MACtCA,MAAK,OAAEhV,QAAF,IAAEA,OAAF,EAAEA,EAAWpH,SAClBqc,KAAI,OAAEjV,QAAF,IAAEA,OAAF,EAAEA,EAAWpH,SACjBsc,IAAKN,EAAUA,EAAUjnB,OAAS,GAAGqnB,WAK1C,CAACJ,EAAW5U,IAEf,EAA6C5J,eAA7C,mBAAO+e,EAAP,KAAwBC,EAAxB,KAEA,OACE,eAAC,GAAD,CAAOlnB,OAAM,OAAE8R,QAAF,IAAEA,OAAF,EAAEA,EAAW9R,OAA1B,SACG8R,EACEA,EAAUqV,OAYT,uCAEE,gBAAC,IAAD,CAAMnQ,eAAe,gBAAgB9M,GAAG,OAAO2M,cAAe,CAAC,SAAU,SAAU,OAAnF,UACE,gBAAC,IAAD,CAAa3M,GAAG,OAAhB,UACE,eAAC,IAAD,CAAMzB,GAAG,QAAT,SACE,eAAC,KAAD,CAAMnE,MAAM,UAAZ,SAAuB+B,EAAE,YAE3B,eAAC,IAAD,CAAMoC,GAAG,eAAT,SACE,eAAC,KAAD,CAAMnE,MAAM,UAAZ,SAAuB+B,EAAE,cAE3B,gBAAC,IAAD,WACE,eAAC,KAAD,CAAMgd,GAAG,MAAT,SAAgBvR,EAAU9R,SAC1B,eAAC,KAAD,qBAAW0U,GAAapS,GAAxB,aAGJ,gBAAC,IAAD,CAAM0U,eAAgB,CAAC,KAAM,KAAM,YAAagC,GAAI,CAAC,MAAO,MAAO,GAAnE,UACE,eAAC,IAAD,CAAcqK,GAAG,MAAM/e,MAAM,UAAUmR,KAAMC,aAAepT,EAAS,WAArE,SACG+D,EAAE,sBAEJ+f,GACC,eAACL,GAAD,CAAetQ,KAAM2Q,EAASgB,IAAI,+BAA+B3f,OAAO,SAAxE,SACE,eAAC,IAAD,CAAOpG,IAAI,uBAAuBkL,OAAQ,GAAIH,MAAO,GAAI9K,IAAK+E,EAAE,mCAGpE,eAAC,GAAD,CAAUnC,KAAM+iB,EAAgBvlB,SAASY,GAAU6H,QAAS,kBAAM+c,EAAkB5kB,YAGxF,gBAAC,IAAD,CAAM0U,eAAe,gBAAgBH,cAAe,CAAC,SAAU,SAAU,SAAU,OAAnF,UACE,gBAAC,IAAD,CAAMA,cAAc,SAAS3M,GAAI,CAAC,MAAO,MAAzC,UACE,gBAAC,IAAD,CAAM8H,WAAW,SAAjB,UACE,eAAC,GAAD,CAAchQ,KAAK,OAAOM,QAASA,IACnC,eAAC,KAAD,CACEiI,GAAG,OACHH,MAAI,EACJma,WAAW,MACXja,SAAUnE,GAAQC,EAAO,OAAS,OAClCzH,GAAG,wBALL,SAOGmT,EAAU5R,OAEb,gBAAC,KAAD,CAAMqK,GAAG,OAAOga,WAAW,IAAIjgB,MAAM,aAAagG,SAAUnE,GAAQC,EAAO,OAAS,OAApF,cACI0L,EAAU9R,OADd,UAIF,gBAAC,IAAD,CAAMgZ,GAAG,MAAMzO,GAAG,OAAOyH,WAAW,SAApC,UACE,gBAAC,KAAD,CAAMqR,GAAG,OAAOjZ,MAAI,EAACE,SAAS,OAA9B,cACIrH,GAAa6O,EAAUpH,SAAU,CAAEtH,SAAU,gBAEjD,eAAC,GAAD,CAAS0C,MAAOgM,EAAUI,eAAgBD,WAAY,YAG1D,gBAAC,IAAD,WACE,eAAC,IAAD,CAAMxJ,GAAE,eAAUnG,GAAlB,SACE,eAAC,IAAD,CAAQ+gB,GAAG,MAAMpX,QAAQ,YAAzB,SACG5F,EAAE,qBAGP,eAAC,IAAD,CAAMoC,GAAE,8BAAyBnG,GAAjC,SACE,eAAC,IAAD,UAAS+D,EAAE,mBAMjB,gBAAC,GAAD,WACE,eAAC,IAAD,UACE,gBAAC,IAAD,CAAK6E,EAAE,OAAP,UACE,eAAC,KAAD,CAAMd,MAAI,EAACgY,OAAK,EAAC9d,MAAM,YAAYgG,SAAS,OAAOkJ,cAAc,YAAjE,SACGnN,EAAE,eAEL,gBAAC,KAAD,CAAM+D,MAAI,EAACE,SAAS,OAApB,cACIrH,GAAa6O,EAAUnH,iBAE3B,eAAC,GAAD,CAAS7E,MAAOgM,EAAU2R,qBAE1B,eAAC,KAAD,CAAMzK,GAAG,OAAO5O,MAAI,EAAC9F,MAAM,YAAYgG,SAAS,OAAOkJ,cAAc,YAArE,SACGnN,EAAE,gBAEL,gBAAC,KAAD,CAAM+D,MAAI,EAACE,SAAS,OAAOkJ,cAAc,YAAzC,cACIvQ,GAAa6O,EAAUzI,cAE3B,eAAC,GAAD,CAASvD,MAAOgM,EAAUgS,kBAE1B,eAAC,KAAD,CAAM9K,GAAG,OAAO5O,MAAI,EAAC9F,MAAM,YAAYgG,SAAS,OAAOkJ,cAAc,YAArE,SACGnN,EAAE,eAEL,gBAAC,KAAD,CAAM+D,MAAI,EAACE,SAAS,OAApB,cACIrH,GAAa6O,EAAU1G,kBAG3B,eAAC,KAAD,CAAM4N,GAAG,OAAO5O,MAAI,EAAC9F,MAAM,YAAYgG,SAAS,OAAOkJ,cAAc,YAArE,SACGnN,EAAE,sBAEL,eAAC,KAAD,CAAM+D,MAAI,EAACE,SAAS,OAApB,SACGrH,GAAa6O,EAAUuV,QAAS,CAAE9jB,WAAW,WAKpD,eAAC,GAAD,CACE0I,QAAQ,QACR6L,UAAWA,EACXhG,UAAWA,EACX0P,eAAgBqF,OAKpB,eAAC,IAAD,CAAS7a,MAAM,KAAK9B,GAAG,OAAO8O,GAAG,OAAjC,SACG3S,EAAE,WAGL,eAAC,GAAD,CAAW0N,UAAWA,IAEtB,eAAC,IAAD,CAAS/H,MAAM,KAAK9B,GAAG,OAAO8O,GAAG,OAAjC,SACG3S,EAAE,kBAGL,eAAC,GAAD,CAAkBgQ,aAAcA,OAjIlC,eAAC,IAAD,UACE,eAAC,IAAD,CAAKnL,EAAE,OAAP,SACE,gBAAC,KAAD,WACG7E,EAAE,4DACH,eAAC,IAAD,CAAM0B,MAAO,CAAE0I,QAAS,SAAUjG,WAAY,OAAS/B,GAAE,eAAUnG,GAAnE,SACG+D,EAAE,kBAgIb,eAAC,IAAD,CAAM2S,GAAG,OAAOhC,eAAe,SAA/B,SACE,eAAC,IAAD,SCpOKsQ,GAdc,SAAChb,GAC5B,IAEchK,EAEVgK,EAHF7I,MACEif,OAAUpgB,QAKd,OAAKG,qBAAUH,EAAQjC,eAGhB,eAAC,GAAD,gBAAeiM,IAFb,eAAC,IAAD,CAAU7D,GAAG,OCkBT8e,UAtBQ,WACrB,OACE,uCACE,eAAC,IAAD,IACA,eAAC,IAAD,IACA,eAAC,IAAD,IACA,eAAC,GAAD,IACA,eAAC,IAAD,CAAOC,KAAK,QAAQC,OAAK,EAAzB,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOD,KAAK,cAAcC,OAAK,EAA/B,SACE,eAACC,GAAD,MAEF,eAAC,IAAD,CAAOF,KAAK,eAAeC,OAAK,EAAhC,SACE,eAACE,GAAD,MAEF,eAAC,IAAD,CAAOF,OAAK,EAACD,KAAM,CAAC,wBAAyB,wBAAyBI,UAAWN,KACjF,eAAC,IAAD,CAAOG,OAAK,EAACD,KAAM,CAAC,uBAAwB,sBAAuB,uBAAwBI,UAAWpF","file":"static/js/12.16740bcc.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { request, gql } from 'graphql-request'\nimport { INFO_CLIENT } from 'config/constants/endpoints'\nimport { useTokenDatas, usePoolDatas } from 'state/info/hooks'\nimport { TokenData, PoolData } from 'state/info/types'\nimport { MINIMUM_SEARCH_CHARACTERS } from 'config/constants/info'\n\nconst TOKEN_SEARCH = gql`\n  query tokens($symbol: String, $name: String, $id: String) {\n    asSymbol: tokens(first: 10, where: { symbol_contains: $symbol }, orderBy: tradeVolumeUSD, orderDirection: desc) {\n      id\n    }\n    asName: tokens(first: 10, where: { name_contains: $name }, orderBy: tradeVolumeUSD, orderDirection: desc) {\n      id\n    }\n    asAddress: tokens(first: 1, where: { id: $id }, orderBy: tradeVolumeUSD, orderDirection: desc) {\n      id\n    }\n  }\n`\n\nconst POOL_SEARCH = gql`\n  query pools($tokens: [Bytes]!, $id: String) {\n    as0: pairs(first: 10, where: { token0_in: $tokens }) {\n      id\n    }\n    as1: pairs(first: 10, where: { token1_in: $tokens }) {\n      id\n    }\n    asAddress: pairs(first: 1, where: { id: $id }) {\n      id\n    }\n  }\n`\n\ninterface SingleQueryResponse {\n  id: string[]\n}\n\ninterface TokenSearchResponse {\n  asSymbol: SingleQueryResponse[]\n  asName: SingleQueryResponse[]\n  asAddress: SingleQueryResponse[]\n}\ninterface PoolSearchResponse {\n  as0: SingleQueryResponse[]\n  as1: SingleQueryResponse[]\n  asAddress: SingleQueryResponse[]\n}\n\nconst getIds = (entityArrays: SingleQueryResponse[][]) => {\n  const ids = entityArrays\n    .reduce((entities, currentTokenArray) => [...entities, ...currentTokenArray], [])\n    .map((entity) => entity.id)\n  return Array.from(new Set(ids))\n}\n\nconst useFetchSearchResults = (\n  searchString: string,\n): {\n  tokens: TokenData[]\n  pools: PoolData[]\n  tokensLoading: boolean\n  poolsLoading: boolean\n  error: boolean\n} => {\n  const [searchResults, setSearchResults] = useState({\n    tokens: [], // Token ids found by search query\n    pools: [], // Pool ids found by search query\n    loading: false, // Search query is in progress\n    error: false, // GraphQL returned error\n  })\n\n  const searchStringTooShort = searchString.length < MINIMUM_SEARCH_CHARACTERS\n\n  // New value received, reset state\n  useEffect(() => {\n    setSearchResults({\n      tokens: [],\n      pools: [],\n      loading: !searchStringTooShort,\n      error: false,\n    })\n  }, [searchString, searchStringTooShort])\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        const tokens = await request<TokenSearchResponse>(INFO_CLIENT, TOKEN_SEARCH, {\n          symbol: searchString.toUpperCase(),\n          // Most well known tokens have first letter capitalized\n          name: searchString.charAt(0).toUpperCase() + searchString.slice(1),\n          id: searchString.toLowerCase(),\n        })\n        const tokenIds = getIds([tokens.asAddress, tokens.asSymbol, tokens.asName])\n        const pools = await request<PoolSearchResponse>(INFO_CLIENT, POOL_SEARCH, {\n          tokens: tokenIds,\n          id: searchString.toLowerCase(),\n        })\n        setSearchResults({\n          tokens: tokenIds,\n          pools: getIds([pools.asAddress, pools.as0, pools.as1]),\n          loading: false,\n          error: false,\n        })\n      } catch (error) {\n        console.error(`Search failed for ${searchString}`, error)\n        setSearchResults({\n          tokens: [],\n          pools: [],\n          loading: false,\n          error: true,\n        })\n      }\n    }\n    if (!searchStringTooShort) {\n      search()\n    }\n  }, [searchString, searchStringTooShort])\n\n  // Save ids to Redux\n  // Token and Pool updater will then go fetch full data for these addresses\n  // These hooks in turn will return data of tokens that have been fetched\n  const tokenDatasFull = useTokenDatas(searchResults.tokens)\n  const poolDatasFull = usePoolDatas(searchResults.pools)\n\n  // If above hooks returned not all tokens/pools it means\n  // that some requests for full data are in progress\n  const tokensLoading = tokenDatasFull.length !== searchResults.tokens.length || searchResults.loading\n  const poolsLoading = poolDatasFull.length !== searchResults.pools.length || searchResults.loading\n\n  return {\n    tokens: tokenDatasFull,\n    pools: poolDatasFull,\n    tokensLoading,\n    poolsLoading,\n    error: searchResults.error,\n  }\n}\n\nexport default useFetchSearchResults\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@glide-finance/uikit'\n\nconst BAD_SRCS: string[] = []\n\nexport interface LogoLoaderProps {\n  alt: string\n  src: string\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback to HelpIcon\n */\nconst LogoLoader: React.FC<LogoLoaderProps> = ({ src, alt, ...rest }) => {\n  const [, refresh] = useState(0)\n\n  const srcFailedLoading = BAD_SRCS.includes(src)\n\n  if (src && !srcFailedLoading) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS.push(src)\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default LogoLoader\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { BASE_URL } from 'config'\nimport LogoLoader from './LogoLoader'\n\nconst StyledLogo = styled(LogoLoader)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  background-color: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.text};\n`\n\nexport const CurrencyLogo: React.FC<{\n  address?: string\n  size?: string\n}> = ({ address, size = '24px', ...rest }) => {\n  const src = useMemo(() => {\n    const checksummedAddress = isAddress(address)\n    if (checksummedAddress) {\n      // return `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${checksummedAddress}/logo.png`\n      return `${BASE_URL}/images/tokens/${checksummedAddress}.png`\n    }\n    return null\n  }, [address])\n\n  return <StyledLogo size={size} src={src} alt=\"token logo\" {...rest} />\n}\n\nconst DoubleCurrencyWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 32px;\n`\n\ninterface DoubleCurrencyLogoProps {\n  address0?: string\n  address1?: string\n  size?: number\n}\n\nexport const DoubleCurrencyLogo: React.FC<DoubleCurrencyLogoProps> = ({ address0, address1, size = 16 }) => {\n  return (\n    <DoubleCurrencyWrapper>\n      {address0 && <CurrencyLogo address={address0} size={`${size.toString()}px`} />}\n      {address1 && <CurrencyLogo address={address1} size={`${size.toString()}px`} />}\n    </DoubleCurrencyWrapper>\n  )\n}\n","import numeral from 'numeral'\n\n// Returns first 2 digits after first non-zero decimal\n// i.e. 0.001286 -> 0.0012, 0.9845 -> 0.98, 0.0102 -> 0.010, etc\n// Intended to be used for tokens whose value is less than $1\n// https://stackoverflow.com/a/23887837\nexport const getFirstThreeNonZeroDecimals = (value: number) => {\n  return value.toFixed(11).match(/^-?\\d*\\.?0*\\d{0,2}/)[0]\n}\n\n/**\n * This function is used to format token prices, liquidity, amount of tokens in TX, and in general any numbers on info section\n * @param amount - amount to be formatted\n * @param notation - whether to show 1M or 1,000,000\n * @param displayThreshold - threshold below which it will return simply <displayThreshold instead of actual value, e.g. if 0.001 -> returns <0.001 for 0.0005\n * @param tokenPrecision - set to true when you want precision to be 3 decimals for values < 1 and 2 decimals for values > 1\n * @param isInteger - if true the values will contain decimal part only if the amount is > 1000\n * @returns formatted string ready to be displayed\n */\nexport const formatAmount = (\n  amount: number | undefined,\n  options?: {\n    notation?: 'compact' | 'standard'\n    displayThreshold?: number\n    tokenPrecision?: boolean\n    isInteger?: boolean\n  },\n) => {\n  const { notation = 'compact', displayThreshold, tokenPrecision, isInteger } = options || { notation: 'compact' }\n  if (amount === 0) {\n    if (isInteger) {\n      return '0'\n    }\n    return '0.00'\n  }\n  if (!amount) return '-'\n  if (displayThreshold && amount < displayThreshold) {\n    return `<${displayThreshold}`\n  }\n  if (amount < 1 && !tokenPrecision) {\n    return getFirstThreeNonZeroDecimals(amount)\n  }\n\n  let precision = 2\n  if (tokenPrecision) {\n    precision = amount < 1 ? 3 : 2\n  }\n\n  let format = `0.${'0'.repeat(precision)}a`\n\n  if (notation === 'standard') {\n    format = `0,0.${'0'.repeat(precision)}`\n  }\n\n  if (isInteger && amount < 1000) {\n    format = '0'\n  }\n\n  const amountWithPrecision = parseFloat(amount.toFixed(precision))\n\n  // toUpperCase is needed cause numeral doesn't have support for capital K M B out of the box\n  return numeral(amountWithPrecision).format(format).toUpperCase()\n}\n","import React, { HTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { StarFillIcon, StarLineIcon } from '@glide-finance/uikit'\nimport useTheme from 'hooks/useTheme'\n\nconst HoverIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst SaveIcon: React.FC<{ fill: boolean } & HTMLAttributes<HTMLDivElement>> = ({ fill = false, ...rest }) => {\n  const { theme } = useTheme()\n  return (\n    <HoverIcon {...rest}>\n      {fill ? (\n        <StarFillIcon stroke={theme.colors.warning} color={theme.colors.warning} />\n      ) : (\n        <StarLineIcon stroke={theme.colors.textDisabled} />\n      )}\n    </HoverIcon>\n  )\n}\n\nexport default SaveIcon\n","import React, { useRef, useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Skeleton, useMatchBreakpoints } from '@glide-finance/uikit'\nimport useFetchSearchResults from 'state/info/queries/search'\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { useWatchlistTokens, useWatchlistPools } from 'state/user/hooks'\nimport SaveIcon from 'views/Info/components/SaveIcon'\nimport { useHistory } from 'react-router-dom'\nimport { usePoolDatas, useTokenDatas } from 'state/info/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useDebounce from 'hooks/useDebounce'\nimport { MINIMUM_SEARCH_CHARACTERS } from 'config/constants/info'\nimport { PoolData } from 'state/info/types'\n\nconst Container = styled.div`\n  position: relative;\n  z-index: 30;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  z-index: 9999;\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n`\n\nconst Menu = styled.div<{ hide: boolean }>`\n  display: flex;\n  flex-direction: column;\n  z-index: 9999;\n  width: 100%;\n  top: 50px;\n  max-height: 400px;\n  overflow: auto;\n  right: 0;\n  padding: 1.5rem;\n  padding-bottom: 2.5rem;\n  position: absolute;\n  background: ${({ theme }) => theme.colors.background};\n  border-radius: 8px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.04);\n  display: ${({ hide }) => hide && 'none'};\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\n  margin-top: 4px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    width: 500px;\n    max-height: 600px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-top: 0;\n    width: 800px;\n    max-height: 600px;\n  }\n`\n\nconst Blackout = styled.div`\n  position: absolute;\n  min-height: 100vh;\n  width: 100vw;\n  z-index: 10;\n  background-color: black;\n  opacity: 0.7;\n  left: 0;\n  top: 0;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1fr;\n  margin: 8px 0;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1.5fr repeat(3, 1fr);\n  }\n`\n\nconst Break = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  width: 100%;\n  margin: 16px 0;\n`\n\nconst HoverText = styled.div<{ hide: boolean }>`\n  color: ${({ theme }) => theme.colors.secondary};\n  display: ${({ hide }) => (hide ? 'none' : 'block')};\n  margin-top: 16px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst HoverRowLink = styled.div`\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst OptionButton = styled.div<{ enabled: boolean }>`\n  width: fit-content;\n  padding: 4px 8px;\n  border-radius: 8px;\n  display: flex;\n  font-size: 12px;\n  font-weight: 600;\n  margin-right: 10px;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme, enabled }) => (enabled ? theme.colors.primary : 'transparent')};\n  color: ${({ theme, enabled }) => (enabled ? theme.card.background : theme.colors.secondary)};\n  :hover {\n    opacity: 0.6;\n    cursor: pointer;\n  }\n`\ntype BasicTokenData = {\n  address: string\n  symbol: string\n  name: string\n}\nconst tokenIncludesSearchTerm = (token: BasicTokenData, value: string) => {\n  return (\n    token.address.toLowerCase().includes(value.toLowerCase()) ||\n    token.symbol.toLowerCase().includes(value.toLowerCase()) ||\n    token.name.toLowerCase().includes(value.toLowerCase())\n  )\n}\n\nconst poolIncludesSearchTerm = (pool: PoolData, value: string) => {\n  return (\n    pool.address.toLowerCase().includes(value.toLowerCase()) ||\n    tokenIncludesSearchTerm(pool.token0, value) ||\n    tokenIncludesSearchTerm(pool.token1, value)\n  )\n}\n\nconst Search = () => {\n  const history = useHistory()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const menuRef = useRef<HTMLDivElement>(null)\n  const showMoreRef = useRef<HTMLDivElement>(null)\n\n  const [showMenu, setShowMenu] = useState(false)\n  const [value, setValue] = useState('')\n  const debouncedSearchTerm = useDebounce(value, 600)\n\n  const { tokens, pools, tokensLoading, poolsLoading, error } = useFetchSearchResults(debouncedSearchTerm)\n\n  const [tokensShown, setTokensShown] = useState(3)\n  const [poolsShown, setPoolsShown] = useState(3)\n\n  useEffect(() => {\n    setTokensShown(3)\n    setPoolsShown(3)\n  }, [debouncedSearchTerm])\n\n  const handleOutsideClick = (e: any) => {\n    const menuClick = menuRef.current && menuRef.current.contains(e.target)\n    const inputCLick = inputRef.current && inputRef.current.contains(e.target)\n    const showMoreClick = showMoreRef.current && showMoreRef.current.contains(e.target)\n\n    if (!menuClick && !inputCLick && !showMoreClick) {\n      setPoolsShown(3)\n      setTokensShown(3)\n      setShowMenu(false)\n    }\n  }\n\n  useEffect(() => {\n    if (showMenu) {\n      document.addEventListener('click', handleOutsideClick)\n      document.querySelector('body').style.overflow = 'hidden'\n    } else {\n      document.removeEventListener('click', handleOutsideClick)\n      document.querySelector('body').style.overflow = 'visible'\n    }\n\n    return () => {\n      document.removeEventListener('click', handleOutsideClick)\n    }\n  }, [showMenu])\n\n  // watchlist\n  const [savedTokens, addSavedToken] = useWatchlistTokens()\n  const [savedPools, addSavedPool] = useWatchlistPools()\n\n  const handleItemClick = (to: string) => {\n    setShowMenu(false)\n    setPoolsShown(3)\n    setTokensShown(3)\n    history.push(to)\n  }\n\n  // get date for watchlist\n  const watchListTokenData = useTokenDatas(savedTokens)\n  const watchListTokenLoading = watchListTokenData.length !== savedTokens.length\n  const watchListPoolData = usePoolDatas(savedPools)\n  const watchListPoolLoading = watchListPoolData.length !== savedPools.length\n\n  // filter on view\n  const [showWatchlist, setShowWatchlist] = useState(false)\n  const tokensForList = useMemo(() => {\n    if (showWatchlist) {\n      return watchListTokenData.filter((token) => tokenIncludesSearchTerm(token, value))\n    }\n    return tokens.sort((t0, t1) => (t0.volumeUSD > t1.volumeUSD ? -1 : 1))\n  }, [showWatchlist, tokens, watchListTokenData, value])\n\n  const poolForList = useMemo(() => {\n    if (showWatchlist) {\n      return watchListPoolData.filter((pool) => poolIncludesSearchTerm(pool, value))\n    }\n    return pools.sort((p0, p1) => (p0.volumeUSD > p1.volumeUSD ? -1 : 1))\n  }, [pools, showWatchlist, watchListPoolData, value])\n\n  const contentUnderTokenList = () => {\n    const isLoading = showWatchlist ? watchListTokenLoading : tokensLoading\n    const noTokensFound =\n      tokensForList.length === 0 && !isLoading && debouncedSearchTerm.length >= MINIMUM_SEARCH_CHARACTERS\n    const noWatchlistTokens = tokensForList.length === 0 && !isLoading\n    const showMessage = showWatchlist ? noWatchlistTokens : noTokensFound\n    const noTokensMessage = showWatchlist ? t('Saved tokens will appear here') : t('No results')\n    return (\n      <>\n        {isLoading && <Skeleton />}\n        {showMessage && <Text>{noTokensMessage}</Text>}\n        {!showWatchlist && debouncedSearchTerm.length < MINIMUM_SEARCH_CHARACTERS && (\n          <Text>{t('Search pools or tokens')}</Text>\n        )}\n      </>\n    )\n  }\n\n  const contentUnderPoolList = () => {\n    const isLoading = showWatchlist ? watchListPoolLoading : poolsLoading\n    const noPoolsFound =\n      poolForList.length === 0 && !poolsLoading && debouncedSearchTerm.length >= MINIMUM_SEARCH_CHARACTERS\n    const noWatchlistPools = poolForList.length === 0 && !isLoading\n    const showMessage = showWatchlist ? noWatchlistPools : noPoolsFound\n    const noPoolsMessage = showWatchlist ? t('Saved tokens will appear here') : t('No results')\n    return (\n      <>\n        {isLoading && <Skeleton />}\n        {showMessage && <Text>{noPoolsMessage}</Text>}\n        {!showWatchlist && debouncedSearchTerm.length < MINIMUM_SEARCH_CHARACTERS && (\n          <Text>{t('Search pools or tokens')}</Text>\n        )}\n      </>\n    )\n  }\n\n  return (\n    <>\n      {showMenu ? <Blackout /> : null}\n      <Container>\n        <StyledInput\n          type=\"text\"\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value)\n          }}\n          placeholder={t('Search pools or tokens')}\n          ref={inputRef}\n          onFocus={() => {\n            setShowMenu(true)\n          }}\n        />\n        <Menu hide={!showMenu} ref={menuRef}>\n          <Flex mb=\"16px\">\n            <OptionButton enabled={!showWatchlist} onClick={() => setShowWatchlist(false)}>\n              {t('Search')}\n            </OptionButton>\n            <OptionButton enabled={showWatchlist} onClick={() => setShowWatchlist(true)}>\n              {t('Watchlist')}\n            </OptionButton>\n          </Flex>\n          {error && <Text color=\"failure\">{t('Error occurred, please try again')}</Text>}\n\n          <ResponsiveGrid>\n            <Text bold color=\"secondary\">\n              {t('Tokens')}\n            </Text>\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Price')}\n              </Text>\n            )}\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Volume 24H')}\n              </Text>\n            )}\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Liquidity')}\n              </Text>\n            )}\n          </ResponsiveGrid>\n          {tokensForList.slice(0, tokensShown).map((token, i) => {\n            return (\n              // eslint-disable-next-line react/no-array-index-key\n              <HoverRowLink onClick={() => handleItemClick(`/info/token/${token.address}`)} key={i}>\n                <ResponsiveGrid>\n                  <Flex>\n                    <CurrencyLogo address={token.address} />\n                    <Text ml=\"10px\">\n                      <Text>{`${token.name} (${token.symbol})`}</Text>\n                    </Text>\n                    <SaveIcon\n                      id=\"watchlist-icon\"\n                      style={{ marginLeft: '8px' }}\n                      fill={savedTokens.includes(token.address)}\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        addSavedToken(token.address)\n                      }}\n                    />\n                  </Flex>\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(token.priceUSD)}</Text>}\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(token.volumeUSD)}</Text>}\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(token.liquidityUSD)}</Text>}\n                </ResponsiveGrid>\n              </HoverRowLink>\n            )\n          })}\n          {contentUnderTokenList()}\n          <HoverText\n            onClick={() => {\n              setTokensShown(tokensShown + 5)\n            }}\n            hide={tokensForList.length <= tokensShown}\n            ref={showMoreRef}\n          >\n            {t('See more...')}\n          </HoverText>\n\n          <Break />\n          <ResponsiveGrid>\n            <Text bold color=\"secondary\" mb=\"8px\">\n              {t('Pools')}\n            </Text>\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Volume 24H')}\n              </Text>\n            )}\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Volume 7D')}\n              </Text>\n            )}\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Liquidity')}\n              </Text>\n            )}\n          </ResponsiveGrid>\n          {poolForList.slice(0, poolsShown).map((p, i) => {\n            return (\n              // eslint-disable-next-line react/no-array-index-key\n              <HoverRowLink onClick={() => handleItemClick(`/info/pool/${p.address}`)} key={i}>\n                <ResponsiveGrid>\n                  <Flex>\n                    <DoubleCurrencyLogo address0={p.token0.address} address1={p.token1.address} />\n                    <Text ml=\"10px\" style={{ whiteSpace: 'nowrap' }}>\n                      <Text>{`${p.token0.symbol} / ${p.token1.symbol}`}</Text>\n                    </Text>\n                    <SaveIcon\n                      id=\"watchlist-icon\"\n                      style={{ marginLeft: '10px' }}\n                      fill={savedPools.includes(p.address)}\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        addSavedPool(p.address)\n                      }}\n                    />\n                  </Flex>\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(p.volumeUSD)}</Text>}\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(p.volumeUSDWeek)}</Text>}\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(p.liquidityUSD)}</Text>}\n                </ResponsiveGrid>\n              </HoverRowLink>\n            )\n          })}\n          {contentUnderPoolList()}\n          <HoverText\n            onClick={() => {\n              setPoolsShown(poolsShown + 5)\n            }}\n            hide={poolForList.length <= poolsShown}\n            ref={showMoreRef}\n          >\n            {t('See more...')}\n          </HoverText>\n        </Menu>\n      </Container>\n    </>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport { Box, Flex, ButtonMenu, ButtonMenuItem } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Search from 'views/Info/components/InfoSearch'\n\nconst NavWrapper = styled(Flex)`\n  background: ${({ theme }) => theme.colors.gradients.cardHeader};\n  justify-content: space-between;\n  padding: 20px 16px;\n  margin: 0 24px 16px 24px;\n  flex-direction: column;\n  gap: 8px;\n  border-radius: 16px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 20px 40px;\n    flex-direction: row;\n  }\n`\n\nconst InfoNav = () => {\n  const { t } = useTranslation()\n  const isPools = useRouteMatch(['/info/pools', '/info/pool', '/info/pair'])\n  const isTokens = useRouteMatch(['/info/tokens', '/info/token'])\n  let activeIndex = 0\n  if (isPools) {\n    activeIndex = 1\n  }\n  if (isTokens) {\n    activeIndex = 2\n  }\n  return (\n    <NavWrapper>\n      <Box>\n        <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem as={Link} to=\"/info\">\n            {t('Overview')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={Link} to=\"/info/pools\">\n            {t('Pools')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={Link} to=\"/info/tokens\">\n            {t('Tokens')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Box>\n      <Box width={['100%', '100%', '250px']}>\n        <Search />\n      </Box>\n    </NavWrapper>\n  )\n}\n\nexport default InfoNav\n","import React from 'react'\nimport { Svg, SvgProps } from '@glide-finance/uikit'\n\nconst LineChartLoaderSVG: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"100%\" height=\"100%\" preserveAspectRatio=\"none\" viewBox=\"0 0 100 50\" {...props}>\n      <path\n        d=\"M 0 49 C 1 49 1 45 4 47 C 7 49 7 35 11 37 C 13 38 14 32 16 34 C 18 35.6667 20 40 22 39 C 24 38 24 34 26 34 C 27 34 29 39 32 36 C 33 35 34 32 35 32 C 37 32 37 35 39 34 C 40 33 39 29 43 31 C 46 32 45 28 47 30 C 50 32 49 22 51 24 Q 53 26 55 24 C 56 23 56 25 57 26 C 58 27 59 28 60 28 C 63 28 66 17 67 16 C 68 15 69 17 70 16 C 71 15 71 13 74 13 C 76 13 76 14 77 15 C 79 17 80 18 82 18 C 83 18 83 17 84 17 C 87 17 89 24 91 24 C 93 24 95 20 96 17 C 97.6667 13.3333 98 9 101 6\"\n        stroke=\"#7645D9\"\n        strokeWidth=\"0.2\"\n        strokeDasharray=\"156\"\n        strokeDashoffset=\"156\"\n        fill=\"transparent\"\n        opacity=\"0.5\"\n        filter=\"url(#glow)\"\n      >\n        <animate\n          id=\"firstline\"\n          attributeName=\"stroke-dashoffset\"\n          dur=\"2s\"\n          from=\"156\"\n          to=\"-156\"\n          begin=\"0s;firstline.end+0.5s\"\n        />\n      </path>\n      <path\n        d=\"M 0 49 C 1 49 1 45 4 47 C 7 49 7 35 11 37 C 13 38 14 32 16 34 C 18 35.6667 20 40 22 39 C 24 38 24 34 26 34 C 27 34 29 39 32 36 C 33 35 34 32 35 32 C 37 32 37 35 39 34 C 40 33 39 29 43 31 C 46 32 45 28 47 30 C 50 32 49 22 51 24 Q 53 26 55 24 C 56 23 56 25 57 26 C 58 27 59 28 60 28 C 63 28 66 17 67 16 C 68 15 69 17 70 16 C 71 15 71 13 74 13 C 76 13 76 14 77 15 C 79 17 80 18 82 18 C 83 18 83 17 84 17 C 87 17 89 24 91 24 C 93 24 95 20 96 17 C 97.6667 13.3333 98 9 101 6\"\n        stroke=\"#7645D9\"\n        strokeWidth=\"0.2\"\n        strokeDasharray=\"156\"\n        strokeDashoffset=\"156\"\n        fill=\"transparent\"\n        opacity=\"0.5\"\n        filter=\"url(#glow)\"\n      >\n        <animate\n          id=\"secondline\"\n          attributeName=\"stroke-dashoffset\"\n          dur=\"2s\"\n          from=\"156\"\n          to=\"-156\"\n          begin=\"1.3s;secondline.end+0.5s\"\n        />\n      </path>\n      <defs>\n        <filter id=\"glow\">\n          <feGaussianBlur className=\"blur\" result=\"coloredBlur\" stdDeviation=\"4\" />\n          <feMerge>\n            <feMergeNode in=\"coloredBlur\" />\n            <feMergeNode in=\"coloredBlur\" />\n            <feMergeNode in=\"coloredBlur\" />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </defs>\n    </Svg>\n  )\n}\n\nexport default LineChartLoaderSVG\n","import React from 'react'\nimport { Svg, SvgProps } from '@glide-finance/uikit'\n\nconst BarChartLoaderSVG: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 50 25\" preserveAspectRatio=\"none\" opacity=\"0.1\" {...props}>\n      <rect width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.9s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.9s\"\n        />\n      </rect>\n      <rect x=\"10.222%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.8s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.8s\"\n        />\n      </rect>\n      <rect x=\"20.444%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.7s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.7s\"\n        />\n      </rect>\n      <rect x=\"30.666%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.6s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.6s\"\n        />\n      </rect>\n      <rect x=\"40.888%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.5s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.5s\"\n        />\n      </rect>\n      <rect x=\"51.11%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.4s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.4s\"\n        />\n      </rect>\n      <rect x=\"61.332%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.3s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.3s\"\n        />\n      </rect>\n      <rect x=\"71.554%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.2s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.2s\"\n        />\n      </rect>\n      <rect x=\"81.776%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.1s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.1s\"\n        />\n      </rect>\n      <rect x=\"91.998%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate attributeName=\"y\" dur=\"0.9s\" values=\"85%; 10%; 85%\" keyTimes=\"0; 0.55; 1\" repeatCount=\"indefinite\" />\n      </rect>\n    </Svg>\n  )\n}\n\nexport default BarChartLoaderSVG\n","import React from 'react'\nimport { Svg, SvgProps } from '@glide-finance/uikit'\n\nconst CandleChartLoaderSVG: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 50\" opacity=\"0.1\" {...props}>\n      <rect width=\"5%\" fill=\"#31D0AA\">\n        <animate\n          attributeName=\"height\"\n          dur=\"2s\"\n          values=\"0%; 40%; 40%; 10%; 10%\"\n          keyTimes=\"0; 0.125; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"2s\"\n          from=\"50%\"\n          to=\"30%\"\n          values=\"30%; 10%; 10%; 25%; 25%\"\n          keyTimes=\"0; 0.125; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"rx\"\n          dur=\"2s\"\n          values=\"0%; 0%; 100%; 100%;\"\n          keyTimes=\"0; 0.6; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"x\"\n          dur=\"2s\"\n          values=\"32.5%; 32.5%; 47.5%; 47.5%;\"\n          keyTimes=\"0; 0.7; 0.8; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"opacity\"\n          dur=\"2s\"\n          values=\"1; 1; 0; 0;\"\n          keyTimes=\"0; 0.75; 0.9; 1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n      <rect width=\"5%\" fill=\"#31D0AA\">\n        <animate\n          attributeName=\"height\"\n          dur=\"2s\"\n          values=\"0%; 0%; 20%; 20%; 10%; 10%\"\n          keyTimes=\"0; 0.125; 0.25; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"2s\"\n          values=\"15%; 15%; 5%; 5%; 25%; 25%\"\n          keyTimes=\"0; 0.125; 0.25; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"rx\"\n          dur=\"2s\"\n          values=\"0%; 0%; 100%; 100%;\"\n          keyTimes=\"0; 0.6; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"x\"\n          dur=\"2s\"\n          values=\"42.5%; 42.5%; 47.5%; 47.5%;\"\n          keyTimes=\"0; 0.7; 0.8; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"opacity\"\n          dur=\"2s\"\n          values=\"1; 1; 0; 0;\"\n          keyTimes=\"0; 0.75; 0.9; 1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n      <rect width=\"5%\" fill=\"#ED4B9E\">\n        <animate\n          attributeName=\"height\"\n          dur=\"2s\"\n          values=\"0%; 0%; 35%; 35%; 10%; 10%\"\n          keyTimes=\"0; 0.25; 0.375; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"2s\"\n          values=\"25%; 25%; 10%; 10%; 25%; 25%\"\n          keyTimes=\"0; 0.25; 0.375; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"rx\"\n          dur=\"2s\"\n          values=\"0%; 0%; 100%; 100%;\"\n          keyTimes=\"0; 0.6; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"x\"\n          dur=\"2s\"\n          values=\"52.5%; 52.5%; 47.5%; 47.5%;\"\n          keyTimes=\"0; 0.7; 0.8; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"opacity\"\n          dur=\"2s\"\n          values=\"1; 1; 0; 0;\"\n          keyTimes=\"0; 0.75; 0.9; 1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n      <rect width=\"5%\" fill=\"#31D0AA\">\n        <animate\n          attributeName=\"height\"\n          dur=\"2s\"\n          values=\"0%; 0%; 35%; 35%; 10%; 10%\"\n          keyTimes=\"0; 0.375; 0.5; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"2s\"\n          values=\"15%; 15%; 0%; 0%; 25%; 25%\"\n          keyTimes=\"0; 0.375; 0.5; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"rx\"\n          dur=\"2s\"\n          values=\"0%; 0%; 100%; 100%;\"\n          keyTimes=\"0; 0.6; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"x\"\n          dur=\"2s\"\n          values=\"62.5%; 62.5%; 47.5%; 47.5%;\"\n          keyTimes=\"0; 0.7; 0.8; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"opacity\"\n          dur=\"2s\"\n          values=\"1; 1; 0; 0;\"\n          keyTimes=\"0; 0.75; 0.9; 1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n    </Svg>\n  )\n}\n\nexport default CandleChartLoaderSVG\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport LineChartLoaderSVG from './LineChartLoaderSVG'\nimport BarChartLoaderSVG from './BarChartLoaderSVG'\nimport CandleChartLoaderSVG from './CandleChartLoaderSVG'\n\nconst LoadingText = styled(Box)`\n  position: absolute;\n  margin-left: auto;\n  margin-right: auto;\n  top: 50%;\n  left: 0;\n  right: 0;\n  text-align: center;\n`\n\nconst LoadingIndicator = styled(Box)`\n  height: 100%;\n  position: relative;\n`\n\nexport const BarChartLoader: React.FC = () => {\n  const { t } = useTranslation()\n  return (\n    <LoadingIndicator>\n      <BarChartLoaderSVG />\n      <LoadingText>\n        <Text color=\"textSubtle\" fontSize=\"20px\">\n          {t('Loading chart data...')}\n        </Text>\n      </LoadingText>\n    </LoadingIndicator>\n  )\n}\n\nexport const LineChartLoader: React.FC = () => {\n  const { t } = useTranslation()\n  return (\n    <LoadingIndicator>\n      <LineChartLoaderSVG />\n      <LoadingText>\n        <Text color=\"textSubtle\" fontSize=\"20px\">\n          {t('Loading chart data...')}\n        </Text>\n      </LoadingText>\n    </LoadingIndicator>\n  )\n}\n\nexport const CandleChartLoader: React.FC = () => {\n  const { t } = useTranslation()\n  return (\n    <LoadingIndicator>\n      <CandleChartLoaderSVG />\n      <LoadingText>\n        <Text color=\"textSubtle\" fontSize=\"20px\">\n          {t('Loading chart data...')}\n        </Text>\n      </LoadingText>\n    </LoadingIndicator>\n  )\n}\n","import React, { useEffect, Dispatch, SetStateAction } from 'react'\nimport { format } from 'date-fns'\nimport { ResponsiveContainer, XAxis, YAxis, Tooltip, AreaChart, Area } from 'recharts'\nimport useTheme from 'hooks/useTheme'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { LineChartLoader } from 'views/Info/components/ChartLoaders'\n\nexport type LineChartProps = {\n  data: any[]\n  setHoverValue: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setHoverDate: Dispatch<SetStateAction<string | undefined>> // used for label of value\n} & React.HTMLAttributes<HTMLDivElement>\n\n// Calls setHoverValue and setHoverDate when part of chart is hovered\n// Note: this NEEDs to be wrapped inside component and useEffect, if you plug it as is it will create big render problems (try and see console)\nconst HoverUpdater = ({ payload, setHoverValue, setHoverDate }) => {\n  useEffect(() => {\n    setHoverValue(payload.value)\n    setHoverDate(format(payload.time, 'MMM d, yyyy'))\n  }, [payload.value, payload.time, setHoverValue, setHoverDate])\n\n  return null\n}\n\n/**\n * Note: remember that it needs to be mounted inside the container with fixed height\n */\nconst LineChart = ({ data, setHoverValue, setHoverDate }: LineChartProps) => {\n  const { theme } = useTheme()\n  if (!data || data.length === 0) {\n    return <LineChartLoader />\n  }\n  return (\n    <ResponsiveContainer>\n      <AreaChart\n        data={data}\n        width={300}\n        height={308}\n        margin={{\n          top: 5,\n          right: 15,\n          left: 0,\n          bottom: 5,\n        }}\n        onMouseLeave={() => {\n          if (setHoverDate) setHoverDate(undefined)\n          if (setHoverValue) setHoverValue(undefined)\n        }}\n      >\n        <defs>\n          <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor={theme.colors.inputSecondary} stopOpacity={0.5} />\n            <stop offset=\"100%\" stopColor={theme.colors.secondary} stopOpacity={0} />\n          </linearGradient>\n        </defs>\n        <XAxis\n          dataKey=\"time\"\n          axisLine={false}\n          tickLine={false}\n          tickFormatter={(time) => format(time, 'dd')}\n          minTickGap={10}\n        />\n        <YAxis\n          dataKey=\"value\"\n          tickCount={6}\n          scale=\"linear\"\n          axisLine={false}\n          tickLine={false}\n          fontSize=\"12px\"\n          tickFormatter={(val) => `$${formatAmount(val)}`}\n          orientation=\"right\"\n          tick={{ dx: 10, fill: theme.colors.textSubtle }}\n        />\n        <Tooltip\n          cursor={{ stroke: theme.colors.secondary }}\n          contentStyle={{ display: 'none' }}\n          formatter={(tooltipValue, name, props) => (\n            <HoverUpdater payload={props.payload} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n          )}\n        />\n        <Area dataKey=\"value\" type=\"monotone\" stroke={theme.colors.secondary} fill=\"url(#gradient)\" strokeWidth={2} />\n      </AreaChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default LineChart\n","import React from 'react'\nimport { Text, TextProps } from '@glide-finance/uikit'\n\nexport interface PercentProps extends TextProps {\n  value: number | undefined\n}\n\nconst Percent: React.FC<PercentProps> = ({ value, ...rest }) => {\n  if (!value || Number.isNaN(value)) {\n    return <Text {...rest}>-</Text>\n  }\n\n  const isNegative = value < 0\n\n  return (\n    <Text {...rest} color={isNegative ? 'failure' : 'success'}>\n      {isNegative ? '↓' : '↑'}\n      {Math.abs(value).toFixed(2)}%\n    </Text>\n  )\n}\n\nexport default Percent\n","import styled from 'styled-components'\nimport { Text, Flex } from '@glide-finance/uikit'\n\nexport const ClickableColumnHeader = styled(Text)`\n  cursor: pointer;\n`\n\nexport const TableWrapper = styled(Flex)`\n  width: 100%;\n  padding-top: 16px;\n  flex-direction: column;\n  gap: 16px;\n  background-color: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nexport const PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.2em;\n  margin-bottom: 1.2em;\n`\n\nexport const Arrow = styled.div`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 20px;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Break = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  width: 100%;\n`\n","import React, { useState, useMemo, useCallback, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box, Skeleton, useMatchBreakpoints, ArrowBackIcon, ArrowForwardIcon } from '@glide-finance/uikit'\nimport { TokenData } from 'state/info/types'\nimport { Link } from 'react-router-dom'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport { useTranslation } from 'contexts/Localization'\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared'\n\n/**\n *  Columns on different layouts\n *  6 = | # | Name | Price | Price Change | Volume 24H | TVL |\n *  5 = | # | Name | Price |              | Volume 24H | TVL |\n *  4 = | # | Name | Price |              | Volume 24H |     |\n *  2 = |   | Name |       |              | Volume 24H |     |\n *  On smallest screen Name is reduced to just symbol\n */\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  padding: 0 24px;\n\n  grid-template-columns: 20px 3fr repeat(4, 1fr);\n\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 2fr repeat(3, 1fr);\n    & :nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 20px 2fr repeat(2, 1fr);\n    & :nth-child(6) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 670px) {\n    grid-template-columns: 1fr 1fr;\n    > *:first-child {\n      display: none;\n    }\n    > *:nth-child(3) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst ResponsiveLogo = styled(CurrencyLogo)`\n  @media screen and (max-width: 670px) {\n    width: 16px;\n    height: 16px;\n  }\n`\n\nconst TableLoader: React.FC = () => {\n  const loadingRow = (\n    <ResponsiveGrid>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </ResponsiveGrid>\n  )\n  return (\n    <>\n      {loadingRow}\n      {loadingRow}\n      {loadingRow}\n    </>\n  )\n}\n\nconst DataRow: React.FC<{ tokenData: TokenData; index: number }> = ({ tokenData, index }) => {\n  const { isXs, isSm } = useMatchBreakpoints()\n  return (\n    <LinkWrapper to={`/info/token/${tokenData.address}`}>\n      <ResponsiveGrid>\n        <Flex>\n          <Text>{index + 1}</Text>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ResponsiveLogo address={tokenData.address} />\n          {(isXs || isSm) && <Text ml=\"8px\">{tokenData.symbol}</Text>}\n          {!isXs && !isSm && (\n            <Flex marginLeft=\"10px\">\n              <Text>{tokenData.name}</Text>\n              <Text ml=\"8px\">({tokenData.symbol})</Text>\n            </Flex>\n          )}\n        </Flex>\n        <Text fontWeight={400}>${formatAmount(tokenData.priceUSD, { notation: 'standard' })}</Text>\n        <Text fontWeight={400}>\n          <Percent value={tokenData.priceUSDChange} fontWeight={400} />\n        </Text>\n        <Text fontWeight={400}>${formatAmount(tokenData.volumeUSD)}</Text>\n        <Text fontWeight={400}>${formatAmount(tokenData.liquidityUSD)}</Text>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\nconst SORT_FIELD = {\n  name: 'name',\n  volumeUSD: 'volumeUSD',\n  tvlUSD: 'tvlUSD',\n  priceUSD: 'priceUSD',\n  priceUSDChange: 'priceUSDChange',\n  priceUSDChangeWeek: 'priceUSDChangeWeek',\n}\n\nconst MAX_ITEMS = 10\n\nconst TokenTable: React.FC<{\n  tokenDatas: TokenData[] | undefined\n  maxItems?: number\n}> = ({ tokenDatas, maxItems = MAX_ITEMS }) => {\n  const [sortField, setSortField] = useState(SORT_FIELD.volumeUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  const { t } = useTranslation()\n\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (tokenDatas) {\n      if (tokenDatas.length % maxItems === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(tokenDatas.length / maxItems) + extraPages)\n    }\n  }, [maxItems, tokenDatas])\n\n  const sortedTokens = useMemo(() => {\n    return tokenDatas\n      ? tokenDatas\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof TokenData] > b[sortField as keyof TokenData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            }\n            return -1\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [tokenDatas, maxItems, page, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  if (!tokenDatas) {\n    return <Skeleton />\n  }\n\n  return (\n    <TableWrapper>\n      <ResponsiveGrid>\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          #\n        </Text>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.name)}\n          textTransform=\"uppercase\"\n        >\n          {t('Name')} {arrow(SORT_FIELD.name)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.priceUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Price')} {arrow(SORT_FIELD.priceUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.priceUSDChange)}\n          textTransform=\"uppercase\"\n        >\n          {t('Price Change')} {arrow(SORT_FIELD.priceUSDChange)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 24H')} {arrow(SORT_FIELD.volumeUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.tvlUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Liquidity')} {arrow(SORT_FIELD.tvlUSD)}\n        </ClickableColumnHeader>\n      </ResponsiveGrid>\n\n      <Break />\n      {sortedTokens.length > 0 ? (\n        <>\n          {sortedTokens.map((data, i) => {\n            if (data) {\n              return (\n                <React.Fragment key={data.address}>\n                  <DataRow index={(page - 1) * MAX_ITEMS + i} tokenData={data} />\n                  <Break />\n                </React.Fragment>\n              )\n            }\n            return null\n          })}\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n            </Arrow>\n            <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n            <Arrow\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n            </Arrow>\n          </PageButtons>\n        </>\n      ) : (\n        <>\n          <TableLoader />\n          <Box />\n        </>\n      )}\n    </TableWrapper>\n  )\n}\n\nexport default TokenTable\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Text, Flex, Box, Skeleton, ArrowBackIcon, ArrowForwardIcon } from '@glide-finance/uikit'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { PoolData } from 'state/info/types'\nimport { ITEMS_PER_INFO_TABLE_PAGE } from 'config/constants/info'\nimport { DoubleCurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { useTranslation } from 'contexts/Localization'\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared'\n\n/**\n *  Columns on different layouts\n *  5 = | # | Pool | TVL | Volume 24H | Volume 7D |\n *  4 = | # | Pool |     | Volume 24H | Volume 7D |\n *  3 = | # | Pool |     | Volume 24H |           |\n *  2 = |   | Pool |     | Volume 24H |           |\n */\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n  grid-template-columns: 20px 3.5fr repeat(5, 1fr);\n\n  padding: 0 24px;\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 1.5fr repeat(3, 1fr);\n    & :nth-child(4),\n    & :nth-child(5) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 20px 1.5fr repeat(1, 1fr);\n    & :nth-child(4),\n    & :nth-child(5),\n    & :nth-child(6),\n    & :nth-child(7) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 480px) {\n    grid-template-columns: 2.5fr repeat(1, 1fr);\n    > *:nth-child(1) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst SORT_FIELD = {\n  volumeUSD: 'volumeUSD',\n  tvlUSD: 'tvlUSD',\n  volumeUSDWeek: 'volumeUSDWeek',\n  lpFees24h: 'lpFees24h',\n  lpApr7d: 'lpApr7d',\n}\n\nconst LoadingRow: React.FC = () => (\n  <ResponsiveGrid>\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n  </ResponsiveGrid>\n)\n\nconst TableLoader: React.FC = () => (\n  <>\n    <LoadingRow />\n    <LoadingRow />\n    <LoadingRow />\n  </>\n)\n\nconst DataRow = ({ poolData, index }: { poolData: PoolData; index: number }) => {\n  return (\n    <LinkWrapper to={`/info/pool/${poolData.address}`}>\n      <ResponsiveGrid>\n        <Text>{index + 1}</Text>\n        <Flex>\n          <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} />\n          <Text ml=\"8px\">\n            {poolData.token0.symbol}/{poolData.token1.symbol}\n          </Text>\n        </Flex>\n        <Text>${formatAmount(poolData.volumeUSD)}</Text>\n        <Text>${formatAmount(poolData.volumeUSDWeek)}</Text>\n        <Text>${formatAmount(poolData.lpFees24h)}</Text>\n        <Text>{formatAmount(poolData.lpApr7d)}%</Text>\n        <Text>${formatAmount(poolData.liquidityUSD)}</Text>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\ninterface PoolTableProps {\n  poolDatas: PoolData[]\n  loading?: boolean // If true shows indication that SOME pools are loading, but the ones already fetched will be shown\n}\n\nconst PoolTable: React.FC<PoolTableProps> = ({ poolDatas, loading }) => {\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.volumeUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n  const { t } = useTranslation()\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (poolDatas.length % ITEMS_PER_INFO_TABLE_PAGE === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(poolDatas.length / ITEMS_PER_INFO_TABLE_PAGE) + extraPages)\n  }, [poolDatas])\n\n  const sortedPools = useMemo(() => {\n    return poolDatas\n      ? poolDatas\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof PoolData] > b[sortField as keyof PoolData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            }\n            return -1\n          })\n          .slice(ITEMS_PER_INFO_TABLE_PAGE * (page - 1), page * ITEMS_PER_INFO_TABLE_PAGE)\n      : []\n  }, [page, poolDatas, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  return (\n    <TableWrapper>\n      <ResponsiveGrid>\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          #\n        </Text>\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Pool')}\n        </Text>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 24H')} {arrow(SORT_FIELD.volumeUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSDWeek)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 7D')} {arrow(SORT_FIELD.volumeUSDWeek)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.lpFees24h)}\n          textTransform=\"uppercase\"\n        >\n          {t('LP reward fees 24H')} {arrow(SORT_FIELD.lpFees24h)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.lpApr7d)}\n          textTransform=\"uppercase\"\n        >\n          {t('LP reward APR')} {arrow(SORT_FIELD.lpApr7d)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.tvlUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Liquidity')} {arrow(SORT_FIELD.tvlUSD)}\n        </ClickableColumnHeader>\n      </ResponsiveGrid>\n      <Break />\n      {sortedPools.length > 0 ? (\n        <>\n          {sortedPools.map((poolData, i) => {\n            if (poolData) {\n              return (\n                <React.Fragment key={poolData.address}>\n                  <DataRow index={(page - 1) * ITEMS_PER_INFO_TABLE_PAGE + i} poolData={poolData} />\n                  <Break />\n                </React.Fragment>\n              )\n            }\n            return null\n          })}\n          {loading && <LoadingRow />}\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n            </Arrow>\n\n            <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n\n            <Arrow\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n            </Arrow>\n          </PageButtons>\n        </>\n      ) : (\n        <>\n          <TableLoader />\n          {/* spacer */}\n          <Box />\n        </>\n      )}\n    </TableWrapper>\n  )\n}\n\nexport default PoolTable\n","import React, { useEffect, Dispatch, SetStateAction } from 'react'\nimport { format } from 'date-fns'\nimport { BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Bar } from 'recharts'\nimport useTheme from 'hooks/useTheme'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { BarChartLoader } from 'views/Info/components/ChartLoaders'\n\nexport type LineChartProps = {\n  data: any[]\n  height?: string\n  chartHeight?: string\n  setHoverValue: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setHoverDate: Dispatch<SetStateAction<string | undefined>> // used for label of value\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CustomBar = ({\n  x,\n  y,\n  width,\n  height,\n  fill,\n}: {\n  x: number\n  y: number\n  width: number\n  height: number\n  fill: string\n}) => {\n  return (\n    <g>\n      <rect x={x} y={y} fill={fill} width={width} height={height} rx=\"2\" />\n    </g>\n  )\n}\n\n// Calls setHoverValue and setHoverDate when part of chart is hovered\n// Note: this NEEDs to be wrapped inside component and useEffect, if you plug it as is it will create big render problems (try and see console)\nconst HoverUpdater = ({ payload, setHoverValue, setHoverDate }) => {\n  useEffect(() => {\n    setHoverValue(payload.value)\n    setHoverDate(format(payload.time, 'MMM d, yyyy'))\n  }, [payload.value, payload.time, setHoverValue, setHoverDate])\n\n  return null\n}\n\nconst Chart = ({ data, setHoverValue, setHoverDate }: LineChartProps) => {\n  const { theme } = useTheme()\n  if (!data || data.length === 0) {\n    return <BarChartLoader />\n  }\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart\n        data={data}\n        margin={{\n          top: 5,\n          right: 15,\n          left: 0,\n          bottom: 5,\n        }}\n        onMouseLeave={() => {\n          setHoverDate(undefined)\n          setHoverValue(undefined)\n        }}\n      >\n        <XAxis\n          dataKey=\"time\"\n          axisLine={false}\n          tickLine={false}\n          tickFormatter={(time) => format(time, 'dd')}\n          minTickGap={10}\n        />\n        <YAxis\n          dataKey=\"value\"\n          tickCount={6}\n          scale=\"linear\"\n          axisLine={false}\n          tickLine={false}\n          color={theme.colors.textSubtle}\n          fontSize=\"12px\"\n          tickFormatter={(val) => `$${formatAmount(val)}`}\n          orientation=\"right\"\n          tick={{ dx: 10, fill: theme.colors.textSubtle }}\n        />\n        <Tooltip\n          cursor={{ fill: theme.colors.backgroundDisabled }}\n          contentStyle={{ display: 'none' }}\n          formatter={(tooltipValue, name, props) => (\n            <HoverUpdater payload={props.payload} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n          )}\n        />\n        <Bar\n          dataKey=\"value\"\n          fill={theme.colors.primary}\n          shape={(props) => (\n            <CustomBar height={props.height} width={props.width} x={props.x} y={props.y} fill={theme.colors.primary} />\n          )}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default Chart\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","// TODO PCS refactor ternaries\n/* eslint-disable no-nested-ternary */\nimport React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { formatDistanceToNowStrict } from 'date-fns'\nimport { Text, Flex, Box, Radio, Skeleton, LinkExternal, ArrowForwardIcon, ArrowBackIcon } from '@glide-finance/uikit'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport { Transaction, TransactionType } from 'state/info/types'\nimport { ITEMS_PER_INFO_TABLE_PAGE } from 'config/constants/info'\nimport { useTranslation } from 'contexts/Localization'\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n  grid-template-columns: 2fr 0.8fr repeat(4, 1fr);\n  padding: 0 24px;\n  @media screen and (max-width: 940px) {\n    grid-template-columns: 2fr repeat(4, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 2fr repeat(2, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n    & > *:nth-child(3) {\n      display: none;\n    }\n    & > *:nth-child(4) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 2fr 1fr;\n    & > *:nth-child(5) {\n      display: none;\n    }\n    & > *:nth-child(3) {\n      display: none;\n    }\n    & > *:nth-child(4) {\n      display: none;\n    }\n    & > *:nth-child(2) {\n      display: none;\n    }\n  }\n`\n\nconst RadioGroup = styled(Flex)`\n  align-items: center;\n  margin-right: 16px;\n  margin-top: 8px;\n  cursor: pointer;\n`\n\nconst SORT_FIELD = {\n  amountUSD: 'amountUSD',\n  timestamp: 'timestamp',\n  sender: 'sender',\n  amountToken0: 'amountToken0',\n  amountToken1: 'amountToken1',\n}\n\nconst TableLoader: React.FC = () => {\n  const loadingRow = (\n    <ResponsiveGrid>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </ResponsiveGrid>\n  )\n  return (\n    <>\n      {loadingRow}\n      {loadingRow}\n      {loadingRow}\n    </>\n  )\n}\n\nconst DataRow: React.FC<{ transaction: Transaction }> = ({ transaction }) => {\n  const { t } = useTranslation()\n  const abs0 = Math.abs(transaction.amountToken0)\n  const abs1 = Math.abs(transaction.amountToken1)\n  const outputTokenSymbol = transaction.amountToken0 < 0 ? transaction.token0Symbol : transaction.token1Symbol\n  const inputTokenSymbol = transaction.amountToken1 < 0 ? transaction.token0Symbol : transaction.token1Symbol\n\n  return (\n    <ResponsiveGrid>\n      <LinkExternal href={getBscScanLink(transaction.hash, 'transaction')}>\n        <Text>\n          {transaction.type === TransactionType.MINT\n            ? t('Add %token0% and %token1%', { token0: transaction.token0Symbol, token1: transaction.token1Symbol })\n            : transaction.type === TransactionType.SWAP\n            ? t('Swap %token0% for %token1%', { token0: inputTokenSymbol, token1: outputTokenSymbol })\n            : t('Remove %token0% and %token1%', { token0: transaction.token0Symbol, token1: transaction.token1Symbol })}\n        </Text>\n      </LinkExternal>\n      <Text>${formatAmount(transaction.amountUSD)}</Text>\n      <Text>\n        <Text>{`${formatAmount(abs0)} ${transaction.token0Symbol}`}</Text>\n      </Text>\n      <Text>\n        <Text>{`${formatAmount(abs1)} ${transaction.token1Symbol}`}</Text>\n      </Text>\n      <LinkExternal href={getBscScanLink(transaction.sender, 'address')}>\n        {truncateHash(transaction.sender)}\n      </LinkExternal>\n      <Text>{formatDistanceToNowStrict(parseInt(transaction.timestamp, 10) * 1000)}</Text>\n    </ResponsiveGrid>\n  )\n}\n\nconst TransactionTable: React.FC<{\n  transactions: Transaction[]\n}> = ({ transactions }) => {\n  const [sortField, setSortField] = useState(SORT_FIELD.timestamp)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  const { t } = useTranslation()\n\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  const [txFilter, setTxFilter] = useState<TransactionType | undefined>(undefined)\n\n  const sortedTransactions = useMemo(() => {\n    return transactions\n      ? transactions\n          .slice()\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof Transaction] > b[sortField as keyof Transaction]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            }\n            return -1\n          })\n          .filter((x) => {\n            return txFilter === undefined || x.type === txFilter\n          })\n          .slice(ITEMS_PER_INFO_TABLE_PAGE * (page - 1), page * ITEMS_PER_INFO_TABLE_PAGE)\n      : []\n  }, [transactions, page, sortField, sortDirection, txFilter])\n\n  // Update maxPage based on amount of items & applied filtering\n  useEffect(() => {\n    if (transactions) {\n      const filteredTransactions = transactions.filter((tx) => {\n        return txFilter === undefined || tx.type === txFilter\n      })\n      if (filteredTransactions.length % ITEMS_PER_INFO_TABLE_PAGE === 0) {\n        setMaxPage(Math.floor(filteredTransactions.length / ITEMS_PER_INFO_TABLE_PAGE))\n      } else {\n        setMaxPage(Math.floor(filteredTransactions.length / ITEMS_PER_INFO_TABLE_PAGE) + 1)\n      }\n    }\n  }, [transactions, txFilter])\n\n  const handleFilter = useCallback(\n    (newFilter: TransactionType) => {\n      if (newFilter !== txFilter) {\n        setTxFilter(newFilter)\n        setPage(1)\n      }\n    },\n    [txFilter],\n  )\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  return (\n    <Wrapper>\n      <Flex mb=\"16px\">\n        <Flex flexDirection={['column', 'row']}>\n          <RadioGroup onClick={() => handleFilter(undefined)}>\n            <Radio onChange={() => null} scale=\"sm\" checked={txFilter === undefined} />\n            <Text ml=\"8px\">{t('All')}</Text>\n          </RadioGroup>\n\n          <RadioGroup onClick={() => handleFilter(TransactionType.SWAP)}>\n            <Radio onChange={() => null} scale=\"sm\" checked={txFilter === TransactionType.SWAP} />\n            <Text ml=\"8px\">{t('Swaps')}</Text>\n          </RadioGroup>\n        </Flex>\n\n        <Flex flexDirection={['column', 'row']}>\n          <RadioGroup onClick={() => handleFilter(TransactionType.MINT)}>\n            <Radio onChange={() => null} scale=\"sm\" checked={txFilter === TransactionType.MINT} />\n            <Text ml=\"8px\">{t('Adds')}</Text>\n          </RadioGroup>\n\n          <RadioGroup onClick={() => handleFilter(TransactionType.BURN)}>\n            <Radio onChange={() => null} scale=\"sm\" checked={txFilter === TransactionType.BURN} />\n            <Text ml=\"8px\">{t('Removes')}</Text>\n          </RadioGroup>\n        </Flex>\n      </Flex>\n      <TableWrapper>\n        <ResponsiveGrid>\n          <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n            {t('Action')}\n          </Text>\n          <ClickableColumnHeader\n            color=\"secondary\"\n            fontSize=\"12px\"\n            bold\n            onClick={() => handleSort(SORT_FIELD.amountUSD)}\n            textTransform=\"uppercase\"\n          >\n            {t('Total Value')} {arrow(SORT_FIELD.amountUSD)}\n          </ClickableColumnHeader>\n          <ClickableColumnHeader\n            color=\"secondary\"\n            fontSize=\"12px\"\n            bold\n            onClick={() => handleSort(SORT_FIELD.amountToken0)}\n            textTransform=\"uppercase\"\n          >\n            {t('Token Amount')} {arrow(SORT_FIELD.amountToken0)}\n          </ClickableColumnHeader>\n          <ClickableColumnHeader\n            color=\"secondary\"\n            fontSize=\"12px\"\n            bold\n            onClick={() => handleSort(SORT_FIELD.amountToken1)}\n            textTransform=\"uppercase\"\n          >\n            {t('Token Amount')} {arrow(SORT_FIELD.amountToken1)}\n          </ClickableColumnHeader>\n          <ClickableColumnHeader\n            color=\"secondary\"\n            fontSize=\"12px\"\n            bold\n            onClick={() => handleSort(SORT_FIELD.sender)}\n            textTransform=\"uppercase\"\n          >\n            {t('Account')} {arrow(SORT_FIELD.sender)}\n          </ClickableColumnHeader>\n          <ClickableColumnHeader\n            color=\"secondary\"\n            fontSize=\"12px\"\n            bold\n            onClick={() => handleSort(SORT_FIELD.timestamp)}\n            textTransform=\"uppercase\"\n          >\n            {t('Time')} {arrow(SORT_FIELD.timestamp)}\n          </ClickableColumnHeader>\n        </ResponsiveGrid>\n        <Break />\n\n        {transactions ? (\n          <>\n            {sortedTransactions.map((transaction, index) => {\n              if (transaction) {\n                return (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <React.Fragment key={index}>\n                    <DataRow transaction={transaction} />\n                    <Break />\n                  </React.Fragment>\n                )\n              }\n              return null\n            })}\n            {sortedTransactions.length === 0 ? (\n              <Flex justifyContent=\"center\">\n                <Text>{t('No Transactions')}</Text>\n              </Flex>\n            ) : undefined}\n            <PageButtons>\n              <Arrow\n                onClick={() => {\n                  setPage(page === 1 ? page : page - 1)\n                }}\n              >\n                <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n              </Arrow>\n\n              <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n              <Arrow\n                onClick={() => {\n                  setPage(page === maxPage ? page : page + 1)\n                }}\n              >\n                <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n              </Arrow>\n            </PageButtons>\n          </>\n        ) : (\n          <>\n            <TableLoader />\n            {/* spacer */}\n            <Box />\n          </>\n        )}\n      </TableWrapper>\n    </Wrapper>\n  )\n}\n\nexport default TransactionTable\n","import React, { useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, Heading, Card, Skeleton } from '@glide-finance/uikit'\nimport { format, fromUnixTime } from 'date-fns'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/Layout/Page'\nimport LineChart from 'views/Info/components/InfoCharts/LineChart'\nimport TokenTable from 'views/Info/components/InfoTables/TokensTable'\nimport PoolTable from 'views/Info/components/InfoTables/PoolsTable'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport BarChart from 'views/Info/components/InfoCharts/BarChart'\nimport {\n  useAllPoolData,\n  useAllTokenData,\n  useProtocolChartData,\n  useProtocolData,\n  useProtocolTransactions,\n} from 'state/info/hooks'\nimport TransactionTable from 'views/Info/components/InfoTables/TransactionsTable'\n\nexport const ChartCardsContainer = styled(Flex)`\n  justify-content: space-between;\n  flex-direction: column;\n  width: 100%;\n  padding: 0;\n  gap: 1em;\n\n  & > * {\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  } ;\n`\n\nconst Overview: React.FC = () => {\n  const { t } = useTranslation()\n  const [liquidityHover, setLiquidityHover] = useState<number | undefined>()\n  const [liquidityDateHover, setLiquidityDateHover] = useState<string | undefined>()\n  const [volumeHover, setVolumeHover] = useState<number | undefined>()\n  const [volumeDateHover, setVolumeDateHover] = useState<string | undefined>()\n\n  const [protocolData] = useProtocolData()\n  const [chartData] = useProtocolChartData()\n  const [transactions] = useProtocolTransactions()\n\n  const currentDate = format(new Date(), 'MMM d, yyyy')\n\n  // Getting latest liquidity and volumeUSD to display on top of chart when not hovered\n  useEffect(() => {\n    if (volumeHover == null && protocolData) {\n      setVolumeHover(protocolData.volumeUSD)\n    }\n  }, [protocolData, volumeHover])\n  useEffect(() => {\n    if (liquidityHover == null && protocolData) {\n      setLiquidityHover(protocolData.liquidityUSD)\n    }\n  }, [liquidityHover, protocolData])\n\n  const formattedLiquidityData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.liquidityUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n\n  const allTokens = useAllTokenData()\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens)\n      .map((token) => token.data)\n      .filter((token) => token)\n  }, [allTokens])\n\n  const allPoolData = useAllPoolData()\n  const poolDatas = useMemo(() => {\n    return Object.values(allPoolData)\n      .map((pool) => pool.data)\n      .filter((pool) => pool)\n  }, [allPoolData])\n\n  const somePoolsAreLoading = useMemo(() => {\n    return Object.values(allPoolData).some((pool) => !pool.data)\n  }, [allPoolData])\n\n  return (\n    <Page>\n      <Heading scale=\"lg\" mb=\"16px\" id=\"info-overview-title\">\n        {t('Glide Info & Analytics')}\n      </Heading>\n      <ChartCardsContainer>\n        <Card>\n          <Box p={['16px', '16px', '24px']}>\n            <Text bold color=\"secondary\">\n              {t('Liquidity')}\n            </Text>\n            {liquidityHover > 0 ? (\n              <Text bold fontSize=\"24px\">\n                ${formatAmount(liquidityHover)}\n              </Text>\n            ) : (\n              <Skeleton width=\"128px\" height=\"36px\" />\n            )}\n            <Text>{liquidityDateHover ?? currentDate}</Text>\n            <Box height=\"250px\">\n              <LineChart\n                data={formattedLiquidityData}\n                setHoverValue={setLiquidityHover}\n                setHoverDate={setLiquidityDateHover}\n              />\n            </Box>\n          </Box>\n        </Card>\n        <Card>\n          <Box p={['16px', '16px', '24px']}>\n            <Text bold color=\"secondary\">\n              {t('Volume 24H')}\n            </Text>\n            {volumeHover > 0 ? (\n              <Text bold fontSize=\"24px\">\n                ${formatAmount(volumeHover)}\n              </Text>\n            ) : (\n              <Skeleton width=\"128px\" height=\"36px\" />\n            )}\n            <Text>{volumeDateHover ?? currentDate}</Text>\n            <Box height=\"250px\">\n              <BarChart data={formattedVolumeData} setHoverValue={setVolumeHover} setHoverDate={setVolumeDateHover} />\n            </Box>\n          </Box>\n        </Card>\n      </ChartCardsContainer>\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\">\n        {t('Top Tokens')}\n      </Heading>\n      <TokenTable tokenDatas={formattedTokens} />\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\">\n        {t('Top Pools')}\n      </Heading>\n      <PoolTable poolDatas={poolDatas} loading={somePoolsAreLoading} />\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\">\n        {t('Transactions')}\n      </Heading>\n      <TransactionTable transactions={transactions} />\n    </Page>\n  )\n}\n\nexport default Overview\n","import React, { useMemo } from 'react'\nimport { Text, Heading, Card } from '@glide-finance/uikit'\nimport Page from 'components/Layout/Page'\nimport PoolTable from 'views/Info/components/InfoTables/PoolsTable'\nimport { useAllPoolData, usePoolDatas } from 'state/info/hooks'\nimport { useWatchlistPools } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nconst PoolsOverview: React.FC = () => {\n  const { t } = useTranslation()\n\n  // get all the pool datas that exist\n  const allPoolData = useAllPoolData()\n  const poolDatas = useMemo(() => {\n    return Object.values(allPoolData)\n      .map((pool) => pool.data)\n      .filter((pool) => pool)\n  }, [allPoolData])\n\n  const [savedPools] = useWatchlistPools()\n  const watchlistPools = usePoolDatas(savedPools)\n\n  return (\n    <Page>\n      <Heading scale=\"lg\" mb=\"16px\">\n        {t('Your Watchlist')}\n      </Heading>\n      <Card>\n        {watchlistPools.length > 0 ? (\n          <PoolTable poolDatas={watchlistPools} />\n        ) : (\n          <Text px=\"24px\" py=\"16px\">\n            {t('Saved pools will appear here')}\n          </Text>\n        )}\n      </Card>\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\" id=\"info-pools-title\">\n        {t('All Pools')}\n      </Heading>\n      <PoolTable poolDatas={poolDatas} />\n    </Page>\n  )\n}\n\nexport default PoolsOverview\n","import { ChainId, Currency, currencyEquals, JSBI, Price, WETH } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { USDC, GLIDE } from '../config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst USDC_MAINNET = USDC[ChainId.MAINNET]\n\n/**\n * Returns the price in USDC of the input currency\n * @param currency currency to compute the USDC price of\n */\nexport default function useUSDCPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [\n        chainId && wrapped && currencyEquals(WETH[chainId], wrapped) ? undefined : currency,\n        chainId ? WETH[chainId] : undefined,\n      ],\n      [wrapped?.equals(USDC_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? USDC_MAINNET : undefined],\n      [chainId ? WETH[chainId] : undefined, chainId === ChainId.MAINNET ? USDC_MAINNET : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n  const [[ethPairState, ethPair], [usdcPairState, usdcPair], [usdcEthPairState, usdcEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WETH[chainId])) {\n      if (usdcPair) {\n        const price = usdcPair.priceOf(WETH[chainId])\n        return new Price(currency, USDC_MAINNET, price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle usdc\n    if (wrapped.equals(USDC_MAINNET)) {\n      return new Price(USDC_MAINNET, USDC_MAINNET, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WETH[chainId])\n    const ethPairETHUSDCValue: JSBI =\n      ethPairETHAmount && usdcEthPair ? usdcEthPair.priceOf(WETH[chainId]).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the usdc pair\n    if (\n      usdcPairState === PairState.EXISTS &&\n      usdcPair &&\n      usdcPair.reserveOf(USDC_MAINNET).greaterThan(ethPairETHUSDCValue)\n    ) {\n      const price = usdcPair.priceOf(wrapped)\n      return new Price(currency, USDC_MAINNET, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && usdcEthPairState === PairState.EXISTS && usdcEthPair) {\n      if (usdcEthPair.reserveOf(USDC_MAINNET).greaterThan('0') && ethPair.reserveOf(WETH[chainId]).greaterThan('0')) {\n        const ethUsdcPrice = usdcEthPair.priceOf(USDC_MAINNET)\n        const currencyEthPrice = ethPair.priceOf(WETH[chainId])\n        const usdcPrice = ethUsdcPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, USDC_MAINNET, usdcPrice.denominator, usdcPrice.numerator)\n      }\n    }\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, usdcEthPair, usdcEthPairState, usdcPair, usdcPairState, wrapped])\n}\n\nexport const useCakeUsdcPrice = (): Price | undefined => {\n  const { chainId } = useActiveWeb3React()\n  const currentChaindId = chainId || ChainId.MAINNET\n  const glideUsdcPrice = useUSDCPrice(GLIDE[currentChaindId])\n  return glideUsdcPrice\n}\n","import React, { useMemo, useState } from 'react'\nimport { Text, Box, Card, Flex, Skeleton } from '@glide-finance/uikit'\nimport LineChart from 'views/Info/components/InfoCharts/LineChart'\nimport BarChart from 'views/Info/components/InfoCharts/BarChart'\nimport CandleChart from 'views/Info/components/InfoCharts/CandleChart'\nimport { TabToggleGroup, TabToggle } from 'components/TabToggle'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { ChartEntry, TokenData, PriceChartEntry } from 'state/info/types'\nimport { format, fromUnixTime } from 'date-fns'\n\nenum ChartView {\n  LIQUIDITY,\n  VOLUME,\n  PRICE,\n}\n\ninterface ChartCardProps {\n  variant: 'pool' | 'token'\n  chartData: ChartEntry[]\n  tokenData?: TokenData\n  tokenPriceData?: PriceChartEntry[]\n}\n\nconst ChartCard: React.FC<ChartCardProps> = ({ variant, chartData, tokenData, tokenPriceData }) => {\n  const [view, setView] = useState(ChartView.PRICE)\n  const [hoverValue, setHoverValue] = useState<number | undefined>()\n  const [hoverDate, setHoverDate] = useState<string | undefined>()\n  const { t } = useTranslation()\n\n  const currentDate = format(new Date(), 'MMM d, yyyy')\n\n  const formattedTvlData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.liquidityUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n\n  const getLatestValueDisplay = () => {\n    let valueToDisplay = null\n    if (hoverValue) {\n      valueToDisplay = formatAmount(hoverValue)\n    } else if (view === ChartView.VOLUME && formattedVolumeData.length > 0) {\n      valueToDisplay = formatAmount(formattedVolumeData[formattedVolumeData.length - 1]?.value)\n    } else if (view === ChartView.LIQUIDITY && formattedTvlData.length > 0) {\n      valueToDisplay = formatAmount(formattedTvlData[formattedTvlData.length - 1]?.value)\n    } else if (view === ChartView.PRICE && tokenData?.priceUSD) {\n      valueToDisplay = formatAmount(tokenData.priceUSD)\n    }\n\n    return valueToDisplay ? (\n      <Text fontSize=\"24px\" bold>\n        ${valueToDisplay}\n      </Text>\n    ) : (\n      <Skeleton height=\"36px\" width=\"128px\" />\n    )\n  }\n\n  return (\n    <Card>\n      <TabToggleGroup>\n       {variant === 'token' && (\n          <TabToggle isActive={view === ChartView.PRICE} onClick={() => setView(ChartView.PRICE)}>\n            <Text>{t('Price')}</Text>\n          </TabToggle>\n        )}\n        <TabToggle isActive={view === ChartView.VOLUME} onClick={() => setView(ChartView.VOLUME)}>\n          <Text>{t('Volume')}</Text>\n        </TabToggle>\n        <TabToggle isActive={view === ChartView.LIQUIDITY} onClick={() => setView(ChartView.LIQUIDITY)}>\n          <Text>{t('Liquidity')}</Text>\n        </TabToggle>\n       \n      </TabToggleGroup>\n\n      <Flex flexDirection=\"column\" px=\"24px\" pt=\"24px\">\n        {getLatestValueDisplay()}\n        <Text small color=\"secondary\">\n          {hoverDate || currentDate}\n        </Text>\n      </Flex>\n\n      <Box px=\"24px\" height={variant === 'token' ? '250px' : '335px'}>\n        {view === ChartView.LIQUIDITY ? (\n          <LineChart data={formattedTvlData} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n        ) : view === ChartView.VOLUME ? (\n          <BarChart data={formattedVolumeData} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n        ) : view === ChartView.PRICE ? (\n          <CandleChart data={tokenPriceData} setValue={setHoverValue} setLabel={setHoverDate} />\n        ) : null}\n      </Box>\n    </Card>\n  )\n}\n\nexport default ChartCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { useCakeUsdcPrice } from 'hooks/useUSDCPrice'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = useCakeUsdcPrice()\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n  if (symbol) {\n    pageTitle = [symbol, title].join(' - ')\n  }\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  symbol?: string\n}\n\nconst Page1: React.FC<PageProps> = ({ children, symbol, ...props }) => {\n  return (\n    <>\n      <PageMeta symbol={symbol} />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page1\n","import React, { useRef, useState, useEffect, useCallback, Dispatch, SetStateAction } from 'react'\nimport { createChart, IChartApi } from 'lightweight-charts'\nimport { format } from 'date-fns'\nimport useTheme from 'hooks/useTheme'\nimport { CandleChartLoader } from 'views/Info/components/ChartLoaders'\n\nconst CANDLE_CHART_HEIGHT = 250\n\nexport type LineChartProps = {\n  data: any[]\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for value label on hover\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CandleChart = ({ data, setValue, setLabel, ...rest }: LineChartProps) => {\n  const { theme } = useTheme()\n  const chartRef = useRef<HTMLDivElement>(null)\n  const [chartCreated, setChart] = useState<IChartApi | undefined>()\n\n  const handleResize = useCallback(() => {\n    if (chartCreated && chartRef?.current?.parentElement) {\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, CANDLE_CHART_HEIGHT)\n      chartCreated.timeScale().fitContent()\n      chartCreated.timeScale().scrollToPosition(0, false)\n    }\n  }, [chartCreated, chartRef])\n\n  // add event listener for resize\n  const isClient = typeof window === 'object'\n  useEffect(() => {\n    if (!isClient) {\n      return null\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, chartRef, handleResize]) // Empty array ensures that effect is only run on mount and unmount\n\n  // if chart not instantiated in canvas, create it\n  useEffect(() => {\n    if (!chartCreated && data && !!chartRef?.current?.parentElement) {\n      const chart = createChart(chartRef.current, {\n        height: CANDLE_CHART_HEIGHT,\n        width: chartRef.current.parentElement.clientWidth - 32,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: theme.colors.textSubtle,\n          fontFamily: 'Kanit, sans-serif',\n          fontSize: 12,\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: 0.1,\n            bottom: 0.1,\n          },\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n          secondsVisible: true,\n          tickMarkFormatter: (unixTime: number) => {\n            return format(unixTime * 1000, 'MM/dd h:mm a')\n          },\n        },\n        watermark: {\n          visible: false,\n        },\n        grid: {\n          horzLines: {\n            visible: false,\n          },\n          vertLines: {\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: false,\n            labelVisible: false,\n          },\n          mode: 1,\n          vertLine: {\n            visible: true,\n            labelVisible: false,\n            style: 3,\n            width: 1,\n            color: theme.colors.textSubtle,\n            labelBackgroundColor: theme.colors.primary,\n          },\n        },\n      })\n\n      chart.timeScale().fitContent()\n      setChart(chart)\n    }\n  }, [chartCreated, data, setValue, theme])\n\n  useEffect(() => {\n    if (chartCreated && data) {\n      const series = chartCreated.addCandlestickSeries({\n        upColor: theme.colors.success,\n        downColor: theme.colors.failure,\n        borderDownColor: theme.colors.failure,\n        borderUpColor: theme.colors.success,\n        wickDownColor: theme.colors.failure,\n        wickUpColor: theme.colors.success,\n      })\n\n      series.setData(data)\n\n      // update the title when hovering on the chart\n      chartCreated.subscribeCrosshairMove((param) => {\n        if (\n          chartRef?.current &&\n          (param === undefined ||\n            param.time === undefined ||\n            (param && param.point && param.point.x < 0) ||\n            (param && param.point && param.point.x > chartRef.current.clientWidth) ||\n            (param && param.point && param.point.y < 0) ||\n            (param && param.point && param.point.y > CANDLE_CHART_HEIGHT))\n        ) {\n          // reset values\n          if (setValue) setValue(undefined)\n          if (setLabel) setLabel(undefined)\n        } else if (series && param) {\n          const timestamp = param.time as number\n          const now = new Date(timestamp * 1000)\n          const utc = new Date(now.getTime() + now.getTimezoneOffset() * 60000)\n          const time = `${format(utc, 'MMM d, yyyy h:mm a')} (UTC)`\n          const parsed = param.seriesPrices.get(series) as { open: number } | undefined\n          if (setValue) setValue(parsed?.open)\n          if (setLabel) setLabel(time)\n        }\n      })\n    }\n  }, [chartCreated, data, setValue, setLabel, theme])\n\n  return (\n    <>\n      {!chartCreated && <CandleChartLoader />}\n      <div ref={chartRef} id=\"candle-chart\" {...rest} />\n    </>\n  )\n}\n\nexport default CandleChart\n","import React from 'react'\nimport { Flex } from '@glide-finance/uikit'\nimport styled from 'styled-components'\n\nconst Wrapper = styled(Flex)`\n  overflow-x: scroll;\n  padding: 0;\n  border-radius: 24px 24px 0 0;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  scrollbar-width: none; /* Firefox */\n`\n\nconst Inner = styled(Flex)`\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.colors.input};\n  width: 100%;\n`\n\ninterface TabProps {\n  isActive?: boolean\n  onClick?: () => void\n}\n\nexport const TabToggle = styled.button<TabProps>`\n  display: inline-flex;\n  justify-content: center;\n  cursor: pointer;\n  flex: 1;\n  border: 0;\n  outline: 0;\n  padding: 16px;\n  margin: 0;\n  border-radius: 24px 24px 0 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: ${({ theme, isActive }) => (isActive ? theme.colors.text : theme.colors.textSubtle)};\n  background-color: ${({ theme, isActive }) => (isActive ? theme.card.background : theme.colors.input)};\n`\n\ninterface TabToggleGroupProps {\n  children: React.ReactElement[]\n}\n\nexport const TabToggleGroup: React.FC<TabToggleGroupProps> = ({ children }) => {\n  return (\n    <Wrapper p={['0 4px', '0 16px']}>\n      <Inner>{children}</Inner>\n    </Wrapper>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState } from 'react'\nimport { RouteComponentProps, Link } from 'react-router-dom'\nimport {\n  Text,\n  Flex,\n  Box,\n  Button,\n  Card,\n  Breadcrumbs,\n  Heading,\n  ButterflyLoader,\n  LinkExternal,\n  useMatchBreakpoints,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport Page1 from 'components/Layout/Page1'\nimport { getBscScanLink } from 'utils'\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport SaveIcon from 'views/Info/components/SaveIcon'\nimport { usePoolDatas, usePoolChartData, usePoolTransactions } from 'state/info/hooks'\nimport TransactionTable from 'views/Info/components/InfoTables/TransactionsTable'\nimport { useWatchlistPools } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport ChartCard from 'views/Info/components/InfoCharts/ChartCard'\n\nconst ContentLayout = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-gap: 1em;\n  margin-top: 16px;\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\n\nconst TokenButton = styled(Flex)`\n  padding: 8px 0px;\n  margin-right: 16px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst LockedTokensContainer = styled(Flex)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n  padding: 16px;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 8px;\n  border-radius: 16px;\n  max-width: 280px;\n`\n\nconst PoolPage: React.FC<RouteComponentProps<{ address: string }>> = ({\n  match: {\n    params: { address: routeAddress },\n  },\n}) => {\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const [showWeeklyData, setShowWeeklyData] = useState(0)\n  const { tooltip, tooltipVisible, targetRef } = useTooltip(\n    t(`Based on last 7 days' performance. Does not account for impermanent loss`),\n    {},\n  )\n\n  // Needed to scroll up if user comes to this page by clicking on entry in the table\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  // In case somebody pastes checksummed address into url (since GraphQL expects lowercase address)\n  const address = routeAddress.toLowerCase()\n\n  const poolData = usePoolDatas([address])[0]\n  const chartData = usePoolChartData(address)\n  const transactions = usePoolTransactions(address)\n\n  const [watchlistPools, addPoolToWatchlist] = useWatchlistPools()\n\n  return (\n    <Page1 symbol={poolData ? `${poolData?.token0.symbol} / ${poolData?.token1.symbol}` : null}>\n      {poolData ? (\n        <>\n          <Flex justifyContent=\"space-between\" mb=\"16px\" flexDirection={['column', 'column', 'row']}>\n            <Breadcrumbs mb=\"32px\">\n              <Link to=\"/info\">\n                <Text color=\"primary\">{t('Info')}</Text>\n              </Link>\n              <Link to=\"/info/pools\">\n                <Text color=\"primary\">{t('Pools')}</Text>\n              </Link>\n              <Flex>\n                <Text mr=\"8px\">{`${poolData.token0.symbol} / ${poolData.token1.symbol}`}</Text>\n              </Flex>\n            </Breadcrumbs>\n            <Flex justifyContent={[null, null, 'flex-end']} mt={['8px', '8px', 0]}>\n              <LinkExternal mr=\"8px\" href={getBscScanLink(address, 'address')}>\n                {t('View on explorer')}\n              </LinkExternal>\n              <SaveIcon fill={watchlistPools.includes(address)} onClick={() => addPoolToWatchlist(address)} />\n            </Flex>\n          </Flex>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb={['8px', null]}>\n              <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} size={32} />\n              <Text\n                ml=\"38px\"\n                bold\n                fontSize={isXs || isSm ? '24px' : '40px'}\n                id=\"info-pool-pair-title\"\n              >{`${poolData.token0.symbol} / ${poolData.token1.symbol}`}</Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\" flexDirection={['column', 'column', 'column', 'row']}>\n              <Flex flexDirection={['column', 'column', 'row']} mb={['8px', '8px', null]}>\n                <Link to={`/info/token/${poolData.token0.address}`}>\n                  <TokenButton>\n                    <CurrencyLogo address={poolData.token0.address} size=\"24px\" />\n                    <Text fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width=\"fit-content\">\n                      {`1 ${poolData.token0.symbol} =  ${formatAmount(poolData.token1Price, {\n                        notation: 'standard',\n                        displayThreshold: 0.001,\n                        tokenPrecision: true,\n                      })} ${poolData.token1.symbol}`}\n                    </Text>\n                  </TokenButton>\n                </Link>\n                <Link to={`/info/token/${poolData.token1.address}`}>\n                  <TokenButton ml={[null, null, '10px']}>\n                    <CurrencyLogo address={poolData.token1.address} size=\"24px\" />\n                    <Text fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width=\"fit-content\">\n                      {`1 ${poolData.token1.symbol} =  ${formatAmount(poolData.token0Price, {\n                        notation: 'standard',\n                        displayThreshold: 0.001,\n                        tokenPrecision: true,\n                      })} ${poolData.token0.symbol}`}\n                    </Text>\n                  </TokenButton>\n                </Link>\n              </Flex>\n              <Flex>\n                <Link to={`/add/${poolData.token0.address}/${poolData.token1.address}`}>\n                  <Button mr=\"8px\" variant=\"secondary\">\n                    {t('Add Liquidity')}\n                  </Button>\n                </Link>\n                <Link to={`/swap?inputCurrency=${poolData.token0.address}&outputCurrency=${poolData.token1.address}`}>\n                  <Button>{t('Trade')}</Button>\n                </Link>\n              </Flex>\n            </Flex>\n          </Flex>\n          <ContentLayout>\n            <Box>\n              <Card>\n                <Box p=\"24px\">\n                  <Flex justifyContent=\"space-between\">\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                        {t('Liquidity')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        ${formatAmount(poolData.liquidityUSD)}\n                      </Text>\n                      <Percent value={poolData.liquidityUSDChange} />\n                    </Flex>\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                        {t('LP reward APR')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        {formatAmount(poolData.lpApr7d)}%\n                      </Text>\n                      <Flex alignItems=\"center\">\n                        <span ref={targetRef}>\n                          <HelpIcon color=\"textSubtle\" />\n                        </span>\n                        <Text ml=\"4px\" fontSize=\"12px\" color=\"textSubtle\">\n                          {t('7D performance')}\n                        </Text>\n                        {tooltipVisible && tooltip}\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  <Text color=\"secondary\" bold mt=\"24px\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Total Tokens Locked')}\n                  </Text>\n                  <LockedTokensContainer>\n                    <Flex justifyContent=\"space-between\">\n                      <Flex>\n                        <CurrencyLogo address={poolData.token0.address} size=\"24px\" />\n                        <Text small color=\"textSubtle\" ml=\"8px\">\n                          {poolData.token0.symbol}\n                        </Text>\n                      </Flex>\n                      <Text small>{formatAmount(poolData.liquidityToken0)}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                      <Flex>\n                        <CurrencyLogo address={poolData.token1.address} size=\"24px\" />\n                        <Text small color=\"textSubtle\" ml=\"8px\">\n                          {poolData.token1.symbol}\n                        </Text>\n                      </Flex>\n                      <Text small>{formatAmount(poolData.liquidityToken1)}</Text>\n                    </Flex>\n                  </LockedTokensContainer>\n                </Box>\n              </Card>\n              <Card mt=\"16px\">\n                <Flex flexDirection=\"column\" p=\"24px\">\n                  <ButtonMenu\n                    activeIndex={showWeeklyData}\n                    onItemClick={(index) => setShowWeeklyData(index)}\n                    scale=\"sm\"\n                    variant=\"subtle\"\n                  >\n                    <ButtonMenuItem width=\"100%\">{t('24H')}</ButtonMenuItem>\n                    <ButtonMenuItem width=\"100%\">{t('7D')}</ButtonMenuItem>\n                  </ButtonMenu>\n                  <Flex mt=\"24px\">\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n                        {showWeeklyData ? t('Volume 7D') : t('Volume 24H')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        ${showWeeklyData ? formatAmount(poolData.volumeUSDWeek) : formatAmount(poolData.volumeUSD)}\n                      </Text>\n                      <Percent value={showWeeklyData ? poolData.volumeUSDChangeWeek : poolData.volumeUSDChange} />\n                    </Flex>\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n                        {showWeeklyData ? t('LP reward fees 7D') : t('LP reward fees 24H')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        ${showWeeklyData ? formatAmount(poolData.lpFees7d) : formatAmount(poolData.lpFees24h)}\n                      </Text>\n                      <Text color=\"textSubtle\" fontSize=\"12px\">\n                        {t('out of $%totalFees% total fees', {\n                          totalFees: showWeeklyData\n                            ? formatAmount(poolData.totalFees7d)\n                            : formatAmount(poolData.totalFees24h),\n                        })}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Card>\n            </Box>\n            <ChartCard variant=\"pool\" chartData={chartData} />\n          </ContentLayout>\n          <Heading mb=\"16px\" mt=\"40px\" scale=\"lg\">\n            {t('Transactions')}\n          </Heading>\n          <TransactionTable transactions={transactions} />\n        </>\n      ) : (\n        <Flex mt=\"80px\" justifyContent=\"center\">\n          <ButterflyLoader />\n        </Flex>\n      )}\n    </Page1>\n  )\n}\n\nexport default PoolPage\n","import React, { useMemo, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box, Card } from '@glide-finance/uikit'\nimport { Link } from 'react-router-dom'\nimport { useAllTokenData } from 'state/info/hooks'\nimport { TokenData } from 'state/info/types'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CardWrapper = styled(Link)`\n  display: inline-block;\n  min-width: 190px;\n  margin-left: 16px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst TopMoverCard = styled(Box)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  padding: 16px;\n`\n\nexport const ScrollableRow = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  padding: 16px 0;\n  white-space: nowrap;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst DataCard = ({ tokenData }: { tokenData: TokenData }) => {\n  return (\n    <CardWrapper to={`/info/token/${tokenData.address}`}>\n      <TopMoverCard>\n        <Flex>\n          <Box width=\"32px\" height=\"32px\">\n            {/* wrapped in a box because of alignment issues between img and svg */}\n            <CurrencyLogo address={tokenData.address} size=\"32px\" />\n          </Box>\n          <Box ml=\"16px\">\n            <Text>{tokenData.symbol}</Text>\n            <Flex alignItems=\"center\">\n              <Text fontSize=\"14px\" mr=\"6px\" lineHeight=\"16px\">\n                ${formatAmount(tokenData.priceUSD)}\n              </Text>\n              <Percent fontSize=\"14px\" value={tokenData.priceUSDChange} />\n            </Flex>\n          </Box>\n        </Flex>\n      </TopMoverCard>\n    </CardWrapper>\n  )\n}\n\nconst TopTokenMovers: React.FC = () => {\n  const allTokens = useAllTokenData()\n  const { t } = useTranslation()\n\n  const topPriceIncrease = useMemo(() => {\n    return Object.values(allTokens)\n      .sort(({ data: a }, { data: b }) => {\n        // eslint-disable-next-line no-nested-ternary\n        return a && b ? (Math.abs(a?.priceUSDChange) > Math.abs(b?.priceUSDChange) ? -1 : 1) : -1\n      })\n      .slice(0, Math.min(20, Object.values(allTokens).length))\n  }, [allTokens])\n\n  const increaseRef = useRef<HTMLDivElement>(null)\n  const moveLeftRef = useRef<boolean>(true)\n\n  useEffect(() => {\n    const scrollInterval = setInterval(() => {\n      if (increaseRef.current) {\n        if (increaseRef.current.scrollLeft === increaseRef.current.scrollWidth - increaseRef.current.clientWidth) {\n          moveLeftRef.current = false\n        } else if (increaseRef.current.scrollLeft === 0) {\n          moveLeftRef.current = true\n        }\n        increaseRef.current.scrollTo(\n          moveLeftRef.current ? increaseRef.current.scrollLeft + 1 : increaseRef.current.scrollLeft - 1,\n          0,\n        )\n      }\n    }, 30)\n\n    return () => {\n      clearInterval(scrollInterval)\n    }\n  }, [])\n\n  if (topPriceIncrease.length === 0 || !topPriceIncrease.some((entry) => entry.data)) {\n    return null\n  }\n\n  return (\n    <Card my=\"16px\">\n      <Text ml=\"16px\" mt=\"8px\">\n        {t('Top Movers')}\n      </Text>\n      <ScrollableRow ref={increaseRef}>\n        {topPriceIncrease.map((entry) =>\n          entry.data ? <DataCard key={`top-card-token-${entry.data?.address}`} tokenData={entry.data} /> : null,\n        )}\n      </ScrollableRow>\n    </Card>\n  )\n}\n\nexport default TopTokenMovers\n","import React, { useMemo, useEffect } from 'react'\nimport { Text, Heading, Card } from '@glide-finance/uikit'\nimport Page from 'components/Layout/Page'\nimport TokenTable from 'views/Info/components/InfoTables/TokensTable'\nimport { useAllTokenData, useTokenDatas } from 'state/info/hooks'\nimport { useWatchlistTokens } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport TopTokenMovers from 'views/Info/components/TopTokenMovers'\n\nconst TokensOverview: React.FC = () => {\n  const { t } = useTranslation()\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const allTokens = useAllTokenData()\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens)\n      .map((token) => token.data)\n      .filter((token) => token)\n  }, [allTokens])\n\n  const [savedTokens] = useWatchlistTokens()\n  const watchListTokens = useTokenDatas(savedTokens)\n\n  return (\n    <Page>\n      <Heading scale=\"lg\" mb=\"16px\">\n        {t('Your Watchlist')}\n      </Heading>\n      {savedTokens.length > 0 ? (\n        <TokenTable tokenDatas={watchListTokens} />\n      ) : (\n        <Card>\n          <Text py=\"16px\" px=\"24px\">\n            {t('Saved tokens will appear here')}\n          </Text>\n        </Card>\n      )}\n      <TopTokenMovers />\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\" id=\"info-tokens-title\">\n        {t('All Tokens')}\n      </Heading>\n      <TokenTable tokenDatas={formattedTokens} />\n    </Page>\n  )\n}\n\nexport default TokensOverview\n","import { useState, useEffect } from 'react'\n\n// endpoint to check asset exists and get url to CMC page\n// returns 400 status code if token is not on CMC\nconst CMC_ENDPOINT = 'https://3rdparty-apis.coinmarketcap.com/v1/cryptocurrency/contract?address='\n\n/**\n * Check if asset exists on CMC, if exists\n * return  url, if not return undefined\n * @param address token address (all lowercase, checksummed are not supported by CMC)\n */\nconst useCMCLink = (address: string): string | undefined => {\n  const [cmcPageUrl, setCMCPageUrl] = useState<string | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchLink = async () => {\n      const result = await fetch(`${CMC_ENDPOINT}${address}`)\n      // if link exists, format the url\n      if (result.status === 200) {\n        result.json().then(({ data }) => {\n          setCMCPageUrl(data.url)\n        })\n      }\n    }\n    if (address) {\n      fetchLink()\n    }\n  }, [address])\n\n  return cmcPageUrl\n}\n\nexport default useCMCLink\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useMemo } from 'react'\nimport { RouteComponentProps, Link } from 'react-router-dom'\nimport { Duration } from 'date-fns'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Box,\n  Heading,\n  Button,\n  Card,\n  Flex,\n  Breadcrumbs,\n  Link as UIKitLink,\n  LinkExternal,\n  ButterflyLoader,\n  Image,\n  useMatchBreakpoints,\n} from '@glide-finance/uikit'\nimport Page1 from 'components/Layout/Page1'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useCMCLink from 'views/Info/hooks/useCMCLink'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport SaveIcon from 'views/Info/components/SaveIcon'\nimport {\n  usePoolDatas,\n  useTokenData,\n  usePoolsForToken,\n  useTokenChartData,\n  useTokenPriceData,\n  useTokenTransactions,\n} from 'state/info/hooks'\nimport PoolTable from 'views/Info/components/InfoTables/PoolsTable'\nimport TransactionTable from 'views/Info/components/InfoTables/TransactionsTable'\nimport { useWatchlistTokens } from 'state/user/hooks'\nimport { ONE_HOUR_SECONDS } from 'config/constants/info'\nimport { useTranslation } from 'contexts/Localization'\nimport ChartCard from 'views/Info/components/InfoCharts/ChartCard'\n\nconst ContentLayout = styled.div`\n  margin-top: 16px;\n  display: grid;\n  grid-template-columns: 260px 1fr;\n  grid-gap: 1em;\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\n\nconst StyledCMCLink = styled(UIKitLink)`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n\n  & :hover {\n    opacity: 0.8;\n  }\n`\nconst DEFAULT_TIME_WINDOW: Duration = { weeks: 4 }\n\nconst TokenPage: React.FC<RouteComponentProps<{ address: string }>> = ({\n  match: {\n    params: { address: routeAddress },\n  },\n}) => {\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  // Needed to scroll up if user comes to this page by clicking on entry in the table\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  // In case somebody pastes checksummed address into url (since GraphQL expects lowercase address)\n  const address = routeAddress.toLowerCase()\n\n  const cmcLink = useCMCLink(address)\n\n  const tokenData = useTokenData(address)\n  const poolsForToken = usePoolsForToken(address)\n  const poolDatas = usePoolDatas(poolsForToken ?? [])\n  const transactions = useTokenTransactions(address)\n  const chartData = useTokenChartData(address)\n\n  // pricing data\n  const priceData = useTokenPriceData(address, ONE_HOUR_SECONDS, DEFAULT_TIME_WINDOW)\n  const adjustedPriceData = useMemo(() => {\n    // Include latest available price\n    if (priceData && tokenData && priceData.length > 0) {\n      return [\n        ...priceData,\n        {\n          time: new Date().getTime() / 1000,\n          open: priceData[priceData.length - 1].close,\n          close: tokenData?.priceUSD,\n          high: tokenData?.priceUSD,\n          low: priceData[priceData.length - 1].close,\n        },\n      ]\n    }\n    return undefined\n  }, [priceData, tokenData])\n\n  const [watchlistTokens, addWatchlistToken] = useWatchlistTokens()\n\n  return (\n    <Page1 symbol={tokenData?.symbol}>\n      {tokenData ? (\n        !tokenData.exists ? (\n          <Card>\n            <Box p=\"16px\">\n              <Text>\n                {t('No pool has been created with this token yet. Create one')}\n                <Link style={{ display: 'inline', marginLeft: '6px' }} to={`/add/${address}`}>\n                  {t('here.')}\n                </Link>\n              </Text>\n            </Box>\n          </Card>\n        ) : (\n          <>\n            {/* Stuff on top */}\n            <Flex justifyContent=\"space-between\" mb=\"24px\" flexDirection={['column', 'column', 'row']}>\n              <Breadcrumbs mb=\"32px\">\n                <Link to=\"/info\">\n                  <Text color=\"primary\">{t('Info')}</Text>\n                </Link>\n                <Link to=\"/info/tokens\">\n                  <Text color=\"primary\">{t('Tokens')}</Text>\n                </Link>\n                <Flex>\n                  <Text mr=\"8px\">{tokenData.symbol}</Text>\n                  <Text>{`(${truncateHash(address)})`}</Text>\n                </Flex>\n              </Breadcrumbs>\n              <Flex justifyContent={[null, null, 'flex-end']} mt={['8px', '8px', 0]}>\n                <LinkExternal mr=\"8px\" color=\"primary\" href={getBscScanLink(address, 'address')}>\n                  {t('View on explorer')}\n                </LinkExternal>\n                {cmcLink && (\n                  <StyledCMCLink href={cmcLink} rel=\"noopener noreferrer nofollow\" target=\"_blank\">\n                    <Image src=\"/images/CMC-logo.svg\" height={22} width={22} alt={t('View token on CoinMarketCap')} />\n                  </StyledCMCLink>\n                )}\n                <SaveIcon fill={watchlistTokens.includes(address)} onClick={() => addWatchlistToken(address)} />\n              </Flex>\n            </Flex>\n            <Flex justifyContent=\"space-between\" flexDirection={['column', 'column', 'column', 'row']}>\n              <Flex flexDirection=\"column\" mb={['8px', null]}>\n                <Flex alignItems=\"center\">\n                  <CurrencyLogo size=\"32px\" address={address} />\n                  <Text\n                    ml=\"12px\"\n                    bold\n                    lineHeight=\"0.7\"\n                    fontSize={isXs || isSm ? '24px' : '40px'}\n                    id=\"info-token-name-title\"\n                  >\n                    {tokenData.name}\n                  </Text>\n                  <Text ml=\"12px\" lineHeight=\"1\" color=\"textSubtle\" fontSize={isXs || isSm ? '14px' : '20px'}>\n                    ({tokenData.symbol})\n                  </Text>\n                </Flex>\n                <Flex mt=\"8px\" ml=\"46px\" alignItems=\"center\">\n                  <Text mr=\"16px\" bold fontSize=\"24px\">\n                    ${formatAmount(tokenData.priceUSD, { notation: 'standard' })}\n                  </Text>\n                  <Percent value={tokenData.priceUSDChange} fontWeight={600} />\n                </Flex>\n              </Flex>\n              <Flex>\n                <Link to={`/add/${address}`}>\n                  <Button mr=\"8px\" variant=\"secondary\">\n                    {t('Add Liquidity')}\n                  </Button>\n                </Link>\n                <Link to={`/swap?inputCurrency=${address}`}>\n                  <Button>{t('Trade')}</Button>\n                </Link>\n              </Flex>\n            </Flex>\n\n            {/* data on the right side of chart */}\n            <ContentLayout>\n              <Card>\n                <Box p=\"24px\">\n                  <Text bold small color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Liquidity')}\n                  </Text>\n                  <Text bold fontSize=\"24px\">\n                    ${formatAmount(tokenData.liquidityUSD)}\n                  </Text>\n                  <Percent value={tokenData.liquidityUSDChange} />\n\n                  <Text mt=\"24px\" bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Volume 24H')}\n                  </Text>\n                  <Text bold fontSize=\"24px\" textTransform=\"uppercase\">\n                    ${formatAmount(tokenData.volumeUSD)}\n                  </Text>\n                  <Percent value={tokenData.volumeUSDChange} />\n\n                  <Text mt=\"24px\" bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Volume 7D')}\n                  </Text>\n                  <Text bold fontSize=\"24px\">\n                    ${formatAmount(tokenData.volumeUSDWeek)}\n                  </Text>\n\n                  <Text mt=\"24px\" bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Transactions 24H')}\n                  </Text>\n                  <Text bold fontSize=\"24px\">\n                    {formatAmount(tokenData.txCount, { isInteger: true })}\n                  </Text>\n                </Box>\n              </Card>\n              {/* charts card */}\n              <ChartCard\n                variant=\"token\"\n                chartData={chartData}\n                tokenData={tokenData}\n                tokenPriceData={adjustedPriceData}\n              />\n            </ContentLayout>\n\n            {/* pools and transaction tables */}\n            <Heading scale=\"lg\" mb=\"16px\" mt=\"40px\">\n              {t('Pools')}\n            </Heading>\n\n            <PoolTable poolDatas={poolDatas} />\n\n            <Heading scale=\"lg\" mb=\"16px\" mt=\"40px\">\n              {t('Transactions')}\n            </Heading>\n\n            <TransactionTable transactions={transactions} />\n          </>\n        )\n      ) : (\n        <Flex mt=\"80px\" justifyContent=\"center\">\n          <ButterflyLoader />\n        </Flex>\n      )}\n    </Page1>\n  )\n}\n\nexport default TokenPage\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport { isAddress } from 'ethers/lib/utils'\nimport TokenPage from './TokenPage'\n\nconst RedirectInvalidToken = (props: RouteComponentProps<{ address: string }>) => {\n  const {\n    match: {\n      params: { address },\n    },\n  } = props\n\n  // In case somebody pastes checksummed address into url (since GraphQL expects lowercase address)\n  if (!isAddress(address.toLowerCase())) {\n    return <Redirect to=\"/\" />\n  }\n  return <TokenPage {...props} />\n}\n\nexport default RedirectInvalidToken\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { PoolUpdater, ProtocolUpdater, TokenUpdater } from 'state/info/updaters'\nimport InfoNav from './components/InfoNav'\nimport Overview from './Overview'\nimport Pools from './Pools'\nimport PoolPage from './Pools/PoolPage'\nimport Tokens from './Tokens'\nimport RedirectInvalidToken from './Tokens/redirects'\n\nconst Info: React.FC = () => {\n  return (\n    <>\n      <ProtocolUpdater />\n      <PoolUpdater />\n      <TokenUpdater />\n      <InfoNav />\n      <Route path=\"/info\" exact>\n        <Overview />\n      </Route>\n      <Route path=\"/info/pools\" exact>\n        <Pools />\n      </Route>\n      <Route path=\"/info/tokens\" exact>\n        <Tokens />\n      </Route>\n      <Route exact path={['/info/tokens/:address', '/info/token/:address']} component={RedirectInvalidToken} />\n      <Route exact path={['/info/pools/:address', '/info/pool/:address', '/info/pair/:address']} component={PoolPage} />\n    </>\n  )\n}\n\nexport default Info\n"],"sourceRoot":""}